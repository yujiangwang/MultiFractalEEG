%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: F.eps
%%Creator: Adobe Illustrator(R) 22.1
%%For: Lucas França
%%CreationDate: 15/09/2018
%%BoundingBox: 0 0 1016 717
%%HiResBoundingBox: 0 0 1015.2785 716.0425
%%CropBox: 0 0 1015.2785 716.0425
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.1.0 x312 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="Ôªø" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161356, 2017/09/07-01:11:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmp:CreatorTool>Adobe Illustrator CC 22.1 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2018-09-15T01:51:33+01:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>184</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAuAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8AkXmTzz56WWG40xr+efRN&#xA;W1TXPNFpbyJwh06w1BrKG0dZJI6wvZwyPxjDcno4U1JCr1z8sr++vfKvK7lkuRbX2o2dpeSuZJJ7&#xA;W0vpoLeVmarMWijX4j9r7XfFWV4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FVKC0tbd5nghjie5k9a4ZFCmSTiqc3IHxNxRVqewGKpLDrulabqkm&#xA;gRW0dra2FrFLClvxPFXcRJGttEOajkwC0H3bVVTVdSt2UMEnoRUVt5wfuKYq3+kIP5Jv+RE3/NGK&#xA;tNqdqpUMJgXNFBgm3NCaD4PAYq3+kIP5Jv8AkRN/zRirv0hB/JN/yIm/5oxVptTtVKhhMC5ooME2&#xA;5oTQfB4DFW/0hB/JN/yIm/5oxV36Qg/km/5ETf8ANGKtHU7UOEIm5kEhfQmqQKAn7HuMVb/SEH8k&#xA;3/Iib/mjFXfpCD+Sb/kRN/zRirQ1O1LlAJuYAJX0JqgGoB+x7HFW/wBIQfyTf8iJv+aMVd+kIP5J&#xA;v+RE3/NGKtLqdqxYKJiUNGAgm2NAaH4PA4q3+kIP5Jv+RE3/ADRirv0hB/JN/wAiJv8AmjFWl1O1&#xA;cVUTEAkVEE3VTQj7HYjFW/0hB/JN/wAiJv8AmjFXfpCD+Sb/AJETf80Yq0up2riqiYgEiogm6qaE&#xA;fY7EYq3+kIP5Jv8AkRN/zRirv0hB/JN/yIm/5oxVpNTtXRXQTMjAFWEE1CDuD9jFW/0hB/JN/wAi&#xA;Jv8AmjFWn1O1RGdxMqKCWYwTUAG5P2MVb/SEH8k3/Iib/mjFXfpCD+Sb/kRN/wA0Yqsk1azjaMSC&#xA;ZPVdY1ZoJgvJ2CqC3DitWYDc4qjMVdiqD1GGExK5RS5mt6tQVPGdCN/Y4qjMVdirRVSVJAJU1Uns&#xA;aUqPoOKt4q7FWiqkqSASpqpPY0pUfQcVbxV2KtcVLBqDkAQG7gGlR+GKt4q7FWuKhi1ByIALdyBW&#xA;g/HFW8VdirQVQWIABY1YjuaUqfoGKt4q7FWlVVFFAUVJoNtyak/ScVbxV2KtKqqKKAoqTQbbk1J+&#xA;k4q3irsVaVVRQqgKqiiqNgAOwxVvFWmVXUqwDKwoyncEHscVbxV2KoXUVVrdAwBHrwGh8RMhGKor&#xA;FUPqUdzLp11HatxuXhkWBuXGkhUhTyFab98VY5baf5mS7+tX84EJhs4BCZXmUTxzpykVQIl+LflW&#xA;p6UNMVZUvIKORBanxECgJ9hU4q3irsVdirsVdirsVdirsVdirsVdirsVdirsVdiqF1WX09Pnalar&#xA;x/4M8f45PGLkGGQ1EorIM3Yq7FXYq7FXYq7FXYq7FXYq7FUJqYlMUXBlCieDmCpJI9ZOhqKfjiqL&#xA;xVhfkzVLu980+Yf9OS9012jmsQtyJwi1ZPhj4qEU8Krx2Pud8VZJfXtq0xsRIPrUbW0zxUNRG9wF&#xA;VvDcoRiqYYq7FXYq7FXYq7FXYq7FVqyKzOo6oeLfOgb9RxpFrsUuxV2KuxV2KrZJFjjaRtlQFmPs&#xA;BXEBBNLsUpbrlxELKWEn94eHw/6zEj/iBy3EN7aspFUjvrEX1f6xX91w9Tl/k0rX7srremy9rVMC&#xA;XYqtEimRo/2lAYj2YkD/AIjjSLXYpdirsVWiRTI0f7SgMR7MSB/xHGkWuxS7FXYqhtQ/uF/4zQf8&#xA;nkxVE4qw7yPpGrRarq2sanbzwy34hSJrmSPkUjDGi20Zm9BRz2Uzt/qpiqeajpVkbptQZC1xMLa1&#xA;kDMShiS4DgcD8PVzviqaKqooVQFVRRVGwAHYYq3irsVdirSsrKGUgqRUEbgg4q3irsVa5LyK1HIA&#xA;EjvQ9P1YqgrO9t5L2+hWRGMUkZNGBp6iKqg+BqpyyUTQLXGQshHZW2NKysKqQRUio8QaHFW8VaVl&#xA;YVUgipFR4g0OKt4qhtTmiisLhpXWNfTccmIArxPjkoAkhhMgAr7S4E9tDJyUtJGkh4ns4qD8jjIU&#xA;UxNhjfmOdBqgQSAMxt0KVoTRLpyKd+oOZOEen5/71xsx9Xy/3yNMsQ8kgl1AbT+Ckkbt6FKfOuQr&#xA;97/nfpZ3+6/zf0J7mO5DQdCzKGBZaclB3FelcaW0Fb3KSaxeRpIriKCAMqkHi5eaoNO9AMsMaiPe&#xA;f0NYlcj7h+lGqysKqQRUio8QaHK2xwdSxQEcwAStdwDWhp70OKt4ql6TRJrEzM6hZbWEo1RQiN5S&#xA;xr8nrlhB4fj+prBHF8B+lMMrbGmZVFWIAqBU+JNBireKoTU4oniiZ0VmSeAoxAJU+snTwxVF4qgt&#xA;ZfUk0q5bTVD3wQ+gpp9r25ELWnSu1euKse0+484yyq2qwenCILMGM+miC7E6+oeSeqzB/uWnQ1ri&#xA;rLV5FRyADU+IA1APsaDFVtxMkEEk8hpHErO59lFThAs0gmha/AlQubyK3ZVcElldhQdoxyP4ZKMb&#xA;YykAgtE1SG50SO7APCKMFhShoEDDav8AKRk8uMidMMWQGFplJKiRNKT8CqWJG+wFcrAbCXRSLLEk&#xA;i1CuoYA9aEVxIpQbSy01OKbW7uEcgEVIVBAp6kZd3pSuxV1plsoVAFqjMGZDEtHvBBca1NJySSd7&#xA;SKAAf76lkXlWvvmXkjYiPe4eOVGR9zPmnjW4SA/3kiPIo/yUKhv+JjNfW1uxvekBoGox3mm2kwqT&#xA;dxtcLUAfCz13Hb7eWZYcMiO5rxTuIPejBeQG0e6B/coHYnbolan8Mhwm6Z8Qq0D5fvYZ4riFK84Z&#xA;5Wkr0HryNMo/4FxXLM0SKPl92zXhkCCPP790xhuI5ZJkWvKBxG9fEor7fQ4yoim0G7Yt5/1CA20G&#xA;j8mFxfSJCtAKUuuVshO/QSSKT7Zl6SBsy6D9G7iauQoR6n9OzvJuvWM0dvZIzl1jjs4+QFeVrF+8&#xA;rQ+OOpxEWfj8102UGh8PkgNd0+e+83WV7bkejG80MwJ/aRUhU0Ff256ZZimI4yD+Ov6GvLAyyAj8&#xA;dP0qV1qkUui6dokYdb0+ryDCigLCftGtf93r27H2wxhUjPp+39iJTuAh1/Z+1ntvcRzxl468Q7xm&#xA;u3xRuUb8VzXkU7AG0rXUra3125tpaiSdY2j6UopjiPf+adct4CYA/j8bNXGBMj8fjdJvLOrwG71L&#xA;UX5ejetdzxkDpBYMiVIrsxMx29u2X58ZoR7q+Z/saMGQWZd9/Z/amug69Z3M9xYAsbiK5vFYtSlY&#xA;rg/D1r9lxT2ynLiIAPSh9zbiygkx62fvVLTU7WXXrpFrUrDbA0FPUja5Zuh8EOCUCID5/cmMwZn5&#xA;femF1fQWyyNJU+lE87haE8I+u1e/bK4xJbZTAYBrHm21s7LT5maQubNomIUEmQQce5p9qdD8s2OP&#xA;TmRI8/0/sddk1AAB8v0ftZ9b6hb3ErRJyDLz6j/fcjRN/wAMua4wIdjGYKB8x6rDY2qBuXquwkjC&#xA;0P8AckSkNUjYhKZZhxmRa82QRCaxyLJGki/ZcBl+RFcqIptBtB6tM0aWyBQRLcwoSWoRSQNsKGuy&#xA;nEBSUdgS7FUBqt7ZRQlZbiONont5JQzqpRDOoDNU7KSDucIFoJpKNT84Wr291baZW41BgIrNYyRz&#xA;d9nKtQisO5cduO9MyYac2DLYdfx5uNPUCiI8+n48nTa4NWjayhhkSYl0lt2DKXjZXiYkkL8NWVla&#xA;u/bEYuDcqcvHsEFba7rsdmkUltK9zLbQ2kczOApu1RlkfcdfXPA/6vL7OTlihfPayfh/YwjlnXLo&#xA;B8f7UVeXU+r+jf6czUs1kWazP2nS5YIrMvVSIl9QAjowyMYiG0uvX3ft2ZSkZ7x6dPf+zdYUv7W5&#xA;n0yytWDSsswiDARmB2ktnPM7DhGscnGteg8cOxAkT/bz/WEbgmIH9nL9RQ36S8xJp8dnNaNHNfB7&#xA;W2q9aMxMiV+EcaQE/Lj47CXBDiu+W/4+LHjnw1XPb8fBW03XptMjtrTU2k4abHLZ3dy4b99JGnOK&#xA;QAA8meK3dqV25DuwyM8QlZj/ABb/AI+JZQymNCX8O36vsCnJouuWwj163aSS6MzXdxpnIKTHMyEx&#xA;cvsloowR79sIywPoPLlf472JxTHrHPnX47kdqvl2s1nLbUJtYZ3mtxQG4dYwIq9/hkbkO1crx5uY&#xA;PX7O9syYeRHT7e5ATHzFrdpGll6lncaegie8ZipmkeP0rhQCEp6b1YGpDFctHBA77g9PuazxzG2x&#xA;HX71Sax8xW3mF7yyiK6XYILe2s1cBbkynmagV4KjShQT0416YBKBhR+o9e5JjMTsfSOnegy2uwQR&#xA;+VnWWadmUT3qmlbNwLdpq8WXl6jcyla9e1TkvQT4n2efOmPrA8P7fLkriDW/L06XMds11bzgTXqR&#xA;OAfWMZjEYB5FqyGMLT9WC4ZBV0en4+aanjN1Y6qlrrF3o097camssh1MNd2Nsqsz1CjjBxUMefEq&#xA;h/1ffBLGJgCP8Ox/WmOQwJMv4tx+pWsNMbWtaGuXaj6tCQLO3b4iOBBR+1NwJBUdwRkZZOCPAOfV&#xA;lDHxy4zy6Kep+U7izAu9Hcpci6luHap+COWjOFHf7NKD+Y4YagHaXKmM9ORvHnae6LYulhFJeRBb&#xA;6Ws1wCQSsjkNxLDZinFVr341yjJPfbk5GKG2/NA2/lm3+t3VwQkhJlFtIdyrOd+nThxCfRkznNAM&#xA;BgFkoKO/1uwsJII7R7q/kLXLRq3ERsH+NPirtI0cjKf2ssMISN3Q5fj7GsTnEVVnn+PtUbnyvr93&#xA;pNvJLcelre5mnDA8ePNkodq7rEPorhjngJHb0/j9rE4JmI39X4/Yj7/Rfqug29tpsQlaKkFw6GjN&#xA;E1FuPGpYoOW9crhl4pky/Hc2zxcMAI/jvSqPyzrekTyazb1vrwiGSSyQiISzuStyQ26rz+BjUdsu&#xA;OeExwnYb7+XRpGCUDxDc93n1WJ5Z8yaUlrewSte3UEz3N8nJVa4ZEWJdzWnqAyv7F6dsJzwnYOw5&#xA;Dy/G3yR4E4URueZ8/wAb/NVuV1jW1At+ccd1E1rcltqRzTrKW41G3oh1XfofGmRiYw59N/s/WmQl&#xA;Pl12+39SZp5Ptp4ZReKrM13NNFX4uELlUCLv3SJDlZ1BB27g2jTAjfvKQWUPmnQ7UJel5BCrLJf1&#xA;5Va5WQrVQG2W4ZSzVoOp75fM45nb5e79jRAZIDf5+/8Aajm0XXddZp75XsDvEsLssnFWkeQOChH+&#xA;6pBHT+3IeLDHsN/x+vdn4U8m52/H6tkZB5l+ppewNDJNcRBTZWtSHlMUSpNHGKH+7kQ8j0+Jf5hW&#xA;Bw8VHp1/QzGbhsdeiFlvdWvruyDwFbO0mti10W4hriK4EEqcW3+JZ6/7Gm56MoxjE77n7uY+5Yyl&#xA;KQ22H38j97M8xHLdirC/Ntloek3x129gnvH1Jlsmt0fii1VZmcFaNyIskCCu70ApyJwgqQylNKtE&#xA;ACmYUp/u+YnYca1L+G2C1pd+jreteU1fH15v+a8VYxrXmXSdN1S7sZoZ2lsbKXUI3a6kQMYkqUWr&#xA;GnJWIDfMdsVZFa2lnNbx3EbShZ1WSonl35KKbh99sVVf0fB/PN/yPm/5rxViGsectI0+61SCSCVp&#xA;dIMbL6t60PqGRVqELuKMRJRP5vYb4qy46dbMN2mI2I/fzHpuP28Vb/R8H883/I+b/mvFWIxeb9Jl&#xA;u+AtpxImorpZLXUvMCWT0w/EMW+2gqvYUJOKsu/R8H883/I+b/mvFXfo+D+eb/kfN/zXirDtL88a&#xA;DfSaZxguornVbj6sqGeWsarGZUaQ8uvxcOPUPyG/EnFWY/o+D+eb/kfN/wA14qoX8FnaWc95ILiR&#xA;bWN5iqTTM54KSQo5/aI2GKsc0DzTpmrala2cMEsb3cM80zi7kfjJbyeiVopJIZVDo7cQyUp1pirK&#xA;v0fB/PN/yPm/5rxVB6w1rpml3N+4nkW3QuUFxMK9tyX2HiewxVJfLfmbR9Z1FbC1huIS1mL5meeb&#xA;q5Uuq8WIPEyjkxI36A0airJv0fB/PN/yPm/5rxVK/Mt7Z6FpEuoyJPMsbRpwFxKorI4QFmLEKBy3&#xA;OKqWhXkGo3d3DFbyw2kKRTQzi7kcyfWObMGRWojKVqRyPUYqnP6Pg/nm/wCR83/NeKpP5o1Sx0Cz&#xA;t7maO5nWecQUSeUU+B5CTVuvGMhR+0xC98VWeWNU03WjqMVqk0UWmXT2asLmRldY9g68XpQ9uu3v&#xA;UBVO/wBHwfzzf8j5v+a8VSTzBqul6VfadYXSTvHqZkRpTcShEVSiHlV995gSP5Qzfs4qv8q6lb6/&#xA;pf1/6vdWdJHiMUlxMTVKV35CvEni1NuQNCRviqb/AKNtuQblNyAIB9eatD1/b9sVS3zCdP0ywS/u&#xA;FlmSG4tgEa5lVeUlxGisQWKtwZg1CO2Kp5irsVcVBFCKjY7+I3GKuxV2KrXijevNA1RQ1AOx2p+O&#xA;KrgAAABQDYAYq7FVjwwyV5orVpXkAa06dcVX4q7FVvpR8g3AcgahqCtaUr92KrsVdirQjQGoUA9a&#xA;077/ANTireKsHaD8wbB7iSy9W/b6wY4UvDbuhgX06SgJNbkFqybE+Gw7qr9Pu/zHksdSe/0u0srh&#xA;LCc2DWxVpGulLCBf7yZQOIU03Fe/bFUd5cuvNc2qyDVLb6tZqtwsAHJg0CyRizd2Zn/fOhm9QVrs&#xA;vIDbFWTkAggioOxBxVpY0U1VQDSlQKbVr/HFW8VcVDAhhUHqDirgoGwFB7Yq7FXFQRQio2O/iNxi&#xA;rSoiAhVCg7mgp7Yq3irTIrfaAanSor2p+o4q2AAAAKAbADFXYq06I68XUMuxoRUbGoxVvFXicv53&#xA;eZn83tY21vZjSGuoILQPa3TPJFLrE+ju814JVt7Yq1m8qeqn7yoRfi6qvTvIvmK48w+V7TU7qNIr&#xA;wvcW14kXL0xcWdxJazenyq3AyQsVqemKp9irsVdirsVdirsVdirsVdirsVdirsVdiqQ+efMU/l7y&#xA;xdanbIkl2Ht7a0SXkY/rF5cR2sJcKQ3ASTKWoRt3GKsWuvPfm1vK+u+cbFbAaJorX4/R00Mxu5Y9&#xA;JmeK5kMwmRI2k+ryenGYzSqsWO64q9FhljmhSaM8o5FDo24qrCoO+KrsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirCpPyt8j2mpXvmCe2mmuWla9dXuJfQQpM14ALYMkD8LqSSdfVRiHckGlAFUZ5Cv&#xA;NDh8qafb6YlyLeKP4lmjeWYSOxeQzPGvD1XZi7U8elCMVZB+kIP5Zv8AkRN/zRirTalaqKsJVFQK&#xA;mGYbk0A+x3OKt/pCD+Wb/kRN/wA0Yq79IQfyzf8AIib/AJoxVpdStWFVErCpFRDMdwaEfY7HFW/0&#xA;hB/LN/yIm/5oxVo6lagqCJQWNFBhm3NK0HweAxVv9IQfyzf8iJv+aMVd+kIP5Zv+RE3/ADRirS6l&#xA;auoZRKysKqwhmIIPcfBirf6Qg/lm/wCRE3/NGKrre+t55pIYywliVXdHR0IVywU/GFrXgemKq+Kp&#xA;f5h0Ky17RrrSb0utvdKAZIiFkRlYOkiEhgHR1DLUHcYqk2p/lp5X1BNQRlubZdWr+k47a5miguOZ&#xA;X1vVtQ31ZmmVOEj+lyIJoQd8VR83mzTodfk0WVJhPFAtwZVQuhDypEFATk9S0y0+GnXwOKpj+kIP&#xA;5Zv+RE3/ADRirv0hB/LN/wAiJv8AmjFWl1K2YVCzEVI/uJuoND+xirf6Qg/lm/5ETf8ANGKtfpK2&#xA;5BeM3IgkD0JugpX9j3xVv9IQfyzf8iJv+aMVabUrZVLMswVRUn0Jug/2GKt/pCD+Wb/kRN/zRirv&#xA;0hB/LN/yIm/5oxVoalbEsAs1VND+4m60r/J74q3+kIP5Zv8AkRN/zRirQ1K19aKE+qrzsUi5QyqC&#xA;wRnI5FQB8KHqcVRWKuxVxAIIIqDsQcVQ1moWa8VRRRMoAHQD0Y8VROKuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KoaP/AI6U/wDxhh/4lLiqJxV2KuxVLr+9sDc/UhLGb9TbzPACPUEJuFVWI68SwIGKpjirsVYt&#xA;e6x5xm1W9t9EtLOazs5FgaadyD6npJIw+Fx09SnTL4whVyNFnURztDz6r+Y9uvKWz0sbE0MkoNF6&#xA;nYtsO56DJDHjPIlTw+f2MfP5meZgA0g0uJT2LsT79ZV/hmR+THS2PFFTm/NDWirIt5pik7CSKOZy&#xA;D8jJT8DkvyI81Eh/NKXt+YnmKtf07EwJoBDa1/XE+SGkh3H7P1spSA/h+9WPnDzy0aul9clH3Rv0&#xA;Y/FvkxtwMB02Py+Y/WgTHd9/7FM+d/OKEevqk8Sn9o6eP1NEtfvwjS4z/agz7h+PmrReb/OM1BBq&#xA;l3KW+xw0oNX/AIFDidPiHP72PGf5o/HxT/yjqnnO41uKLVZrtrMq5ZZtPNuhIU8ayGNafflGfHjE&#xA;bjz94/Wmz3Bmt3/f2f8AxmP/ACZkzBVE4q7FVsyyNE6xv6cjKQklA3EkbNQ7GmKpP5V06902xksr&#xA;y9bUJoZAr3bqQ7n01PJqs3Ygf57Kp1irsVdirsVdirsVdirsVWzTRQxPLM6xxRgtJI5Cqqjckk7A&#xA;DEBWJt5q1PX53s/KcY+rI3C5164U+hHUbiCM0Mrr91euxrmT4IgLn8uv7GVAc060Ly/baRFKVllu&#xA;ry5KteXtw5eWVlFFrXYBRsoHQZVkycXkEE2io+X6UuKkcfRhoKb/AGpa71ytCKxV2KuxVJrzQNLS&#xA;/OrCIm+kMMBlZmb92blJCoUmn2wD7du+KpzirsVY/wCU1uZNGS5SFbVtSkmv5HJDml1K0iAdKsIy&#xA;oqQO2xy3Lzru2Zyq2/OHK18raitqhlvLyMWkVT8by3LCBPiNOhk27DJ6bfIL5Df5bteQ2KRMPlDy&#xA;rDGkcej2QVFCrWCNjQbCrFST9OQOaZ6llZTOGGGGMRQxrFGv2UQBVHyAysm0L8CuxV2KuxV2KoW8&#xA;VTcWJIBKzkqT2PoyDb78VRWKuxVbJIscbSNXigLHiCxoBXYCpP0YqlugarY6pDNe2UolgndZIz0P&#xA;ExINwdxupGKppirsVdirsVdirsVdirF/M35haJobfVkJv9SJCLZQGp5E04uwDcTXtQn2zIxaaU/c&#xA;y4epSiy8reYvNLx33nGQ2+n7Pb6FASi+xnINenavLfqv2csllhj2hue/9SeLuZ5BBBbwpBbxrDDG&#xA;AscUahVVR0CqNgMxCSdywX4FQsbKdUuFBBYQwkjuKtLTFUVirsVWy+r6T+kFMvE+mHJC8qbVIBNK&#xA;4qxKxsvPEWoyS6tewy6aZCIYl4lqtqCvbk8Uj+xb/C2++3huqy/FUo83TvD5a1D01Z5Z4jbQqnX1&#xA;LkiCP/h5BlmIXIMo80ytLaG1tYbWEcYYEWKJfBUAVR9wyEjZtikXmf07nV/LumOXAmvTdvw/lsYm&#xA;lXlsfh9X065kYNozl5V8/wBjE8wyLMZk7FXYq7FXYq7FXYqhbzl9YsaEAeueVR1HoydMVRWKuxVL&#xA;LbXNJ1O5fT4fUnDwesZPRl+rvE9FIE/H0ifipx5cuu2xxVV0u1trX61b20SwwRygJGgCqP3UZ2Ax&#xA;VHYq7FXYq7FXYqgNY13S9Ht/Xv5xEDXhGN3cjsqjc5KEDI7MhEl53qHm3zV5svG0vy9C1tbVpNKp&#xA;4sqN0aaUbICB9ldz75nx08MY4ppsDluynyf+X+l+X447iWl5q/H95eONlJG6xKfsj36n8Mx8+pM9&#xA;htHuYWWVZjK7FXYqho/+OlP/AMYYf+JS4qicVdiqVv5l0pb1bTlI7H1vUmSJ2iiNuKyCaQArH025&#xA;Ur2xVJ7Xzxpur6g+mW8MySwt6jO4UrW21D6o6jgX35IG/wBVhirLMVSLzEyz6noem8nUzXZupAle&#xA;Jjs0MlHoenrGPLcfIny+9kORT3KmLHrdjdefbt1koml6fHA0VOr3kpk5V9ltx9+ZMtsI/pSv5MRz&#xA;LIcxmTsVdirsVdirsVdiqFvGAuLEb7zkCgJ/3TId8VRWKuxVgXkiWVdS8xaZp1ktlZ2TyQwvHPI6&#xA;eqssgjKRzGQREj7dF48hXeuKsk8qxaxFp7R6vKsuoKUFy60NZBElTyCxg7U/YGKpzirsVdiqncXE&#xA;FvC008ixQoKvI5CqB7k4QLUBg/mD8yVRHj0dQFGzX0woo/1IzQntu23scy8WlMubMgR5pBoXk3W/&#xA;M902papNLBYy0P1mQ1uJ1PaMEfAlOjEU8BmRPNDEKjvJjKRPPk9Q0vStO0u0W00+Bbe3Xfgvcnqz&#xA;E7sx8TvmtnMyNlCLyKuxV2KuxVCx8v0pcVI4+jDQU3+1LXeuKorFXYqwXTphb/mje2FnYwxo8LTX&#xA;d0kkwZldY3YvEzelz9Zx8Sj7LexxVkP6Y0G7/cafd2084kid0gdGbityqMSFPQPUfPFU5xVIoH+t&#xA;ec7lll5R6ZZRwmKmyzXbmR96bn04Y+/fLTtD3n7mR5fj8d6e5UxY75ODTnWNUZFAv9Qm9CQULNDb&#xA;hbdQxHg8T0Hv75k6nbhj3RH62MOTIsxmTsVdirsVdirsVdiqGu/7+z/4zH/kzJiqJxV2KoDTdF0n&#xA;SEl+oWq26yUaURgktxBptuScVWaHqNnqMMl7aSepb3XpXMDUKkxTW8bIxU0YVHiMVTLFXYqkmu+b&#xA;LDSyYEH1q+7WyGlP9dt+P6/bLIYjJmIXv0ed61rGp6tfQR3HK6upHItrCAEoDxPRd+nUu39mbDHh&#xA;jEWVM+kWU+W/y+SJ47/XeNxdDeKyHxQxHty/34w/4Edq7HMfNqr2jsGDNsw1dirsVdirsVdiqFjZ&#xA;TqlwoILCGEkdxVpaYqisVdiqXReXdFhurm7htVjurtXS5mQsrusjcnqwNd232xVLo/KGhabOb+3i&#xA;druSREaWWR5Txmu0mk+2SPidQfoGKsixVIvKha4TU9SZ0kF9fztDIlCphgIto6Eddoa198ty7UO4&#xA;Mpc0x1m+Sw0m8vXPFbeF5Kjr8KkjBijxSAa5ckJ5QsDYeV9MtmiaGYW6SXEb15CeUepNyr39R2yW&#xA;efFMnzZBN8pV2KuxV2KuxV2KuxVC3iqbixJAJWclSex9GQbffiqKxV2KtMqspVhVWFCD3BxVBaTa&#xA;Wtmk9paRLBbQSJHDCgoqosMYCqB0AxVGSzRQxtLK6xxIKu7EBQPEk4qwnXPOFxeh7fSmNva/Ze+O&#xA;0jV/30Oq/OlcyseDvbKEefNjWlaff6vN9V0mMcQf9KvnqY0Lbtyb9tv8kH57bjLkY4xZazIy3L0X&#xA;y95X03RIT6AMt3IP9IvJN5HPWn+Svgo/E75r8uaUzvyVOMqV2KuxV2KuxV2KuxVDR/8AHSn/AOMM&#xA;P/EpcVROKuxVbL6vpP6QUy8T6YckLyptUgE0rirENNsPO8OoST6vfRy6cxRYbequyub4NG1Ujhr+&#xA;5PFvDanfFWS61fnT9Hvr5Qpa1gkmRX+yWRCwB+ZGSiLICYizSl5dsDp+g6fZMKPBbxrIP8viOf8A&#xA;w1cOWVyJQTe6V+f2SXRYtMMhj/S11b2LFd24TSqshX5Lvl+l2kZfzQSxl0DJcxWTsVdirsVdirsV&#xA;dirsVQt5y+sWNCAPXPKo6j0ZOmKorFXYqo3q3T2c6WjrHdtG4t5HFVWQqeDMO4DYqlnlaLV4bKSL&#xA;VpFmvlcetKprUmNKA0VQSq8QW7mu2Ksc843EsmpTRXc/+gW/AxW32VqUBLPTrudq/QK5mYIbWy46&#xA;G3NB6H5cvfMBE9xztNF6rT4ZLgH+T+VD3bv28RbkzDHsN5fcwrvehWVlaWNrHa2kSwW8Q4xxoKAD&#xA;/Pqc18pEmylWwK7FXYq7FXYq7FXYq7FULHy/SlxUDj6MNDXf7UtdqYqisVdiq2WQRxPIVZgiliqA&#xA;sxoK0AG5OKsP07zdq2qalNYXOiz2lvA6sl63IRyFLuNE4F1SodHqO9VbbpiqbecInudPttPERlS+&#xA;vbaGYg0CRrIJXY7b7Rcfpy7Dsb7gkGk8ylDHNUeW5866JaRuoSziub+YGtSOH1YKPetwDmTDbFI9&#xA;5A/T+hj1ZHmMydirsVdirsVdirsVdiqFvCRcWOxNZyCRTb9zJucVRWKuxVqSRI0aSRgkaAs7saAA&#xA;bkknFUHptxBcNdTQSLLFJIjpIhBUq0ETKQR4g1xVKbjyhDf+YJtS1JxPaAobWxH2CVRQXmr9r4ga&#xA;L0p160zIGcxhwhWREqoFSFGwFduuwGY6t4q7FWlZWFVIIqRUeINDireKtFlBAJALGig9zSu33Yq3&#xA;irsVaVlZQykFSKgjcEHFW8VQ0ZH6TuBXcQwkjvQvLiqJxV2KuxVKJNe0W9P1azvoLi4jkhd4o3Vm&#xA;C/WVjqQD05qRiqbMisVJFShqp8DQj9Rw2reBUms7SV/NWoahJDSJLW3tLWc03IeWWcL3pV4wfce2&#xA;WykOADzJ/Uqc5UrqitK7ncD5Yq7FXEgAkmgG5JxV2KuxVwINQDWmx9u+KuxVDXZAuLKp6zGn/ImT&#xA;FUTirsVUby0hu7d7eYExvSvFmQ7Go3Ug9cVSfRdKWG4vLKfT4lsbL6vb6ZcOis8lulug+N2Z2Yo/&#xA;IVNMVTX9Gab/AMskP/Itf6YqlfmC0mgt7ZtK06CeZrqFJ0MCPSBm/etu8XEqu4O/y8FU0/Rmm/8A&#xA;LJD/AMi1/pirv0Zpv/LJD/yLX+mKpT5age7sZpNSsLWOVbmeOL0446GJHKqWCmTiwNVYV6jFUdZp&#xA;5dvVLWYtLlVoWaERSAchVa8a9RuMVS+/FNW0eDT9Ps7mxuZJjqE37rnHFHEwDRrUcv3xRWIrTpTe&#xA;oVTj9Gab/wAskP8AyLX+mKqF9p9tHY3ElrYwyXKRO0EfpoeThSVHbqffFVDQrBpNGs31bT7eHUmi&#xA;U3cSRpxWSnxBaV2xVHfozTf+WSH/AJFr/TFUutE1KHzRPDHpsEGjNaKwvowqySTh9kcChoFZqbbe&#xA;O+yqdYq7FVssSSxPE9SkilWAJU0IodxQj6MVYpc+T9N0q5F/pWmi6vL25hivzOWm/wBHknWSeSkj&#xA;hagoHrvuK0qTirJP0Zpv/LJD/wAi1/pirv0Zpv8AyyQ/8i1/piqV+W7SafSxJq+nQW976swKLAkY&#xA;KCRvTbiHmoWShPxYqmn6M03/AJZIf+Ra/wBMVSq5tZV8x2VvBp1s+mPBK13K0cYdHBHDia1NSKEc&#xA;f7FUyNno4kERgtxKQCEKJyoa02p7HFUJrdtFBpN5JYafa3F/HExgt5RGiM5qF5k0otcVRFjp9vJZ&#xA;W73VjDFdNGjTxiNKLIVBZdqjY++Kq36M03/lkh/5Fr/TFUq0uzu5NY1dL3TbaLTY3i/RkqxoGccK&#xA;S8+pNGAodtjTqDiqa/ozTf8Alkh/5Fr/AExVK9Zt722u9KfSNLt5wbtBeTlUV4IGBV5I68d+LH6N&#xA;qb7Kp7irsVdirsVdirsVdirsVYLq/wCVcN7MslvrV9bI9/JfXMDMGjcTSNK8KhPSKrykPGpam+x5&#xA;NVVfL+Venzwv6uq38E06n6z9Tkjgi5u3JzHH6bcN603rQ7knfFU00ryXDpurSagmoXVy00zXMqXL&#xA;IwEjK60jCJGqIfWdmUDdqdKbqsjxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVIfMvlq71ee2uLXUpd&#xA;NntUlRZIAQzeqUNGYMp4j0wePjStRsVWM6d+V2piGybUtZlm1Cz9RxqIknknZ5UjjIaRnVqD0FNf&#xA;Fm4iOi4qiH/LbVgt6T5ku7k3QdfTnL8fTKyBInYOWaNTKTxNR7eCrO1FFAqTQUqepxVvFXYq7FXY&#xA;q7FXYq//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmp:MetadataDate>2018-09-15T01:51:33+01:00</xmp:MetadataDate>
         <xmp:ModifyDate>2018-09-15T01:51:33+01:00</xmp:ModifyDate>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1003.706206</stDim:w>
            <stDim:h>716.200093</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>MyriadPro-Regular</stFnt:fontName>
                  <stFnt:fontFamily>Myriad Pro</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 2.106;PS 2.000;hotconv 1.0.70;makeotf.lib2.5.58329</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>MyriadPro-Regular.otf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Times-Roman</stFnt:fontName>
                  <stFnt:fontFamily>Times</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>13.0d2e19</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Times.ttc</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <dc:format>application/postscript</dc:format>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:DocumentID>xmp.did:97ab0471-7d2a-4956-a300-7fe868f841b1</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:97ab0471-7d2a-4956-a300-7fe868f841b1</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:97ab0471-7d2a-4956-a300-7fe868f841b1</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:97ab0471-7d2a-4956-a300-7fe868f841b1</stEvt:instanceID>
                  <stEvt:when>2018-09-15T01:51:33+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -716.042 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 716.042 li
1015.28 716.042 li
1015.28 0 li
cp
clp
57.9484 259.667 mo
978.448 259.667 li
978.448 57.667 li
57.9484 57.667 li
57.9484 259.667 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
.5 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
978.448 57.667 mo
978.448 66.8721 li
886.399 57.667 mo
886.399 66.8721 li
794.349 57.667 mo
794.349 66.8721 li
702.298 57.667 mo
702.298 66.8721 li
610.248 57.667 mo
610.248 66.8721 li
518.198 57.667 mo
518.198 66.8721 li
426.149 57.667 mo
426.149 66.8721 li
334.098 57.667 mo
334.098 66.8721 li
242.048 57.667 mo
242.048 66.8721 li
149.998 57.667 mo
149.998 66.8721 li
57.9484 57.667 mo
57.9484 66.8721 li
978.448 259.667 mo
978.448 250.462 li
886.399 259.667 mo
886.399 250.462 li
794.349 259.667 mo
794.349 250.462 li
702.298 259.667 mo
702.298 250.462 li
610.248 259.667 mo
610.248 250.462 li
518.198 259.667 mo
518.198 250.462 li
426.149 259.667 mo
426.149 250.462 li
334.098 259.667 mo
334.098 250.462 li
242.048 259.667 mo
242.048 250.462 li
149.998 259.667 mo
149.998 250.462 li
57.9484 259.667 mo
57.9484 250.462 li
57.9484 57.667 mo
978.448 57.667 li
57.9484 259.667 mo
978.448 259.667 li
.149 .149 .149 rgb
@
.301961 .301961 .309804 rgb
%ADOBeginSubsetFont: Times-Roman Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Times-Roman def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 46 /period putdup 48 /zero putdup 49 /one putdup 50 /two putdup 51 /three putdup 52 /four putdup 53 /five putdup 54 /six putdup 55 /seven putdup 56 /eight putdup 57 /nine putdef/FontBBox {-203 -428 1700 1271} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings12 dict dup begin/.notdef <1C60D8A8C9B6079F6CEA24BDEB0F5E4D18DF0CD7E2A11E9D72D963E3987D5E4E6C9FCD> |-/period <1C60D8A8C9B8707CDCE5666C9B3EABE1C8F3B5685DC89284E5BE559D084487449BF37D1D86EF1322476306E241C4EF3BA9B7322496F4AC15DB69BEC6340D464440EA95046229> |-/zero <1C60D8A8C9B7A73DB9A6590C6FE2B7096DCA6F9A5EA5CF6E8AC2157EC7418EBDC43117FA8257DD5995ADA72B55217A703B5CBF244854B4360CFDF4258ECD5C9DEB492AEA5EC77E976B17AE7E2222D3F2CC89571B26AFB82DDBE99926812437BF7851C7D506B52E7A7DE1242CAC6D81645AF838199FD3EBA9B534D647714BFDCAF64F05E4> |-/one <1C60D8A8C9B7A73DB999B05B43470AE76323D53E9C54AE29C0ACC4151BDD30C8F3109BFE7DACF9BA339B31B8666788A01E1F3860FDA3F22312D6A6628C8CCA55270976BF3BB8008DD87D719627657135E81F194E374733A743BBCD543132801A49C4BA675F59C41D> |-/two <1C60D8A8C9B7A73DE72BAD97A1AB14497350B04AEDCC89B810A7A7579EC67BBA1BB072CAE80FF5F224043D73141B835306B538E1A090321AB63325D8B3A58C70F1FD34F3553B37A8BF6164DDA11E437012DC022ABF8601BBE36E43FA1BA89215476687E89F4C0A4BCB6119B7B6C22E9A6D30709E37D3141BAD532924FFAD1DE501B4> |-/three <1C60D8A8C9B7A73D960D5C905E34DC81A096980F2B4111B9B099A6DB83E1916FF3E1A9E04B02D3E9232818F77B09A9AACB5832FED542FDDA70002EB05443C3A08AC9203ACF784CB865C5B9F7D872416879897E73175190413158DECCEEC3F81053539EF7A5BA54848FD5EF8191B77C87FC4B2FB70A247D6480306D63973D6D1E40988764838CF4D7C7CFD56B10F551336B687A8CAD70446C673C2BFDC7C6AD86547DB031DFD479DCB051DAF5177334E8CD4B35F8B65FC86BD3BDBBB8D1E2B3149970112D8374721C0AB537409EB4ADF5E62264D22634EE> |-/four <1C60D8A8C9B7A73DB992534E0CF1B84939C969D2AC65F1AE73EE883487A67D0ECB26822C5FF826C828AC8594DE5FF3D9E5AE6F090B> |-/five <1C60D8A8C9B7A73D986C0D7DE9D329253DCB6E971CF9F86B9AEBF9128F879E3BA076A7524F8AC6EF0948A0BD36A1BBAD3176809EA5D8C10BC04F27D1FCF8D9BA3577509C082FF1EE49DF22B08F8B21F3A6C3932A3BC82C6C594431B4032E2BEF80E15787B3E427A047FD8FD191291F42BAC74588B21DCB1EB3232C29BA67B72B9A00CCBC571F0227C6EF50964CF91F1B0EC573A04AE3E4DF9447B77BD2A0A959F534BEC79AECEF51C27F8D677FD06B99742B747A695088E88EBCC4A6BCCC7402ABFDFE9926161D96> |-/six <1C60D8A8C9B7A73DB6D2877672A15D933475028E1A563F35D9B429BC044364BBEA6C8D8E288B5629F6BF21219495DF799C22E6D194E7EF19D2BF50638A5DFD525E61CAA756DFB58BC6CF02B70355716B1567E587BDF24EE1CD60FDA306A5E8E3EC9A065FDF865555F45DE4B3A9666958B7C5B64C412BD6705A27F81BA359AA5385B74802E199214ED2C08D85C8D9515B8A71A37E696B11B788D46272326187B79B809C5ABF82FEBD4C4DE257125A17BA43> |-/seven <1C60D8A8C9B7A73D94A9F40BC631635D93782351ED8A5F0B041154B50ADFD67B52AFA0970AEE10CFF4587FA64B7C1AB4D8B074E00A1BB2BDDE2ECD9CC66A> |-/eight <1C60D8A8C9B7A73DB9AA6386F0D433AA59FB601CE68D9D6220D80F865EFA1568339E25269162989F3B16CF5E1B85465E9B09AD3E1F38EB0BC3CC5B97FD7D595D378E5AF532DAC1C0173C6C74DAC1A5EFEB2094038777E094111D458CECDBEE2BFAFA1B194747D5AC182EDAECA7759C2CF7DA7B573AFBC7EB901C25328CA8529A5AF9870597DA9D6CE71ED45E3423137009ACC2E00FA606E5775C8BEB1D188095A69B5C3B51980741130E91409210303836D6B9BCD44F7FE0CC1ED555E839C2D5D70041FF279A3E977285D9F41DC64AB105D99B2CC098F9CEE3C23260EF9612DAD441A57B770C0516F587622E5D85261682E95C452BF079> |-/nine <1C60D8A8C9B7A73DB9A896D23FCC66190904632D73F98CB9610A16993F6B122D7E1E78C0FD3CFB4BA7B04573F85C6AAF2DBC5FF0782821FB24CB9148C8554B2F1030920B61B0FCD80181994622E333F98E453CE9ADDE1282743A6D28C02F5A1E762172EE000BA8345C747F4D035036F2F72356957E99A085687800E644D881E70A8EFBE3A3E6E4B170FA116E5327D2CD42DA986FA6C800B44A5CE5DF369C3295EA45945F8EE425ED3E5B812A8DD33EE2E3340844A5314FF5267F47524653D6A9344C2AEC57094DFAB247907C47ADE2EB> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/GHMBXJ+Times-Roman /Times-Roman findfont ct_VMDictPut/GHMBXJ+Times-Roman*1 [46{/.notdef}rp /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine 198{/.notdef}rp]GHMBXJ+Times-Roman nfGHMBXJ+Times-Roman*1 [20 0 0 -20 0 0 ]msf52.9482 283.667 mo(0)sh137.495 283.667 mo(0.1)sh229.55 283.667 mo(0.2)sh321.597 283.667 mo(0.3)sh413.651 283.667 mo(0.4)sh505.698 283.667 mo(0.5)sh597.753 283.667 mo(0.6)sh689.8 283.667 mo(0.7)sh781.854 283.667 mo(0.8)sh873.894 283.667 mo(0.9)sh973.448 283.667 mo(1)sh480.301 307.747 mo
480.301 306.966 li
481.04 306.966 481.756 306.927 482.449 306.848 cv
483.142 306.771 483.489 306.58 483.489 306.278 cv
483.489 294.184 li
483.489 293.872 483.4 293.68 483.223 293.606 cv
483.046 293.533 482.764 293.497 482.379 293.497 cv
481.442 293.497 li
480.233 293.497 479.374 293.763 478.864 294.294 cv
478.603 294.554 478.415 294.976 478.301 295.559 cv
478.186 296.143 478.087 296.877 478.004 297.763 cv
477.379 297.763 li
477.801 292.716 li
491.239 292.716 li
491.66 297.763 li
491.004 297.763 li
490.921 296.815 490.827 296.063 490.723 295.505 cv
490.619 294.947 490.431 294.544 490.16 294.294 cv
489.65 293.763 488.79 293.497 487.582 293.497 cv
486.66 293.497 li
486.389 293.497 486.181 293.508 486.035 293.528 cv
485.889 293.549 485.77 293.611 485.676 293.716 cv
485.582 293.82 485.535 293.976 485.535 294.184 cv
485.535 306.278 li
485.535 306.58 485.884 306.771 486.582 306.848 cv
487.28 306.927 487.993 306.966 488.723 306.966 cv
488.723 307.747 li
480.301 307.747 li
480.301 307.747 li
cp
.149 .149 .149 rgb
f
494.081 294.247 mo
494.081 293.925 494.203 293.641 494.448 293.395 cv
494.693 293.15 494.971 293.028 495.284 293.028 cv
495.492 293.028 495.692 293.083 495.885 293.192 cv
496.077 293.302 496.229 293.452 496.338 293.646 cv
496.447 293.838 496.502 294.038 496.502 294.247 cv
496.502 294.56 496.38 294.838 496.135 295.083 cv
495.89 295.328 495.607 295.45 495.284 295.45 cv
494.971 295.45 494.693 295.328 494.448 295.083 cv
494.203 294.838 494.081 294.56 494.081 294.247 cv
494.081 294.247 li
cp
493.143 307.747 mo
493.143 306.966 li
493.643 306.966 494.054 306.927 494.377 306.848 cv
494.7 306.771 494.862 306.58 494.862 306.278 cv
494.862 300.263 li
494.862 299.7 494.753 299.354 494.534 299.223 cv
494.315 299.093 493.888 299.028 493.252 299.028 cv
493.252 298.263 li
496.409 298.028 li
496.409 306.278 li
496.409 306.58 496.549 306.771 496.831 306.848 cv
497.111 306.927 497.486 306.966 497.956 306.966 cv
497.956 307.747 li
493.143 307.747 li
493.143 307.747 li
cp
f
499.238 307.747 mo
499.238 306.966 li
499.738 306.966 500.151 306.927 500.473 306.848 cv
500.795 306.771 500.957 306.58 500.957 306.278 cv
500.957 300.263 li
500.957 299.877 500.898 299.596 500.777 299.419 cv
500.657 299.241 500.488 299.133 500.27 299.091 cv
500.051 299.049 499.707 299.028 499.238 299.028 cv
499.238 298.263 li
502.426 298.028 li
502.426 300.169 li
502.718 299.544 503.152 299.03 503.731 298.63 cv
504.309 298.229 504.937 298.028 505.613 298.028 cv
507.311 298.028 508.306 298.716 508.598 300.091 cv
508.889 299.477 509.319 298.979 509.887 298.598 cv
510.455 298.218 511.072 298.028 511.738 298.028 cv
512.405 298.028 512.965 298.135 513.418 298.348 cv
513.871 298.562 514.212 298.891 514.442 299.333 cv
514.67 299.775 514.784 300.33 514.784 300.997 cv
514.784 306.278 li
514.784 306.58 514.949 306.771 515.277 306.848 cv
515.606 306.927 516.015 306.966 516.504 306.966 cv
516.504 307.747 li
511.473 307.747 li
511.473 306.966 li
511.973 306.966 512.384 306.927 512.707 306.848 cv
513.03 306.771 513.192 306.58 513.192 306.278 cv
513.192 301.059 li
513.192 300.319 513.087 299.724 512.879 299.271 cv
512.671 298.817 512.243 298.591 511.598 298.591 cv
510.754 298.591 510.056 298.932 509.504 299.614 cv
508.952 300.297 508.676 301.07 508.676 301.934 cv
508.676 306.278 li
508.676 306.58 508.837 306.771 509.159 306.848 cv
509.484 306.927 509.895 306.966 510.395 306.966 cv
510.395 307.747 li
505.363 307.747 li
505.363 306.966 li
505.863 306.966 506.276 306.927 506.598 306.848 cv
506.92 306.771 507.082 306.58 507.082 306.278 cv
507.082 301.059 li
507.082 300.341 506.978 299.749 506.77 299.286 cv
506.561 298.822 506.134 298.591 505.488 298.591 cv
504.634 298.591 503.934 298.932 503.387 299.614 cv
502.84 300.297 502.567 301.07 502.567 301.934 cv
502.567 306.278 li
502.567 306.58 502.728 306.771 503.051 306.848 cv
503.373 306.927 503.779 306.966 504.27 306.966 cv
504.27 307.747 li
499.238 307.747 li
499.238 307.747 li
cp
f
519.478 302.122 mo
524.493 302.122 li
524.493 301.57 524.415 301.01 524.259 300.442 cv
524.103 299.875 523.845 299.403 523.485 299.028 cv
523.126 298.653 522.66 298.466 522.088 298.466 cv
521.254 298.466 520.611 298.854 520.157 299.63 cv
519.704 300.406 519.478 301.236 519.478 302.122 cv
519.478 302.122 li
cp
522.4 307.997 mo
521.504 307.997 520.681 307.763 519.931 307.294 cv
519.181 306.825 518.593 306.197 518.166 305.411 cv
517.738 304.624 517.525 303.794 517.525 302.919 cv
517.525 302.065 517.72 301.25 518.11 300.473 cv
518.501 299.697 519.046 299.072 519.743 298.598 cv
520.442 298.125 521.223 297.888 522.088 297.888 cv
522.754 297.888 523.338 298 523.838 298.223 cv
524.338 298.447 524.749 298.76 525.071 299.161 cv
525.395 299.563 525.637 300.036 525.799 300.583 cv
525.96 301.13 526.041 301.726 526.041 302.372 cv
526.041 302.57 525.968 302.669 525.821 302.669 cv
519.446 302.669 li
519.446 302.903 li
519.446 304.122 519.692 305.169 520.181 306.044 cv
520.671 306.919 521.473 307.356 522.588 307.356 cv
523.035 307.356 523.452 307.255 523.838 307.052 cv
524.223 306.849 524.557 306.567 524.838 306.208 cv
525.118 305.849 525.311 305.466 525.416 305.059 cv
525.426 305.007 525.452 304.963 525.493 304.927 cv
525.535 304.891 525.582 304.872 525.634 304.872 cv
525.821 304.872 li
525.968 304.872 526.041 304.966 526.041 305.153 cv
525.832 305.977 525.384 306.656 524.696 307.192 cv
524.009 307.729 523.243 307.997 522.4 307.997 cv
522.4 307.997 li
cp
f
540.855 313.2 mo
540.032 312.554 539.326 311.814 538.737 310.981 cv
538.15 310.147 537.667 309.26 537.292 308.317 cv
536.917 307.374 536.636 306.388 536.448 305.356 cv
536.261 304.324 536.167 303.288 536.167 302.247 cv
536.167 301.195 536.261 300.153 536.448 299.122 cv
536.636 298.091 536.92 297.099 537.3 296.146 cv
537.681 295.192 538.167 294.302 538.761 293.473 cv
539.355 292.646 540.053 291.919 540.855 291.294 cv
540.855 291.263 540.886 291.247 540.948 291.247 cv
541.167 291.247 li
541.209 291.247 541.248 291.268 541.284 291.309 cv
541.32 291.351 541.339 291.393 541.339 291.434 cv
541.339 291.507 541.323 291.555 541.292 291.575 cv
540.573 292.284 539.977 293.039 539.503 293.841 cv
539.028 294.643 538.646 295.497 538.355 296.403 cv
538.063 297.31 537.852 298.247 537.722 299.216 cv
537.592 300.185 537.526 301.195 537.526 302.247 cv
537.526 306.914 538.772 310.455 541.261 312.872 cv
541.313 312.913 541.339 312.976 541.339 313.059 cv
541.339 313.091 541.318 313.13 541.276 313.177 cv
541.234 313.224 541.198 313.247 541.167 313.247 cv
540.948 313.247 li
540.886 313.247 540.855 313.231 540.855 313.2 cv
540.855 313.2 li
cp
f
543.317 307.809 mo
543.317 304.216 li
543.317 304.102 543.379 304.044 543.504 304.044 cv
543.77 304.044 li
543.863 304.044 543.921 304.102 543.942 304.216 cv
544.359 306.352 545.348 307.419 546.911 307.419 cv
547.609 307.419 548.192 307.26 548.661 306.942 cv
549.129 306.625 549.363 306.138 549.363 305.481 cv
549.363 305.013 549.182 304.611 548.817 304.278 cv
548.452 303.944 548.02 303.716 547.52 303.591 cv
546.036 303.294 li
545.546 303.19 545.098 303.026 544.692 302.802 cv
544.285 302.578 543.954 302.283 543.699 301.919 cv
543.444 301.555 543.317 301.127 543.317 300.638 cv
543.317 299.992 543.486 299.463 543.824 299.052 cv
544.163 298.64 544.606 298.343 545.152 298.161 cv
545.699 297.979 546.285 297.888 546.911 297.888 cv
547.661 297.888 548.317 298.086 548.879 298.481 cv
549.504 297.934 li
549.504 297.903 549.54 297.888 549.613 297.888 cv
549.786 297.888 li
549.827 297.888 549.866 297.906 549.902 297.942 cv
549.939 297.979 549.957 298.023 549.957 298.075 cv
549.957 300.95 li
549.957 301.085 549.9 301.153 549.786 301.153 cv
549.504 301.153 li
549.379 301.153 549.317 301.085 549.317 300.95 cv
549.317 300.18 549.103 299.562 548.676 299.098 cv
548.249 298.635 547.655 298.403 546.895 298.403 cv
546.228 298.403 545.655 298.525 545.176 298.771 cv
544.696 299.016 544.457 299.435 544.457 300.028 cv
544.457 300.435 544.629 300.768 544.973 301.028 cv
545.317 301.289 545.723 301.477 546.192 301.591 cv
547.692 301.872 li
548.192 301.986 548.657 302.18 549.09 302.45 cv
549.523 302.721 549.866 303.064 550.12 303.481 cv
550.376 303.897 550.504 304.366 550.504 304.888 cv
550.504 305.419 550.413 305.879 550.231 306.271 cv
550.048 306.661 549.793 306.983 549.465 307.239 cv
549.137 307.494 548.751 307.685 548.309 307.809 cv
547.866 307.935 547.401 307.997 546.911 307.997 cv
545.994 307.997 545.213 307.689 544.567 307.075 cv
543.754 307.934 li
543.754 307.976 543.712 307.997 543.629 307.997 cv
543.504 307.997 li
543.379 307.997 543.317 307.935 543.317 307.809 cv
543.317 307.809 li
cp
f
552.682 313.247 mo
552.557 313.247 552.495 313.185 552.495 313.059 cv
552.495 312.986 552.51 312.939 552.541 312.919 cv
555.041 310.471 556.291 306.914 556.291 302.247 cv
556.291 297.58 555.057 294.039 552.588 291.622 cv
552.526 291.591 552.495 291.528 552.495 291.434 cv
552.495 291.393 552.516 291.351 552.557 291.309 cv
552.599 291.268 552.641 291.247 552.682 291.247 cv
552.901 291.247 li
552.943 291.247 552.974 291.263 552.995 291.294 cv
554.047 292.116 554.924 293.124 555.627 294.317 cv
556.33 295.51 556.846 296.778 557.174 298.122 cv
557.502 299.466 557.666 300.841 557.666 302.247 cv
557.666 303.288 557.577 304.312 557.401 305.317 cv
557.224 306.322 556.944 307.314 556.565 308.294 cv
556.185 309.273 555.7 310.175 555.111 310.997 cv
554.523 311.819 553.818 312.554 552.995 313.2 cv
552.974 313.231 552.943 313.247 552.901 313.247 cv
552.682 313.247 li
552.682 313.247 li
cp
f
978.448 57.667 mo
969.243 57.667 li
978.448 108.167 mo
969.243 108.167 li
978.448 158.667 mo
969.243 158.667 li
978.448 209.167 mo
969.243 209.167 li
978.448 259.667 mo
969.243 259.667 li
57.9484 57.667 mo
67.1535 57.667 li
57.9484 108.167 mo
67.1535 108.167 li
57.9484 158.667 mo
67.1535 158.667 li
57.9484 209.167 mo
67.1535 209.167 li
57.9484 259.667 mo
67.1535 259.667 li
978.448 259.667 mo
978.448 57.667 li
57.9484 259.667 mo
57.9484 57.667 li
@
.301961 .301961 .309804 rgb
GHMBXJ+Times-Roman*1 [20 0 0 -20 0 0 ]msf41.9482 266.167 mo(0)sh26.9482 215.667 mo(0.5)sh41.9482 165.167 mo(1)sh26.9482 114.675 mo(1.5)sh41.9482 64.167 mo(2)sh16.2785 177.806 mo
2.46548 182.993 li
2.16324 183.129 1.9733 183.379 1.89517 183.743 cv
1.81753 184.107 1.77847 184.571 1.77847 185.134 cv
.997222 185.134 li
.997222 179.087 li
1.77847 179.087 li
1.77847 180.306 1.96548 180.915 2.34048 180.915 cv
2.36148 180.905 2.38248 180.899 2.40347 180.899 cv
2.42398 180.899 2.44449 180.899 2.46548 180.899 cv
13.7003 176.665 li
3.07535 172.681 li
3.01285 172.66 2.92398 172.65 2.80923 172.65 cv
2.44449 172.65 2.18179 172.814 2.02017 173.142 cv
1.85904 173.47 1.77847 173.837 1.77847 174.243 cv
.997222 174.243 li
.997222 169.493 li
1.77847 169.493 li
1.77847 170.045 1.88003 170.533 2.08316 170.954 cv
2.2858 171.376 2.61685 171.676 3.07535 171.853 cv
16.2785 176.822 li
16.4342 176.863 16.5124 176.982 16.5124 177.181 cv
16.5124 177.462 li
16.5124 177.649 16.4342 177.764 16.2785 177.806 cv
16.2785 177.806 li
cp
.149 .149 .149 rgb
f
13.8722 168.217 mo
14.3825 168.217 14.8146 168.03 15.1691 167.655 cv
15.5236 167.28 15.7003 166.832 15.7003 166.311 cv
15.7003 165.842 15.5802 165.413 15.3405 165.022 cv
15.1012 164.631 14.7785 164.321 14.3722 164.092 cv
13.9655 163.863 13.5382 163.749 13.0905 163.749 cv
10.7941 163.749 li
10.7941 164.416 10.9035 165.098 11.1222 165.796 cv
11.341 166.493 11.6818 167.071 12.1452 167.53 cv
12.6086 167.988 13.1842 168.217 13.8722 168.217 cv
13.8722 168.217 li
cp
13.8722 170.014 mo
12.9972 170.014 12.2863 169.67 11.7394 168.983 cv
11.1925 168.295 10.8048 167.47 10.5753 166.506 cv
10.3459 165.542 10.2316 164.624 10.2316 163.749 cv
9.34048 163.749 li
8.91373 163.749 8.50259 163.843 8.1066 164.03 cv
7.71011 164.217 7.38492 164.488 7.12955 164.842 cv
6.87466 165.197 6.74722 165.582 6.74722 165.999 cv
6.74722 166.978 6.96597 167.717 7.40347 168.217 cv
7.40347 167.946 7.50748 167.72 7.71548 167.538 cv
7.92398 167.355 8.1691 167.264 8.45035 167.264 cv
8.74185 167.264 8.99185 167.366 9.20035 167.569 cv
9.40835 167.772 9.51236 168.02 9.51236 168.311 cv
9.51236 168.603 9.40835 168.853 9.20035 169.061 cv
8.99185 169.27 8.74185 169.374 8.45035 169.374 cv
7.67984 169.374 7.1066 169.022 6.7316 168.319 cv
6.3566 167.616 6.16959 166.842 6.16959 165.999 cv
6.16959 165.405 6.29654 164.809 6.55142 164.21 cv
6.80679 163.61 7.16861 163.118 7.63736 162.733 cv
8.10611 162.348 8.65835 162.155 9.2941 162.155 cv
14.2472 162.155 li
14.5285 162.155 14.7892 162.095 15.0285 161.975 cv
15.2677 161.855 15.3874 161.666 15.3874 161.405 cv
15.3874 161.166 15.2677 160.986 15.0285 160.866 cv
14.7892 160.746 14.5285 160.686 14.2472 160.686 cv
12.8405 160.686 li
12.8405 160.046 li
14.2472 160.046 li
14.57 160.046 14.8825 160.131 15.1842 160.303 cv
15.4865 160.475 15.7233 160.704 15.8952 160.991 cv
16.0675 161.277 16.1535 161.593 16.1535 161.936 cv
16.1535 162.363 15.9865 162.733 15.6535 163.046 cv
15.32 163.358 14.924 163.53 14.4655 163.561 cv
15.0182 163.832 15.4582 164.232 15.7863 164.764 cv
16.1144 165.295 16.2785 165.863 16.2785 166.467 cv
16.2785 167.02 16.195 167.566 16.0285 168.108 cv
15.8615 168.65 15.6012 169.103 15.2472 169.467 cv
14.8927 169.832 14.4342 170.014 13.8722 170.014 cv
13.8722 170.014 li
cp
f
16.0285 159.217 mo
15.2472 159.217 li
15.2472 158.717 15.2082 158.306 15.1295 157.983 cv
15.0514 157.66 14.8615 157.499 14.5592 157.499 cv
3.01236 157.499 li
2.61685 157.499 2.33072 157.556 2.15347 157.67 cv
1.97574 157.785 1.86929 157.954 1.83316 158.178 cv
1.79654 158.402 1.77847 158.748 1.77847 159.217 cv
.997222 159.217 li
.762359 155.952 li
14.5592 155.952 li
14.8615 155.952 15.0514 155.79 15.1295 155.467 cv
15.2082 155.144 15.2472 154.733 15.2472 154.233 cv
16.0285 154.233 li
16.0285 159.217 li
16.0285 159.217 li
cp
f
13.4035 151.403 mo
8.5441 151.403 li
8.15835 151.403 7.8771 151.463 7.70035 151.583 cv
7.5231 151.702 7.41373 151.872 7.37222 152.091 cv
7.33023 152.31 7.30923 152.653 7.30923 153.122 cv
6.54459 153.122 li
6.30923 149.794 li
13.4035 149.794 li
13.9762 149.794 14.4215 149.752 14.7394 149.669 cv
15.0568 149.585 15.2965 149.411 15.4582 149.145 cv
15.6198 148.879 15.7003 148.45 15.7003 147.856 cv
15.7003 147.075 15.3698 146.45 14.7082 145.981 cv
14.0465 145.512 13.2985 145.278 12.4655 145.278 cv
8.5441 145.278 li
8.15835 145.278 7.8771 145.34 7.70035 145.466 cv
7.5231 145.59 7.41373 145.76 7.37222 145.973 cv
7.33023 146.187 7.30923 146.528 7.30923 146.997 cv
6.54459 146.997 li
6.30923 143.684 li
14.0285 143.684 li
14.4137 143.684 14.695 143.624 14.8722 143.505 cv
15.049 143.385 15.1559 143.213 15.1925 142.989 cv
15.2292 142.765 15.2472 142.424 15.2472 141.966 cv
16.0285 141.966 li
16.2785 145.216 li
14.4191 145.216 li
14.9713 145.486 15.4191 145.867 15.7624 146.356 cv
16.1066 146.846 16.2785 147.382 16.2785 147.966 cv
16.2785 149.018 16.0544 149.854 15.6066 150.473 cv
15.1584 151.093 14.424 151.403 13.4035 151.403 cv
13.4035 151.403 li
cp
f
10.4035 138.993 mo
10.4035 133.978 li
9.85123 133.978 9.29117 134.056 8.7233 134.212 cv
8.15591 134.368 7.68472 134.626 7.30923 134.986 cv
6.93472 135.345 6.74722 135.811 6.74722 136.384 cv
6.74722 137.217 7.13541 137.86 7.91128 138.314 cv
8.68716 138.767 9.51822 138.993 10.4035 138.993 cv
10.4035 138.993 li
cp
16.2785 136.071 mo
16.2785 136.967 16.0441 137.79 15.5753 138.54 cv
15.1066 139.29 14.4792 139.878 13.6925 140.306 cv
12.9059 140.732 12.0749 140.946 11.2003 140.946 cv
10.3463 140.946 9.53091 140.751 8.75455 140.361 cv
7.97818 139.97 7.35318 139.426 6.87955 138.728 cv
6.40591 138.03 6.16959 137.249 6.16959 136.384 cv
6.16959 135.717 6.28091 135.134 6.50455 134.634 cv
6.72818 134.134 7.04117 133.723 7.44253 133.4 cv
7.8439 133.077 8.31753 132.834 8.86441 132.673 cv
9.4108 132.512 10.0075 132.431 10.6535 132.431 cv
10.8512 132.431 10.9503 132.504 10.9503 132.65 cv
10.9503 139.025 li
11.1842 139.025 li
12.403 139.025 13.4499 138.78 14.3253 138.29 cv
15.1999 137.801 15.6374 136.999 15.6374 135.884 cv
15.6374 135.436 15.5358 135.019 15.3332 134.634 cv
15.13 134.249 14.8488 133.915 14.4894 133.634 cv
14.13 133.353 13.7472 133.16 13.3405 133.056 cv
13.2882 133.045 13.2443 133.019 13.2082 132.978 cv
13.1715 132.936 13.1535 132.889 13.1535 132.837 cv
13.1535 132.65 li
13.1535 132.504 13.2472 132.431 13.4342 132.431 cv
14.2575 132.639 14.9372 133.087 15.4733 133.775 cv
16.0099 134.462 16.2785 135.228 16.2785 136.071 cv
16.2785 136.071 li
cp
f
1 lw
0 lc
58.8473 256.824 mo
59.7462 255.403 li
60.6452 253.27 li
61.5446 255.403 li
62.4435 250.072 li
63.3424 253.27 li
64.2404 253.27 li
65.1393 255.403 li
66.0382 250.072 li
66.9372 245.275 li
67.8366 253.27 li
68.7355 250.072 li
69.6344 253.27 li
70.5334 250.072 li
71.4323 253.27 li
72.3312 255.403 li
73.2306 245.275 li
74.1295 250.072 li
75.0285 238.079 li
75.9274 245.275 li
76.8253 253.27 li
77.7243 250.072 li
78.6232 245.275 li
79.5226 250.072 li
80.4215 250.072 li
81.3205 253.27 li
82.2194 250.072 li
83.1183 245.275 li
84.0172 253.27 li
84.9162 250.072 li
85.8156 255.403 li
86.7145 253.27 li
87.6134 245.275 li
88.5114 238.079 li
89.4103 245.275 li
90.3092 250.072 li
91.2082 238.079 li
92.1076 227.285 li
93.0065 245.275 li
93.9054 238.079 li
94.8044 250.072 li
95.7033 253.27 li
96.6022 250.072 li
97.5011 245.275 li
98.4005 245.275 li
99.2995 238.079 li
100.198 250.072 li
101.096 245.275 li
101.995 250.072 li
102.894 245.275 li
103.793 250.072 li
104.693 253.27 li
105.591 250.072 li
106.49 245.275 li
107.389 238.079 li
108.288 245.275 li
109.187 250.072 li
110.087 253.27 li
110.986 250.072 li
111.884 245.275 li
112.782 253.27 li
113.681 255.403 li
114.58 253.27 li
115.479 250.072 li
116.379 245.275 li
117.277 238.079 li
118.176 227.285 li
119.075 238.079 li
119.974 238.079 li
120.873 245.275 li
121.773 245.275 li
122.672 250.072 li
123.57 238.079 li
124.469 227.285 li
125.367 227.285 li
126.266 211.093 li
127.165 238.079 li
128.065 245.275 li
128.964 238.079 li
129.862 227.285 li
130.761 250.072 li
131.66 245.275 li
132.559 253.27 li
133.458 250.072 li
134.358 250.072 li
135.257 245.275 li
136.155 238.079 li
137.053 245.275 li
137.952 245.275 li
138.851 238.079 li
139.75 227.285 li
140.65 238.079 li
141.548 250.072 li
142.447 245.275 li
143.346 238.079 li
144.245 245.275 li
145.144 245.275 li
146.044 250.072 li
146.943 245.275 li
147.841 238.079 li
148.74 245.275 li
149.638 250.072 li
150.537 250.072 li
151.436 253.27 li
152.335 245.275 li
153.235 250.072 li
154.133 238.079 li
155.032 245.275 li
155.931 227.285 li
156.83 238.079 li
157.729 238.079 li
158.629 245.275 li
159.527 250.072 li
160.426 245.275 li
161.324 253.27 li
162.223 250.072 li
163.122 250.072 li
164.022 245.275 li
164.921 245.275 li
165.819 238.079 li
166.718 253.27 li
167.617 250.072 li
168.516 255.403 li
169.415 253.27 li
170.315 250.072 li
171.214 253.27 li
172.112 250.072 li
173.011 245.275 li
173.909 245.275 li
174.808 238.079 li
175.707 227.285 li
176.607 238.079 li
177.506 227.285 li
178.404 211.093 li
179.303 227.285 li
180.202 238.079 li
181.101 238.079 li
182 227.285 li
182.9 238.079 li
183.798 245.275 li
184.697 238.079 li
185.595 245.275 li
186.494 250.072 li
187.393 245.275 li
188.292 238.079 li
189.192 227.285 li
190.09 211.093 li
190.989 227.285 li
191.888 211.093 li
192.787 227.285 li
193.686 186.807 li
194.586 211.093 li
195.485 227.285 li
196.383 238.079 li
197.281 245.275 li
198.18 238.079 li
199.079 238.079 li
199.978 227.285 li
200.877 227.285 li
201.777 211.093 li
202.675 245.275 li
203.574 250.072 li
204.473 238.079 li
205.372 245.275 li
206.271 253.27 li
207.171 250.072 li
208.069 250.072 li
208.968 245.275 li
209.866 250.072 li
210.765 245.275 li
211.664 245.275 li
212.564 238.079 li
213.463 227.285 li
214.361 238.079 li
215.26 238.079 li
216.159 245.275 li
217.058 238.079 li
217.957 245.275 li
218.857 238.079 li
219.756 227.285 li
220.654 227.285 li
221.552 211.093 li
222.451 227.285 li
223.35 238.079 li
224.249 245.275 li
225.149 250.072 li
226.048 238.079 li
226.946 245.275 li
227.845 227.285 li
228.744 238.079 li
229.643 245.275 li
230.542 238.079 li
231.442 238.079 li
232.34 245.275 li
233.239 250.072 li
234.137 245.275 li
235.036 245.275 li
235.935 238.079 li
236.834 238.079 li
237.734 227.285 li
238.632 245.275 li
239.531 238.079 li
240.43 245.275 li
241.329 250.072 li
242.228 250.072 li
243.127 245.275 li
244.027 250.072 li
244.925 253.27 li
245.823 238.079 li
246.722 245.275 li
247.621 250.072 li
248.52 245.275 li
249.42 238.079 li
250.319 227.285 li
251.217 238.079 li
252.116 245.275 li
253.015 227.285 li
253.914 211.093 li
254.814 238.079 li
255.713 227.285 li
256.611 238.079 li
257.51 227.285 li
258.408 245.275 li
259.307 238.079 li
260.206 245.275 li
261.106 250.072 li
262.005 238.079 li
262.903 245.275 li
263.802 250.072 li
264.701 253.27 li
265.6 245.275 li
266.499 250.072 li
267.399 245.275 li
268.298 250.072 li
269.196 245.275 li
270.094 238.079 li
270.993 238.079 li
271.892 245.275 li
272.791 227.285 li
273.691 238.079 li
274.59 250.072 li
275.488 253.27 li
276.387 245.275 li
277.286 250.072 li
278.185 255.403 li
279.084 253.27 li
279.984 253.27 li
280.882 250.072 li
281.781 250.072 li
282.679 245.275 li
283.578 253.27 li
284.477 250.072 li
285.376 245.275 li
286.276 250.072 li
287.174 238.079 li
288.073 245.275 li
288.972 245.275 li
289.871 238.079 li
290.77 227.285 li
291.67 238.079 li
292.569 227.285 li
293.467 211.093 li
294.365 238.079 li
295.264 227.285 li
296.163 227.285 li
297.063 211.093 li
297.962 211.093 li
298.861 186.807 li
299.759 211.093 li
300.658 227.285 li
301.557 238.079 li
302.456 227.285 li
303.356 227.285 li
304.255 238.079 li
305.153 211.093 li
306.052 227.285 li
306.95 238.079 li
307.849 227.285 li
308.748 238.079 li
309.648 245.275 li
310.547 227.285 li
311.445 238.079 li
312.344 245.275 li
313.243 238.079 li
314.142 250.072 li
315.041 245.275 li
315.941 245.275 li
316.84 238.079 li
317.738 238.079 li
318.636 227.285 li
319.535 227.285 li
320.434 211.093 li
321.333 186.807 li
322.233 211.093 li
323.132 211.093 li
324.03 227.285 li
324.929 211.093 li
325.828 186.807 li
326.727 227.285 li
327.626 211.093 li
328.526 150.376 li
329.424 186.807 li
330.323 211.093 li
331.221 186.807 li
332.12 227.285 li
333.019 211.093 li
333.918 238.079 li
334.818 227.285 li
335.716 238.079 li
336.615 245.275 li
337.514 238.079 li
338.413 227.285 li
339.312 227.285 li
340.212 238.079 li
341.111 211.093 li
342.009 227.285 li
342.907 227.285 li
343.806 211.093 li
344.705 186.807 li
345.605 211.093 li
346.504 245.275 li
347.402 238.079 li
348.301 245.275 li
349.2 250.072 li
350.099 227.285 li
350.998 238.079 li
351.898 238.079 li
352.797 245.275 li
353.695 253.27 li
354.594 250.072 li
355.492 245.275 li
356.391 250.072 li
357.29 250.072 li
358.19 245.275 li
359.089 245.275 li
359.987 238.079 li
360.886 250.072 li
361.785 245.275 li
362.684 238.079 li
363.583 245.275 li
364.483 238.079 li
365.382 245.275 li
366.28 238.079 li
367.178 227.285 li
368.077 211.093 li
368.976 227.285 li
369.875 238.079 li
370.775 227.285 li
371.673 227.285 li
372.572 238.079 li
373.471 245.275 li
374.37 238.079 li
375.269 227.285 li
376.168 238.079 li
377.068 245.275 li
377.966 238.079 li
378.865 227.285 li
379.763 238.079 li
380.662 227.285 li
381.561 211.093 li
382.46 227.285 li
383.36 211.093 li
384.258 211.093 li
385.157 186.807 li
386.056 211.093 li
386.955 227.285 li
387.854 227.285 li
388.754 238.079 li
389.652 245.275 li
390.551 238.079 li
391.449 245.275 li
392.348 250.072 li
393.247 227.285 li
394.147 238.079 li
395.046 238.079 li
395.944 245.275 li
396.843 211.093 li
397.742 227.285 li
398.641 238.079 li
399.54 227.285 li
400.44 245.275 li
401.339 238.079 li
402.237 227.285 li
403.136 238.079 li
404.034 227.285 li
404.933 238.079 li
405.832 238.079 li
406.732 245.275 li
407.631 250.072 li
408.529 245.275 li
409.428 245.275 li
410.327 238.079 li
411.226 238.079 li
412.125 245.275 li
413.025 227.285 li
413.923 238.079 li
414.822 227.285 li
415.72 238.079 li
416.619 211.093 li
417.518 227.285 li
418.417 238.079 li
419.317 245.275 li
420.215 238.079 li
421.114 227.285 li
422.013 245.275 li
422.912 238.079 li
423.811 245.275 li
424.711 250.072 li
425.61 245.275 li
426.508 250.072 li
427.406 245.275 li
428.305 238.079 li
429.204 250.072 li
430.103 245.275 li
431.002 250.072 li
431.902 253.27 li
432.8 238.079 li
433.699 227.285 li
434.598 245.275 li
435.497 238.079 li
436.396 245.275 li
437.295 250.072 li
438.194 238.079 li
439.093 245.275 li
439.991 227.285 li
440.89 238.079 li
441.789 227.285 li
442.689 211.093 li
443.588 227.285 li
444.486 238.079 li
445.385 245.275 li
446.284 238.079 li
447.183 227.285 li
448.082 211.093 li
448.982 186.807 li
449.881 211.093 li
450.779 227.285 li
451.677 238.079 li
452.576 211.093 li
453.475 227.285 li
454.374 227.285 li
455.274 238.079 li
456.173 211.093 li
457.071 227.285 li
457.97 245.275 li
458.869 238.079 li
459.768 238.079 li
460.667 227.285 li
461.567 245.275 li
462.465 238.079 li
463.364 250.072 li
464.262 245.275 li
465.161 227.285 li
466.06 238.079 li
466.959 245.275 li
467.859 238.079 li
468.757 245.275 li
469.656 250.072 li
470.555 250.072 li
471.454 253.27 li
472.354 238.079 li
473.253 245.275 li
474.152 245.275 li
475.05 250.072 li
475.948 238.079 li
476.847 245.275 li
477.746 250.072 li
478.645 245.275 li
479.544 245.275 li
480.444 238.079 li
481.342 227.285 li
482.241 238.079 li
483.14 238.079 li
484.039 227.285 li
484.938 245.275 li
485.837 238.079 li
486.736 211.093 li
487.635 227.285 li
488.533 238.079 li
489.432 227.285 li
490.331 245.275 li
491.231 250.072 li
492.13 250.072 li
493.028 253.27 li
493.927 238.079 li
494.826 245.275 li
495.725 250.072 li
496.624 245.275 li
497.524 255.403 li
498.422 253.27 li
499.321 250.072 li
500.219 253.27 li
501.118 253.27 li
502.018 250.072 li
502.916 245.275 li
503.816 250.072 li
504.714 245.275 li
505.613 250.072 li
506.513 238.079 li
507.411 245.275 li
508.311 253.27 li
509.209 250.072 li
510.109 250.072 li
511.007 245.275 li
511.906 238.079 li
512.805 245.275 li
513.703 250.072 li
514.603 245.275 li
515.501 238.079 li
516.401 227.285 li
517.299 238.079 li
518.198 245.275 li
519.098 238.079 li
519.996 245.275 li
520.896 227.285 li
521.794 238.079 li
522.693 211.093 li
523.592 227.285 li
524.49 238.079 li
525.39 227.285 li
526.288 211.093 li
527.188 227.285 li
528.086 186.807 li
528.985 211.093 li
529.884 238.079 li
530.783 227.285 li
531.683 211.093 li
532.581 227.285 li
533.481 211.093 li
534.379 227.285 li
535.278 186.807 li
536.177 211.093 li
537.075 186.807 li
537.975 211.093 li
538.873 150.376 li
539.773 186.807 li
540.671 211.093 li
541.57 186.807 li
542.47 227.285 li
543.368 211.093 li
544.268 227.285 li
545.166 238.079 li
546.066 211.093 li
546.964 227.285 li
547.863 211.093 li
548.761 227.285 li
549.66 227.285 li
550.56 238.079 li
551.458 186.807 li
552.358 211.093 li
553.256 211.093 li
554.155 227.285 li
555.054 227.285 li
555.953 238.079 li
556.853 211.093 li
557.751 227.285 li
558.651 227.285 li
559.549 238.079 li
560.448 238.079 li
561.347 245.275 li
562.245 211.093 li
563.145 227.285 li
564.043 238.079 li
564.943 227.285 li
565.841 245.275 li
566.74 238.079 li
567.64 238.079 li
568.538 227.285 li
569.438 245.275 li
570.336 250.072 li
571.235 245.275 li
572.134 238.079 li
573.032 245.275 li
573.932 238.079 li
574.83 227.285 li
575.73 238.079 li
576.628 238.079 li
577.527 227.285 li
578.427 211.093 li
579.325 227.285 li
580.225 227.285 li
581.123 211.093 li
582.023 211.093 li
582.921 186.807 li
583.82 150.376 li
584.72 186.807 li
585.617 211.093 li
586.517 186.807 li
587.415 211.093 li
588.315 186.807 li
589.213 211.093 li
590.112 227.285 li
591.011 186.807 li
591.91 211.093 li
592.81 186.807 li
593.708 150.376 li
594.608 211.093 li
595.506 227.285 li
596.405 211.093 li
597.303 186.807 li
598.202 150.376 li
599.102 95.731 li
600 150.376 li
600.9 186.807 li
601.798 186.807 li
602.697 211.093 li
603.597 150.376 li
604.495 186.807 li
605.395 211.093 li
606.293 227.285 li
607.193 186.807 li
608.091 211.093 li
608.99 227.285 li
609.889 238.079 li
610.787 227.285 li
611.687 211.093 li
612.585 227.285 li
613.484 238.079 li
614.383 245.275 li
615.282 238.079 li
616.182 238.079 li
617.08 227.285 li
617.98 227.285 li
618.878 211.093 li
619.777 227.285 li
620.677 211.093 li
621.574 227.285 li
622.474 238.079 li
623.372 186.807 li
624.272 211.093 li
625.17 211.093 li
626.069 227.285 li
626.968 227.285 li
627.867 211.093 li
628.767 211.093 li
629.665 186.807 li
630.565 186.807 li
631.463 150.376 li
632.362 211.093 li
633.261 186.807 li
634.159 238.079 li
635.059 245.275 li
635.957 227.285 li
636.857 238.079 li
637.755 238.079 li
638.654 245.275 li
639.554 250.072 li
640.452 245.275 li
641.352 211.093 li
642.25 227.285 li
643.15 227.285 li
644.048 238.079 li
644.947 227.285 li
645.845 238.079 li
646.744 238.079 li
647.644 245.275 li
648.542 253.27 li
649.442 250.072 li
650.34 250.072 li
651.239 245.275 li
652.138 245.275 li
653.037 238.079 li
653.937 245.275 li
654.835 250.072 li
655.734 250.072 li
656.633 245.275 li
657.531 245.275 li
658.431 238.079 li
659.329 245.275 li
660.229 238.079 li
661.127 238.079 li
662.026 227.285 li
662.925 245.275 li
663.824 250.072 li
664.724 238.079 li
665.622 245.275 li
666.522 238.079 li
667.42 227.285 li
668.319 245.275 li
669.218 238.079 li
670.116 238.079 li
671.016 227.285 li
671.914 245.275 li
672.814 238.079 li
673.712 238.079 li
674.611 227.285 li
675.51 227.285 li
676.409 211.093 li
677.309 211.093 li
678.207 186.807 li
679.107 211.093 li
680.005 227.285 li
680.904 227.285 li
681.802 238.079 li
682.701 227.285 li
683.601 211.093 li
684.499 227.285 li
685.399 211.093 li
686.297 227.285 li
687.196 238.079 li
688.095 238.079 li
688.994 245.275 li
689.894 227.285 li
690.792 238.079 li
691.692 211.093 li
692.59 227.285 li
693.489 238.079 li
694.388 227.285 li
695.286 245.275 li
696.186 238.079 li
697.084 227.285 li
697.984 238.079 li
698.882 227.285 li
699.781 211.093 li
700.681 227.285 li
701.579 238.079 li
702.479 211.093 li
703.377 227.285 li
704.276 186.807 li
705.175 211.093 li
706.073 227.285 li
706.973 211.093 li
707.871 186.807 li
708.771 211.093 li
709.669 211.093 li
710.568 186.807 li
711.467 150.376 li
712.366 186.807 li
713.266 186.807 li
714.164 211.093 li
715.064 227.285 li
715.962 211.093 li
716.861 211.093 li
717.761 227.285 li
718.658 227.285 li
719.558 238.079 li
720.456 245.275 li
721.356 238.079 li
722.254 238.079 li
723.153 227.285 li
724.052 245.275 li
724.951 238.079 li
725.851 250.072 li
726.749 245.275 li
727.649 227.285 li
728.547 211.093 li
729.446 227.285 li
730.345 238.079 li
731.243 238.079 li
732.143 227.285 li
733.041 245.275 li
733.941 238.079 li
734.839 186.807 li
735.738 211.093 li
736.638 227.285 li
737.536 211.093 li
738.436 227.285 li
739.334 238.079 li
740.234 227.285 li
741.132 211.093 li
742.031 245.275 li
742.929 238.079 li
743.828 227.285 li
744.728 238.079 li
745.626 211.093 li
746.526 227.285 li
747.424 227.285 li
748.323 238.079 li
749.222 211.093 li
750.121 227.285 li
751.021 227.285 li
751.919 238.079 li
752.818 238.079 li
753.717 227.285 li
754.615 245.275 li
755.515 238.079 li
756.413 245.275 li
757.313 250.072 li
758.211 238.079 li
759.11 245.275 li
760.009 238.079 li
760.908 245.275 li
761.808 238.079 li
762.706 227.285 li
763.606 238.079 li
764.504 227.285 li
765.403 238.079 li
766.302 245.275 li
767.2 227.285 li
768.1 211.093 li
768.998 227.285 li
769.898 238.079 li
770.796 211.093 li
771.695 227.285 li
772.594 238.079 li
773.493 227.285 li
774.393 186.807 li
775.291 211.093 li
776.191 211.093 li
777.089 227.285 li
777.988 238.079 li
778.886 227.285 li
779.785 238.079 li
780.685 245.275 li
781.583 227.285 li
782.483 238.079 li
783.381 211.093 li
784.28 227.285 li
785.18 245.275 li
786.078 238.079 li
786.978 227.285 li
787.876 238.079 li
788.776 245.275 li
789.674 238.079 li
790.573 250.072 li
791.472 245.275 li
792.37 238.079 li
793.27 245.275 li
794.168 250.072 li
795.068 245.275 li
795.966 245.275 li
796.865 238.079 li
797.765 227.285 li
798.663 238.079 li
799.563 245.275 li
800.461 250.072 li
801.36 238.079 li
802.259 245.275 li
803.157 245.275 li
804.056 250.072 li
804.955 253.27 li
805.855 250.072 li
806.753 238.079 li
807.652 227.285 li
808.552 227.285 li
809.45 211.093 li
810.35 238.079 li
811.248 245.275 li
812.148 227.285 li
813.046 238.079 li
813.945 238.079 li
814.845 245.275 li
815.742 245.275 li
816.642 250.072 li
817.54 238.079 li
818.44 227.285 li
819.338 245.275 li
820.237 238.079 li
821.136 227.285 li
822.035 211.093 li
822.935 227.285 li
823.833 238.079 li
824.733 227.285 li
825.631 211.093 li
826.53 186.807 li
827.429 211.093 li
828.327 227.285 li
829.227 211.093 li
830.125 238.079 li
831.025 227.285 li
831.923 245.275 li
832.822 238.079 li
833.722 227.285 li
834.62 238.079 li
835.52 211.093 li
836.418 227.285 li
837.318 211.093 li
838.216 186.807 li
839.115 186.807 li
840.013 150.376 li
840.912 186.807 li
841.812 211.093 li
842.71 227.285 li
843.609 211.093 li
844.508 227.285 li
845.407 238.079 li
846.306 186.807 li
847.205 211.093 li
848.105 227.285 li
849.003 211.093 li
849.902 227.285 li
850.802 211.093 li
851.699 227.285 li
852.599 238.079 li
853.497 211.093 li
854.397 186.807 li
855.295 227.285 li
856.194 211.093 li
857.093 238.079 li
857.992 245.275 li
858.892 227.285 li
859.79 238.079 li
860.69 227.285 li
861.588 238.079 li
862.487 211.093 li
863.386 227.285 li
864.284 245.275 li
865.184 238.079 li
866.082 238.079 li
866.982 227.285 li
867.88 245.275 li
868.779 250.072 li
869.679 238.079 li
870.577 245.275 li
871.477 227.285 li
872.375 211.093 li
873.275 227.285 li
874.173 238.079 li
875.072 245.275 li
875.97 238.079 li
876.869 238.079 li
877.769 227.285 li
878.667 245.275 li
879.567 238.079 li
880.465 250.072 li
881.364 245.275 li
882.264 250.072 li
883.162 245.275 li
884.062 253.27 li
884.96 250.072 li
885.859 238.079 li
886.759 227.285 li
887.656 238.079 li
888.556 245.275 li
889.454 238.079 li
890.354 245.275 li
891.252 245.275 li
892.151 250.072 li
893.05 227.285 li
893.949 238.079 li
894.849 245.275 li
895.747 238.079 li
896.647 250.072 li
897.545 245.275 li
898.444 238.079 li
899.343 245.275 li
900.241 245.275 li
901.141 238.079 li
902.039 227.285 li
902.939 238.079 li
903.837 227.285 li
904.736 211.093 li
905.636 227.285 li
906.534 238.079 li
907.434 238.079 li
908.332 227.285 li
909.232 211.093 li
910.13 227.285 li
911.029 238.079 li
911.927 245.275 li
912.826 227.285 li
913.726 238.079 li
914.624 211.093 li
915.524 186.807 li
916.422 211.093 li
917.321 227.285 li
918.22 227.285 li
919.119 238.079 li
920.019 211.093 li
920.917 227.285 li
921.817 238.079 li
922.715 245.275 li
923.614 245.275 li
924.513 250.072 li
925.411 250.072 li
926.311 245.275 li
927.209 250.072 li
928.109 253.27 li
929.007 227.285 li
929.906 238.079 li
930.806 238.079 li
931.704 245.275 li
932.604 250.072 li
933.502 245.275 li
934.401 245.275 li
935.3 238.079 li
936.198 253.27 li
937.098 255.403 li
937.996 250.072 li
938.896 253.27 li
939.794 250.072 li
940.693 245.275 li
941.593 250.072 li
942.491 253.27 li
943.391 253.27 li
944.289 250.072 li
945.189 250.072 li
946.087 245.275 li
946.986 245.275 li
947.886 238.079 li
948.783 250.072 li
949.683 245.275 li
950.581 238.079 li
951.481 245.275 li
952.379 250.072 li
953.278 245.275 li
954.177 227.285 li
955.076 238.079 li
955.976 238.079 li
956.874 245.275 li
957.774 250.072 li
958.672 253.27 li
959.571 245.275 li
960.47 250.072 li
961.368 250.072 li
962.268 245.275 li
963.166 238.079 li
964.066 245.275 li
964.964 227.285 li
965.863 238.079 li
966.763 245.275 li
967.661 238.079 li
968.561 245.275 li
969.459 250.072 li
970.359 238.079 li
971.257 245.275 li
972.156 227.285 li
973.054 238.079 li
973.953 211.093 li
974.853 227.285 li
975.751 227.285 li
976.651 238.079 li
977.549 245.275 li
978.448 238.079 li
0 .447059 .741176 rgb
@
43.5456 667.271 mo
427.778 667.271 li
427.778 376.039 li
43.5456 376.039 li
43.5456 667.271 li
cp
1 1 1 rgb
f
.5 lw
2 lc
427.778 376.039 mo
427.778 379.84 li
350.932 376.039 mo
350.932 379.84 li
274.085 376.039 mo
274.085 379.84 li
197.239 376.039 mo
197.239 379.84 li
120.392 376.039 mo
120.392 379.84 li
43.5456 376.039 mo
43.5456 379.84 li
427.778 667.271 mo
427.778 663.469 li
350.932 667.271 mo
350.932 663.469 li
274.085 667.271 mo
274.085 663.469 li
197.239 667.271 mo
197.239 663.469 li
120.392 667.271 mo
120.392 663.469 li
43.5456 667.271 mo
43.5456 663.469 li
43.5456 376.039 mo
427.778 376.039 li
43.5456 667.271 mo
427.778 667.271 li
.149 .149 .149 rgb
@
.301961 .301961 .309804 rgb
GHMBXJ+Times-Roman*1 [17.7066 0 0 -17.5177 0 0 ]msf39.1201 688.291 mo(123456)[76.8467 76.8462 76.8467 76.8462 76.8467 0 ]xsh194.597 709.383 mo
194.597 708.698 li
195.04 708.698 195.404 708.664 195.691 708.596 cv
195.976 708.527 196.119 708.36 196.119 708.096 cv
196.119 697.982 li
196.119 697.636 196.068 697.385 195.966 697.229 cv
195.865 697.074 195.715 696.981 195.517 696.949 cv
195.319 696.917 195.012 696.901 194.597 696.901 cv
194.597 696.218 li
197.488 696.012 li
197.488 708.096 li
197.488 708.36 197.632 708.527 197.917 708.596 cv
198.203 708.664 198.568 708.698 199.01 708.698 cv
199.01 709.383 li
194.597 709.383 li
194.597 709.383 li
cp
.149 .149 .149 rgb
f
204.282 709.04 mo
205.324 709.04 206.018 708.666 206.364 707.918 cv
206.71 707.17 206.883 706.217 206.883 705.058 cv
206.883 704.419 206.848 703.888 206.779 703.464 cv
206.71 703.04 206.56 702.654 206.329 702.308 cv
206.182 702.097 205.995 701.912 205.769 701.753 cv
205.543 701.594 205.305 701.471 205.056 701.383 cv
204.808 701.297 204.549 701.254 204.282 701.254 cv
203.876 701.254 203.491 701.345 203.127 701.527 cv
202.763 701.71 202.461 701.97 202.221 702.308 cv
201.981 702.672 201.827 703.071 201.757 703.505 cv
201.689 703.938 201.654 704.456 201.654 705.058 cv
201.654 705.778 201.718 706.427 201.847 707.001 cv
201.976 707.576 202.233 708.06 202.615 708.451 cv
202.998 708.844 203.553 709.04 204.282 709.04 cv
204.282 709.04 li
cp
204.282 709.602 mo
203.498 709.602 202.774 709.405 202.11 709.013 cv
201.446 708.621 200.921 708.094 200.533 707.433 cv
200.146 706.771 199.952 706.053 199.952 705.276 cv
199.952 704.692 200.058 704.127 200.27 703.58 cv
200.483 703.032 200.787 702.544 201.183 702.115 cv
201.58 701.687 202.041 701.352 202.567 701.11 cv
203.093 700.868 203.664 700.747 204.282 700.747 cv
205.085 700.747 205.813 700.955 206.467 701.369 cv
207.123 701.784 207.639 702.344 208.017 703.047 cv
208.395 703.749 208.585 704.492 208.585 705.276 cv
208.585 706.053 208.393 706.771 208.01 707.433 cv
207.628 708.094 207.104 708.621 206.44 709.013 cv
205.776 709.405 205.057 709.602 204.282 709.602 cv
204.282 709.602 li
cp
f
213.481 706.03 mo
214.579 706.03 215.128 705.254 215.128 703.703 cv
215.128 703.028 215.012 702.474 214.782 702.04 cv
214.551 701.606 214.117 701.391 213.481 701.391 cv
212.845 701.391 212.409 701.607 212.174 702.04 cv
211.939 702.474 211.821 703.028 211.821 703.703 cv
211.821 704.123 211.865 704.506 211.953 704.853 cv
212.04 705.199 212.206 705.482 212.451 705.701 cv
212.695 705.92 213.039 706.03 213.481 706.03 cv
213.481 706.03 li
cp
210.783 710.889 mo
210.783 711.317 210.961 711.678 211.317 711.969 cv
211.671 712.261 212.1 712.478 212.603 712.619 cv
213.106 712.761 213.579 712.831 214.021 712.831 cv
214.454 712.831 214.922 712.761 215.424 712.619 cv
215.927 712.478 216.354 712.261 216.705 711.969 cv
217.055 711.678 217.231 711.317 217.231 710.889 cv
217.231 710.213 216.922 709.777 216.303 709.581 cv
215.686 709.385 214.929 709.287 214.034 709.287 cv
212.444 709.287 li
212.149 709.287 211.874 709.358 211.621 709.499 cv
211.367 709.641 211.164 709.839 211.012 710.094 cv
210.86 710.35 210.783 710.614 210.783 710.889 cv
210.783 710.889 li
cp
209.691 710.889 mo
209.691 710.432 209.86 710.032 210.196 709.69 cv
210.533 709.349 210.932 709.104 211.393 708.959 cv
211.134 708.767 210.938 708.522 210.805 708.227 cv
210.671 707.93 210.604 707.617 210.604 707.288 cv
210.604 706.687 210.793 706.152 211.172 705.688 cv
210.581 705.113 210.286 704.451 210.286 703.703 cv
210.286 703.302 210.374 702.925 210.549 702.573 cv
210.724 702.223 210.966 701.917 211.275 701.657 cv
211.584 701.397 211.929 701.201 212.313 701.068 cv
212.695 700.937 213.085 700.87 213.481 700.87 cv
214.256 700.87 214.948 701.094 215.556 701.541 cv
215.824 701.258 216.139 701.039 216.504 700.884 cv
216.868 700.729 217.248 700.651 217.645 700.651 cv
217.922 700.651 218.15 700.749 218.33 700.945 cv
218.509 701.142 218.599 701.381 218.599 701.664 cv
218.599 701.819 218.539 701.956 218.42 702.074 cv
218.299 702.193 218.157 702.252 217.991 702.252 cv
217.834 702.252 217.693 702.193 217.569 702.074 cv
217.444 701.956 217.382 701.819 217.382 701.664 cv
217.382 701.418 217.465 701.249 217.632 701.157 cv
216.958 701.157 216.377 701.386 215.888 701.842 cv
216.128 702.079 216.319 702.364 216.462 702.697 cv
216.606 703.03 216.677 703.365 216.677 703.703 cv
216.677 704.251 216.525 704.741 216.22 705.174 cv
215.916 705.607 215.515 705.945 215.017 706.187 cv
214.519 706.429 214.007 706.55 213.481 706.55 cv
212.771 706.55 212.121 706.358 211.531 705.975 cv
211.347 706.23 211.255 706.514 211.255 706.823 cv
211.255 707.161 211.367 707.458 211.593 707.713 cv
211.819 707.969 212.102 708.096 212.444 708.096 cv
214.034 708.096 li
214.809 708.096 215.508 708.165 216.13 708.302 cv
216.753 708.438 217.274 708.715 217.694 709.13 cv
218.113 709.545 218.323 710.131 218.323 710.889 cv
218.323 711.454 218.083 711.924 217.603 712.298 cv
217.124 712.672 216.55 712.941 215.882 713.105 cv
215.213 713.27 214.592 713.352 214.021 713.352 cv
213.44 713.352 212.815 713.27 212.146 713.105 cv
211.478 712.941 210.902 712.672 210.417 712.298 cv
209.933 711.924 209.691 711.454 209.691 710.889 cv
209.691 710.889 li
cp
f
224.936 714.159 mo
224.207 713.593 223.582 712.945 223.06 712.215 cv
222.54 711.485 222.113 710.708 221.781 709.882 cv
221.449 709.057 221.2 708.191 221.034 707.288 cv
220.868 706.385 220.785 705.478 220.785 704.565 cv
220.785 703.644 220.868 702.731 221.034 701.828 cv
221.2 700.925 221.452 700.056 221.788 699.221 cv
222.125 698.387 222.556 697.606 223.082 696.881 cv
223.608 696.155 224.226 695.519 224.936 694.972 cv
224.936 694.944 224.963 694.931 225.018 694.931 cv
225.212 694.931 li
225.249 694.931 225.283 694.949 225.315 694.985 cv
225.348 695.021 225.364 695.059 225.364 695.095 cv
225.364 695.158 225.35 695.2 225.322 695.218 cv
224.686 695.839 224.158 696.5 223.738 697.203 cv
223.319 697.905 222.98 698.653 222.722 699.446 cv
222.464 700.241 222.277 701.063 222.162 701.91 cv
222.047 702.759 221.989 703.644 221.989 704.565 cv
221.989 708.653 223.091 711.755 225.295 713.872 cv
225.341 713.908 225.364 713.963 225.364 714.035 cv
225.364 714.063 225.346 714.098 225.309 714.139 cv
225.272 714.18 225.239 714.2 225.212 714.2 cv
225.018 714.2 li
224.963 714.2 224.936 714.187 224.936 714.159 cv
224.936 714.159 li
cp
f
227.558 709.656 mo
227.558 705.154 li
227.558 705.054 227.613 705.003 227.723 705.003 cv
227.972 705.003 li
228.009 705.003 228.044 705.02 228.076 705.052 cv
228.108 705.083 228.125 705.117 228.125 705.154 cv
228.125 706.413 228.519 707.39 229.307 708.083 cv
230.096 708.776 231.131 709.123 232.413 709.123 cv
232.865 709.123 233.28 708.995 233.658 708.74 cv
234.036 708.484 234.331 708.148 234.543 707.733 cv
234.756 707.318 234.862 706.888 234.862 706.44 cv
234.862 706.048 234.783 705.67 234.626 705.305 cv
234.469 704.939 234.241 704.623 233.941 704.354 cv
233.642 704.084 233.308 703.904 232.939 703.813 cv
230.407 703.196 li
229.568 702.978 228.883 702.528 228.353 701.849 cv
227.823 701.169 227.558 700.404 227.558 699.557 cv
227.558 698.891 227.729 698.266 228.069 697.682 cv
228.411 697.098 228.872 696.637 229.452 696.299 cv
230.034 695.961 230.661 695.793 231.334 695.793 cv
232.634 695.793 233.667 696.23 234.432 697.106 cv
235.235 695.848 li
235.272 695.811 235.318 695.793 235.374 695.793 cv
235.498 695.793 li
235.535 695.793 235.571 695.807 235.608 695.834 cv
235.645 695.861 235.664 695.902 235.664 695.957 cv
235.664 700.419 li
235.664 700.537 235.609 700.597 235.498 700.597 cv
235.276 700.597 li
235.156 700.597 235.096 700.537 235.096 700.419 cv
235.096 700.1 235.041 699.743 234.931 699.352 cv
234.82 698.959 234.665 698.585 234.467 698.229 cv
234.269 697.873 234.054 697.581 233.824 697.354 cv
233.197 696.732 232.367 696.422 231.334 696.422 cv
230.891 696.422 230.483 696.532 230.11 696.751 cv
229.736 696.97 229.439 697.271 229.218 697.653 cv
228.997 698.037 228.886 698.438 228.886 698.858 cv
228.886 699.415 229.058 699.916 229.404 700.363 cv
229.75 700.811 230.199 701.107 230.753 701.254 cv
233.284 701.869 li
233.699 701.97 234.093 702.15 234.467 702.41 cv
234.84 702.67 235.15 702.971 235.394 703.313 cv
235.638 703.655 235.832 704.038 235.975 704.463 cv
236.118 704.887 236.19 705.327 236.19 705.784 cv
236.19 706.477 236.028 707.132 235.706 707.747 cv
235.382 708.363 234.926 708.86 234.336 709.239 cv
233.746 709.617 233.105 709.807 232.413 709.807 cv
231.98 709.807 231.537 709.759 231.085 709.663 cv
230.633 709.567 230.218 709.424 229.84 709.232 cv
229.462 709.041 229.116 708.79 228.802 708.479 cv
227.986 709.752 li
227.949 709.788 227.903 709.807 227.848 709.807 cv
227.723 709.807 li
227.613 709.807 227.558 709.757 227.558 709.656 cv
227.558 709.656 li
cp
f
242.141 709.602 mo
241.348 709.602 240.633 709.398 239.997 708.993 cv
239.361 708.587 238.858 708.046 238.489 707.371 cv
238.12 706.695 237.936 705.979 237.936 705.223 cv
237.936 704.465 238.118 703.737 238.482 703.04 cv
238.846 702.341 239.349 701.784 239.99 701.369 cv
240.631 700.955 241.348 700.747 242.141 700.747 cv
242.897 700.747 243.589 700.894 244.216 701.186 cv
244.843 701.478 245.156 701.961 245.156 702.636 cv
245.156 702.891 245.064 703.11 244.88 703.293 cv
244.695 703.475 244.474 703.566 244.216 703.566 cv
243.958 703.566 243.738 703.475 243.558 703.293 cv
243.379 703.11 243.289 702.891 243.289 702.636 cv
243.289 702.407 243.361 702.211 243.504 702.047 cv
243.646 701.883 243.828 701.778 244.05 701.732 cv
243.598 701.449 242.966 701.308 242.154 701.308 cv
241.537 701.308 241.037 701.511 240.653 701.917 cv
240.271 702.323 240.004 702.827 239.852 703.43 cv
239.699 704.031 239.623 704.629 239.623 705.223 cv
239.623 705.843 239.717 706.442 239.906 707.022 cv
240.096 707.602 240.398 708.083 240.813 708.466 cv
241.228 708.849 241.749 709.04 242.376 709.04 cv
242.994 709.04 243.517 708.854 243.946 708.479 cv
244.375 708.105 244.668 707.617 244.824 707.016 cv
244.824 706.933 244.875 706.892 244.977 706.892 cv
245.212 706.892 li
245.258 706.892 245.295 706.91 245.323 706.947 cv
245.35 706.983 245.363 707.024 245.363 707.069 cv
245.363 707.125 li
245.17 707.882 244.783 708.484 244.202 708.931 cv
243.621 709.378 242.934 709.602 242.141 709.602 cv
242.141 709.602 li
cp
f
248.307 707.494 mo
248.307 707.941 248.473 708.319 248.806 708.63 cv
249.137 708.94 249.534 709.096 249.995 709.096 cv
250.41 709.096 250.79 708.99 251.136 708.78 cv
251.482 708.57 251.757 708.288 251.959 707.933 cv
252.162 707.576 252.264 707.202 252.264 706.81 cv
252.264 704.799 li
251.673 704.799 251.069 704.895 250.452 705.086 cv
249.834 705.277 249.322 705.576 248.917 705.981 cv
248.51 706.388 248.307 706.892 248.307 707.494 cv
248.307 707.494 li
cp
246.716 707.494 mo
246.716 706.728 247.021 706.104 247.629 705.626 cv
248.238 705.147 248.969 704.808 249.822 704.606 cv
250.675 704.405 251.489 704.306 252.264 704.306 cv
252.264 703.524 li
252.264 703.151 252.181 702.791 252.015 702.444 cv
251.849 702.097 251.609 701.812 251.295 701.588 cv
250.982 701.365 250.641 701.254 250.272 701.254 cv
249.405 701.254 248.75 701.445 248.307 701.828 cv
248.547 701.828 248.748 701.919 248.909 702.102 cv
249.07 702.284 249.151 702.499 249.151 702.745 cv
249.151 703 249.061 703.22 248.881 703.402 cv
248.702 703.584 248.483 703.676 248.224 703.676 cv
247.966 703.676 247.745 703.584 247.56 703.402 cv
247.376 703.22 247.284 703 247.284 702.745 cv
247.284 702.07 247.595 701.568 248.217 701.239 cv
248.84 700.911 249.525 700.747 250.272 700.747 cv
250.797 700.747 251.325 700.859 251.856 701.082 cv
252.386 701.306 252.821 701.623 253.162 702.033 cv
253.504 702.443 253.675 702.928 253.675 703.484 cv
253.675 707.823 li
253.675 708.069 253.728 708.297 253.834 708.507 cv
253.94 708.717 254.108 708.821 254.339 708.821 cv
254.551 708.821 254.71 708.717 254.816 708.507 cv
254.922 708.297 254.975 708.069 254.975 707.823 cv
254.975 706.591 li
255.542 706.591 li
255.542 707.823 li
255.542 708.105 255.466 708.379 255.314 708.644 cv
255.161 708.908 254.959 709.115 254.706 709.267 cv
254.452 709.417 254.173 709.492 253.868 709.492 cv
253.49 709.492 253.163 709.347 252.886 709.055 cv
252.61 708.763 252.457 708.415 252.429 708.014 cv
252.19 708.498 251.835 708.884 251.364 709.171 cv
250.894 709.458 250.391 709.602 249.857 709.602 cv
249.368 709.602 248.883 709.528 248.404 709.383 cv
247.924 709.236 247.524 709.009 247.201 708.698 cv
246.878 708.388 246.716 707.986 246.716 707.494 cv
246.716 707.494 li
cp
f
256.275 709.383 mo
256.275 708.698 li
256.718 708.698 257.082 708.664 257.368 708.596 cv
257.654 708.527 257.797 708.36 257.797 708.096 cv
257.797 697.982 li
257.797 697.636 257.746 697.385 257.645 697.229 cv
257.543 697.074 257.393 696.981 257.195 696.949 cv
256.997 696.917 256.69 696.901 256.275 696.901 cv
256.275 696.218 li
259.167 696.012 li
259.167 708.096 li
259.167 708.36 259.31 708.527 259.595 708.596 cv
259.881 708.664 260.245 708.698 260.688 708.698 cv
260.688 709.383 li
256.275 709.383 li
256.275 709.383 li
cp
f
263.36 704.456 mo
267.799 704.456 li
267.799 703.973 267.731 703.481 267.592 702.984 cv
267.454 702.487 267.226 702.074 266.908 701.746 cv
266.59 701.418 266.177 701.254 265.67 701.254 cv
264.932 701.254 264.362 701.594 263.962 702.273 cv
263.56 702.953 263.36 703.681 263.36 704.456 cv
263.36 704.456 li
cp
265.946 709.602 mo
265.153 709.602 264.425 709.396 263.761 708.986 cv
263.097 708.575 262.575 708.025 262.197 707.337 cv
261.819 706.647 261.631 705.92 261.631 705.154 cv
261.631 704.406 261.803 703.691 262.15 703.012 cv
262.495 702.332 262.977 701.784 263.594 701.369 cv
264.212 700.955 264.904 700.747 265.67 700.747 cv
266.26 700.747 266.776 700.845 267.219 701.041 cv
267.661 701.237 268.026 701.511 268.312 701.862 cv
268.598 702.214 268.812 702.629 268.955 703.107 cv
269.098 703.587 269.169 704.109 269.169 704.675 cv
269.169 704.849 269.105 704.935 268.976 704.935 cv
263.332 704.935 li
263.332 705.14 li
263.332 706.207 263.549 707.124 263.982 707.891 cv
264.415 708.657 265.125 709.04 266.112 709.04 cv
266.509 709.04 266.878 708.951 267.219 708.774 cv
267.56 708.596 267.855 708.35 268.104 708.035 cv
268.353 707.72 268.524 707.385 268.616 707.028 cv
268.625 706.982 268.648 706.944 268.685 706.913 cv
268.722 706.881 268.764 706.864 268.81 706.864 cv
268.976 706.864 li
269.105 706.864 269.169 706.946 269.169 707.11 cv
268.985 707.832 268.589 708.427 267.98 708.896 cv
267.371 709.366 266.693 709.602 265.946 709.602 cv
265.946 709.602 li
cp
f
271.006 714.2 mo
270.895 714.2 270.84 714.146 270.84 714.035 cv
270.84 713.972 270.854 713.931 270.882 713.913 cv
273.095 711.769 274.201 708.652 274.201 704.565 cv
274.201 700.478 273.109 697.376 270.923 695.259 cv
270.867 695.231 270.84 695.177 270.84 695.095 cv
270.84 695.059 270.859 695.021 270.896 694.985 cv
270.932 694.949 270.969 694.931 271.006 694.931 cv
271.2 694.931 li
271.237 694.931 271.264 694.944 271.282 694.972 cv
272.215 695.692 272.991 696.575 273.613 697.619 cv
274.236 698.664 274.693 699.775 274.983 700.952 cv
275.274 702.13 275.419 703.334 275.419 704.565 cv
275.419 705.478 275.34 706.374 275.184 707.254 cv
275.027 708.135 274.78 709.004 274.444 709.862 cv
274.107 710.72 273.678 711.509 273.157 712.229 cv
272.636 712.95 272.011 713.593 271.282 714.159 cv
271.264 714.187 271.237 714.2 271.2 714.2 cv
271.006 714.2 li
271.006 714.2 li
cp
f
427.778 376.039 mo
423.936 376.039 li
427.778 424.577 mo
423.936 424.577 li
427.778 473.115 mo
423.936 473.115 li
427.778 521.654 mo
423.936 521.654 li
427.778 570.193 mo
423.936 570.193 li
427.778 618.731 mo
423.936 618.731 li
427.778 667.271 mo
423.936 667.271 li
43.5456 376.039 mo
47.3878 376.039 li
43.5456 424.577 mo
47.3878 424.577 li
43.5456 473.115 mo
47.3878 473.115 li
43.5456 521.654 mo
47.3878 521.654 li
43.5456 570.193 mo
47.3878 570.193 li
43.5456 618.731 mo
47.3878 618.731 li
43.5456 667.271 mo
47.3878 667.271 li
427.778 667.271 mo
427.778 376.039 li
43.5456 667.271 mo
43.5456 376.039 li
@
.301961 .301961 .309804 rgb
%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.systemdict beginGHMBXJ+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/hyphen <1C60D8A8C9B81F2C7FA8F2666424EE62590A3687533A> |-systemdict /gcheck known {setglobal} if end {end} ifendGHMBXJ+Times-Roman /Encoding getdup 45 /hyphen putpop%ADOEndSubsetFont
/GHMBXJ+Times-Roman*1 [45{/.notdef}rp /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine 198{/.notdef}rp]GHMBXJ+Times-Roman nfGHMBXJ+Times-Roman*1 [17.7066 0 0 -17.5177 0 0 ]msf23.1836 672.964 mo(-1)[5.89648 0 ]xsh29.3804 624.421 mo(0)sh29.3804 575.891 mo(1)sh29.3804 527.349 mo(2)sh29.3804 478.805 mo(3)sh29.3804 430.275 mo(4)sh29.3804 381.732 mo(5)sh13.5153 545.047 mo
12.8239 545.047 li
12.8239 544.608 12.7892 544.248 12.7194 543.966 cv
12.6505 543.683 12.4821 543.541 12.215 543.541 cv
1.99185 543.541 li
1.64175 543.541 1.38834 543.591 1.2316 543.691 cv
1.07437 543.792 .980132 543.94 .947906 544.137 cv
.915679 544.333 .899566 544.636 .899566 545.047 cv
.208159 545.047 li
.000151648 542.186 li
12.215 542.186 li
12.4821 542.186 12.6505 542.045 12.7194 541.762 cv
12.7892 541.479 12.8239 541.119 12.8239 540.682 cv
13.5153 540.682 li
13.5153 545.047 li
13.5153 545.047 li
cp
.149 .149 .149 rgb
f
13.1691 535.465 mo
13.1691 534.434 12.7912 533.747 12.0353 533.405 cv
11.279 533.063 10.3151 532.892 9.14371 532.892 cv
8.49869 532.892 7.96158 532.926 7.53238 532.994 cv
7.10367 533.063 6.71451 533.212 6.36392 533.439 cv
6.15103 533.585 5.96451 533.771 5.80337 533.994 cv
5.64224 534.218 5.51773 534.452 5.42984 534.699 cv
5.34244 534.945 5.29849 535.201 5.29849 535.465 cv
5.29849 535.866 5.39078 536.247 5.57486 536.607 cv
5.75943 536.969 6.02261 537.268 6.36392 537.504 cv
6.73257 537.741 7.13589 537.895 7.57388 537.963 cv
8.01187 538.031 8.53531 538.065 9.14371 538.065 cv
9.87271 538.065 10.5275 538.002 11.1081 537.874 cv
11.6896 537.746 12.1784 537.493 12.5744 537.114 cv
12.9709 536.735 13.1691 536.186 13.1691 535.465 cv
13.1691 535.465 li
cp
13.7365 535.465 mo
13.7365 536.241 13.5382 536.957 13.1418 537.614 cv
12.7453 538.271 12.2126 538.791 11.5436 539.174 cv
10.8756 539.557 10.1496 539.748 9.3649 539.748 cv
8.77457 539.748 8.20328 539.644 7.65005 539.434 cv
7.09634 539.225 6.60318 538.923 6.17007 538.531 cv
5.73648 538.139 5.39761 537.683 5.15347 537.162 cv
4.90933 536.643 4.78677 536.076 4.78677 535.465 cv
4.78677 534.671 4.99625 533.95 5.41568 533.303 cv
5.83511 532.655 6.40054 532.145 7.11099 531.77 cv
7.82095 531.396 8.57242 531.208 9.3649 531.208 cv
10.1496 531.208 10.8756 531.398 11.5436 531.777 cv
12.2126 532.155 12.7453 532.673 13.1418 533.33 cv
13.5382 533.986 13.7365 534.698 13.7365 535.465 cv
13.7365 535.465 li
cp
f
10.1266 526.364 mo
10.1266 525.278 9.34244 524.735 7.77505 524.735 cv
7.09195 524.735 6.53189 524.85 6.0939 525.077 cv
5.65591 525.306 5.43668 525.734 5.43668 526.364 cv
5.43668 526.993 5.65591 527.425 6.0939 527.657 cv
6.53189 527.89 7.09195 528.006 7.77505 528.006 cv
8.19888 528.006 8.58609 527.963 8.93668 527.877 cv
9.28726 527.79 9.57291 527.625 9.79459 527.384 cv
10.0158 527.142 10.1266 526.802 10.1266 526.364 cv
10.1266 526.364 li
cp
15.0373 529.033 mo
15.4704 529.033 15.8346 528.857 16.13 528.506 cv
16.425 528.154 16.6437 527.73 16.7868 527.232 cv
16.9294 526.736 17.0011 526.269 17.0011 525.83 cv
17.0011 525.401 16.9294 524.938 16.7868 524.441 cv
16.6437 523.944 16.425 523.521 16.13 523.175 cv
15.8346 522.829 15.4704 522.655 15.0373 522.655 cv
14.3546 522.655 13.9137 522.961 13.7155 523.572 cv
13.5177 524.184 13.4191 524.932 13.4191 525.816 cv
13.4191 527.391 li
13.4191 527.683 13.4904 527.954 13.633 528.205 cv
13.776 528.456 13.9762 528.656 14.2345 528.807 cv
14.4928 528.957 14.7604 529.033 15.0373 529.033 cv
15.0373 529.033 li
cp
15.0373 530.113 mo
14.5758 530.113 14.172 529.947 13.8263 529.614 cv
13.4811 529.281 13.2345 528.887 13.0871 528.431 cv
12.8927 528.686 12.6461 528.88 12.3468 529.013 cv
12.047 529.145 11.7311 529.211 11.3986 529.211 cv
10.7902 529.211 10.2506 529.023 9.78043 528.649 cv
9.19937 529.233 8.53091 529.525 7.77505 529.525 cv
7.3688 529.525 6.98794 529.438 6.63296 529.266 cv
6.27798 529.093 5.96939 528.853 5.70669 528.547 cv
5.44351 528.241 5.24527 527.899 5.11197 527.521 cv
4.97769 527.142 4.9108 526.757 4.9108 526.364 cv
4.9108 525.598 5.13687 524.913 5.58902 524.311 cv
5.30289 524.046 5.08169 523.734 4.92496 523.374 cv
4.76822 523.014 4.6896 522.637 4.6896 522.245 cv
4.6896 521.971 4.78873 521.745 4.98697 521.567 cv
5.18521 521.39 5.4274 521.301 5.71304 521.301 cv
5.86978 521.301 6.00845 521.359 6.12808 521.479 cv
6.2482 521.597 6.30777 521.738 6.30777 521.902 cv
6.30777 522.058 6.2482 522.197 6.12808 522.32 cv
6.00845 522.443 5.86978 522.505 5.71304 522.505 cv
5.46451 522.505 5.2941 522.423 5.20132 522.259 cv
5.20132 522.925 5.43228 523.499 5.89371 523.982 cv
6.13345 523.745 6.42105 523.557 6.75748 523.415 cv
7.0939 523.273 7.43326 523.203 7.77505 523.203 cv
8.32779 523.203 8.82339 523.354 9.26138 523.654 cv
9.69937 523.955 10.0407 524.353 10.2848 524.845 cv
10.5299 525.338 10.6525 525.844 10.6525 526.364 cv
10.6525 527.066 10.4582 527.71 10.0705 528.294 cv
10.3293 528.477 10.6149 528.567 10.9284 528.567 cv
11.2697 528.567 11.5695 528.456 11.8278 528.232 cv
12.0861 528.009 12.215 527.728 12.215 527.391 cv
12.215 525.816 li
12.215 525.051 12.2843 524.359 12.423 523.743 cv
12.5612 523.127 12.84 522.611 13.2594 522.196 cv
13.6794 521.781 14.2716 521.574 15.0373 521.574 cv
15.6086 521.574 16.0836 521.812 16.4616 522.286 cv
16.84 522.76 17.112 523.328 17.278 523.989 cv
17.444 524.651 17.527 525.265 17.527 525.83 cv
17.527 526.405 17.444 527.023 17.278 527.685 cv
17.112 528.347 16.84 528.917 16.4616 529.396 cv
16.0836 529.874 15.6086 530.113 15.0373 530.113 cv
15.0373 530.113 li
cp
f
13.5153 516.63 mo
13.5153 516.758 13.4279 516.822 13.2526 516.822 cv
13.2248 516.813 13.1715 516.799 13.0929 516.781 cv
13.0153 516.763 12.9508 516.735 12.9001 516.698 cv
12.8493 516.662 12.8239 516.621 12.8239 516.576 cv
12.8239 515.791 12.7824 515.244 12.6989 514.934 cv
12.6437 514.77 12.4684 514.646 12.173 514.564 cv
1.48013 511.923 li
1.35123 511.895 1.25894 511.881 1.20425 511.881 cv
1.06509 511.881 .986968 511.964 .968413 512.128 cv
.922515 512.365 .899566 512.826 .899566 513.511 cv
.899566 513.629 .811675 513.688 .636382 513.688 cv
.609038 513.688 .553374 513.679 .470855 513.661 cv
.387847 513.643 .322906 513.615 .277007 513.579 cv
.231109 513.542 .208159 513.501 .208159 513.455 cv
.208159 503.273 li
.208159 503.146 .295562 503.082 .470855 503.082 cv
4.49576 503.547 li
4.53287 503.547 4.57193 503.567 4.61343 503.608 cv
4.65543 503.649 4.67642 503.693 4.67642 503.739 cv
4.67642 503.902 li
4.67642 504.039 4.59293 504.107 4.42642 504.107 cv
3.83658 504.026 3.3522 503.985 2.97476 503.985 cv
2.32876 503.985 1.85367 504.122 1.54947 504.396 cv
1.24527 504.669 1.0607 505.019 .995757 505.442 cv
.931792 505.866 .899566 506.448 .899566 507.188 cv
.899566 509.24 li
.899566 509.596 .929351 509.831 .988921 509.945 cv
1.04898 510.06 1.24039 510.162 1.56363 510.253 cv
6.52945 511.484 li
6.52945 510.034 li
6.52945 509.56 6.50406 509.175 6.45328 508.878 cv
6.4025 508.581 6.30337 508.337 6.15543 508.146 cv
6.00796 507.954 5.79605 507.792 5.52017 507.659 cv
5.24332 507.527 4.87857 507.411 4.42642 507.311 cv
4.30679 507.274 4.24673 507.205 4.24673 507.105 cv
4.24673 506.941 li
4.24673 506.804 4.32974 506.735 4.49576 506.735 cv
9.31021 507.913 li
9.42056 507.977 9.47574 508.046 9.47574 508.118 cv
9.47574 508.282 li
9.47574 508.41 9.39273 508.474 9.22671 508.474 cv
9.08853 508.438 8.97574 508.41 8.88785 508.392 cv
8.80044 508.374 8.67398 508.351 8.50796 508.323 cv
8.34146 508.296 8.194 508.282 8.06509 508.282 cv
7.68716 508.282 7.44693 508.446 7.34537 508.775 cv
7.2438 509.104 7.19302 509.527 7.19302 510.048 cv
7.19302 511.635 li
12.2565 512.881 li
12.3761 512.917 12.4362 512.936 12.4362 512.936 cv
12.5934 512.936 12.6808 512.886 12.6989 512.785 cv
12.7824 512.456 12.8239 511.804 12.8239 510.827 cv
12.8239 510.7 12.9118 510.637 13.0871 510.637 cv
13.2711 510.683 13.3883 510.717 13.4391 510.739 cv
13.4899 510.762 13.5153 510.837 13.5153 510.965 cv
13.5153 516.63 li
13.5153 516.63 li
cp
f
16.2296 502.843 mo
16.2296 502.533 16.112 502.231 15.8766 501.94 cv
15.6418 501.648 15.3629 501.393 15.0397 501.174 cv
12.0519 500.435 li
11.7384 500.489 11.4713 500.604 11.2497 500.776 cv
11.0285 500.95 10.9176 501.179 10.9176 501.461 cv
10.9176 501.762 11.0402 502.04 11.2843 502.296 cv
11.529 502.552 11.8166 502.766 12.1486 502.939 cv
12.4992 503.104 12.9836 503.266 13.6012 503.425 cv
14.2194 503.585 14.6989 503.665 15.0397 503.665 cv
15.3439 503.665 15.6178 503.599 15.8625 503.466 cv
16.1076 503.334 16.2296 503.126 16.2296 502.843 cv
16.2296 502.843 li
cp
18.8444 503.213 mo
18.6505 503.186 18.5539 503.126 18.5539 503.035 cv
18.5539 502.725 18.5285 502.479 18.4777 502.296 cv
18.4269 502.113 18.3 501.995 18.0968 501.94 cv
15.8419 501.365 li
16.34 501.867 16.589 502.369 16.589 502.871 cv
16.589 503.428 16.3771 503.86 15.9528 504.171 cv
15.5285 504.48 15.0304 504.636 14.4591 504.636 cv
13.8961 504.636 13.3078 504.492 12.6945 504.205 cv
12.0817 503.918 11.5744 503.527 11.1735 503.035 cv
10.7726 502.542 10.5719 502.008 10.5719 501.434 cv
10.5719 501.169 10.6501 500.93 10.8073 500.716 cv
10.9635 500.501 11.1754 500.339 11.443 500.229 cv
11.3415 500.175 11.1706 500.031 10.9313 499.799 cv
10.6916 499.565 10.5719 499.403 10.5719 499.313 cv
10.5719 499.212 10.6266 499.162 10.7375 499.162 cv
18.152 501.01 li
18.2809 501.028 18.3551 501.037 18.3732 501.037 cv
18.4938 501.037 18.5539 500.749 18.5539 500.174 cv
18.5539 500.129 18.57 500.095 18.6017 500.071 cv
18.6339 500.049 18.6735 500.037 18.7194 500.037 cv
18.839 500.074 18.9176 500.102 18.9547 500.12 cv
18.9914 500.138 19.0099 500.188 19.0099 500.271 cv
19.0099 503.076 li
19.0099 503.167 18.9547 503.213 18.8444 503.213 cv
18.8444 503.213 li
cp
f
1 lw
0 lc
73.2306 653.552 mo
126.497 610.043 li
179.763 570.233 li
233.029 531.362 li
286.295 493.138 li
339.561 455.057 li
392.826 417.402 li
.423529 .215686 .6 rgb
@
73.2306 653.047 mo
126.497 609.559 li
179.763 569.785 li
233.029 530.956 li
286.295 492.815 li
339.561 454.834 li
392.826 417.302 li
.364706 .72549 .796078 rgb
@
73.2306 652.497 mo
126.497 609.033 li
179.763 569.299 li
233.029 530.521 li
286.295 492.47 li
339.561 454.601 li
392.826 417.196 li
.509804 0 .74902 rgb
@
73.2306 651.896 mo
126.497 608.462 li
179.763 568.771 li
233.029 530.05 li
286.295 492.102 li
339.561 454.354 li
392.826 417.087 li
0 .45098 .466667 rgb
@
73.2306 651.237 mo
126.497 607.837 li
179.763 568.196 li
233.029 529.542 li
286.295 491.709 li
339.561 454.096 li
392.826 416.976 li
1 .109804 .619608 rgb
@
73.2306 650.51 mo
126.497 607.153 li
179.763 567.569 li
233.029 528.993 li
286.295 491.289 li
339.561 453.827 li
392.826 416.861 li
.313726 .709804 .937255 rgb
@
73.2306 649.703 mo
126.497 606.399 li
179.763 566.884 li
233.029 528.401 li
286.295 490.844 li
339.561 453.547 li
392.826 416.743 li
.839216 .00392157 .572549 rgb
@
73.2306 648.805 mo
126.497 605.569 li
179.763 566.133 li
233.029 527.764 li
286.295 490.371 li
339.561 453.256 li
392.826 416.623 li
.458824 .705882 .823529 rgb
@
73.2306 647.796 mo
126.497 604.647 li
179.763 565.31 li
233.029 527.078 li
286.295 489.872 li
339.561 452.956 li
392.826 416.501 li
.454902 .270588 .94902 rgb
@
73.2306 646.659 mo
126.497 603.62 li
179.763 564.406 li
233.029 526.343 li
286.295 489.347 li
339.561 452.648 li
392.826 416.379 li
.278431 .321569 .388235 rgb
@
73.2306 645.372 mo
126.497 602.475 li
179.763 563.414 li
233.029 525.559 li
286.295 488.798 li
339.561 452.335 li
392.826 416.254 li
.00784314 .258824 .913725 rgb
@
73.2306 643.911 mo
126.497 601.193 li
179.763 562.328 li
233.029 524.725 li
286.295 488.229 li
339.561 452.018 li
392.826 416.131 li
.733333 .537255 .596078 rgb
@
73.2306 642.257 mo
126.497 599.764 li
179.763 561.141 li
233.029 523.846 li
286.295 487.643 li
339.561 451.697 li
392.826 416.006 li
.270588 .423529 1 rgb
@
73.2306 640.397 mo
126.497 598.18 li
179.763 559.857 li
233.029 522.927 li
286.295 487.045 li
339.561 451.377 li
392.826 415.884 li
.819608 .513726 .607843 rgb
@
73.2306 638.34 mo
126.497 596.45 li
179.763 558.481 li
233.029 521.975 li
286.295 486.437 li
339.561 451.06 li
392.826 415.761 li
0 .513726 1 rgb
@
73.2306 636.121 mo
126.497 594.598 li
179.763 557.034 li
233.029 520.998 li
286.295 485.825 li
339.561 450.745 li
392.826 415.641 li
.662745 0 .415686 rgb
@
73.2306 633.808 mo
126.497 592.672 li
179.763 555.542 li
233.029 520.011 li
286.295 485.214 li
339.561 450.438 li
392.826 415.523 li
.00392157 .564706 .917647 rgb
@
73.2306 631.488 mo
126.497 590.732 li
179.763 554.038 li
233.029 519.024 li
286.295 484.605 li
339.561 450.139 li
392.826 415.409 li
1 .407843 .870588 rgb
@
73.2306 629.25 mo
126.497 588.841 li
179.763 552.558 li
233.029 518.056 li
286.295 484.003 li
339.561 449.849 li
392.826 415.297 li
.00392157 .439216 .654902 rgb
@
73.2306 627.158 mo
126.497 587.05 li
179.763 551.131 li
233.029 517.116 li
286.295 483.407 li
339.561 449.57 li
392.826 415.188 li
.980392 .529412 .741176 rgb
@
73.2306 625.253 mo
126.497 585.394 li
179.763 549.781 li
233.029 516.22 li
286.295 482.822 li
339.561 449.303 li
392.826 415.083 li
.0313726 .286275 .709804 rgb
@
73.2306 623.543 mo
126.497 583.885 li
179.763 548.52 li
233.029 515.373 li
286.295 482.248 li
339.561 449.048 li
392.826 414.982 li
.698039 .321569 .454902 rgb
@
73.2306 622.022 mo
126.497 582.527 li
179.763 547.353 li
233.029 514.582 li
286.295 481.688 li
339.561 448.807 li
392.826 414.885 li
.827451 .478431 1 rgb
@
73.2306 620.676 mo
126.497 581.311 li
179.763 546.277 li
233.029 513.85 li
286.295 481.144 li
339.561 448.578 li
392.826 414.791 li
.623529 .67451 .776471 rgb
@
73.2306 619.483 mo
126.497 580.222 li
179.763 545.292 li
233.029 513.174 li
286.295 480.616 li
339.561 448.361 li
392.826 414.702 li
.560784 .0901961 .52549 rgb
@
73.2306 618.426 mo
126.497 579.246 li
179.763 544.389 li
233.029 512.555 li
286.295 480.107 li
339.561 448.158 li
392.826 414.616 li
.25098 .313726 .466667 rgb
@
73.2306 617.485 mo
126.497 578.37 li
179.763 543.563 li
233.029 511.987 li
286.295 479.621 li
339.561 447.967 li
392.826 414.535 li
.964706 .52549 .827451 rgb
@
73.2306 616.645 mo
126.497 577.58 li
179.763 542.804 li
233.029 511.468 li
286.295 479.156 li
339.561 447.787 li
392.826 414.457 li
.286275 .286275 .560784 rgb
@
73.2306 615.893 mo
126.497 576.865 li
179.763 542.107 li
233.029 510.992 li
286.295 478.716 li
339.561 447.618 li
392.826 414.383 li
.886275 .552941 .913725 rgb
@
73.2306 615.216 mo
126.497 576.216 li
179.763 541.467 li
233.029 510.557 li
286.295 478.299 li
339.561 447.459 li
392.826 414.312 li
.494118 .219608 .388235 rgb
@
73.2306 614.604 mo
126.497 575.623 li
179.763 540.878 li
233.029 510.155 li
286.295 477.906 li
339.561 447.312 li
392.826 414.244 li
.776471 .623529 .807843 rgb
@
564.243 668.581 mo
943.751 668.581 li
943.751 374.051 li
564.243 374.051 li
564.243 668.581 li
cp
1 1 1 rgb
f
.5 lw
2 lc
943.751 374.051 mo
943.751 377.896 li
867.85 374.051 mo
867.85 377.896 li
791.948 374.051 mo
791.948 377.896 li
716.046 374.051 mo
716.046 377.896 li
640.145 374.051 mo
640.145 377.896 li
564.243 374.051 mo
564.243 377.896 li
943.751 668.581 mo
943.751 664.736 li
867.85 668.581 mo
867.85 664.736 li
791.948 668.581 mo
791.948 664.736 li
716.046 668.581 mo
716.046 664.736 li
640.145 668.581 mo
640.145 664.736 li
564.243 668.581 mo
564.243 664.736 li
564.243 374.051 mo
943.751 374.051 li
564.243 668.581 mo
943.751 668.581 li
.149 .149 .149 rgb
@
.301961 .301961 .309804 rgb
GHMBXJ+Times-Roman*1 [17.4888 0 0 -17.7161 0 0 ]msf559.871 689.842 mo(123456)[75.9009 75.9014 75.9014 75.9014 75.9014 0 ]xsh713.438 711.171 mo
713.438 710.479 li
713.874 710.479 714.234 710.443 714.518 710.374 cv
714.799 710.305 714.941 710.137 714.941 709.869 cv
714.941 699.641 li
714.941 699.291 714.891 699.037 714.79 698.88 cv
714.69 698.723 714.542 698.628 714.346 698.597 cv
714.15 698.564 713.847 698.548 713.438 698.548 cv
713.438 697.855 li
716.293 697.647 li
716.293 709.869 li
716.293 710.137 716.435 710.305 716.717 710.374 cv
716.999 710.443 717.359 710.479 717.796 710.479 cv
717.796 711.171 li
713.438 711.171 li
713.438 711.171 li
cp
.149 .149 .149 rgb
f
723.003 710.824 mo
724.032 710.824 724.718 710.446 725.06 709.689 cv
725.401 708.933 725.572 707.969 725.572 706.796 cv
725.572 706.151 725.538 705.613 725.47 705.185 cv
725.401 704.756 725.253 704.365 725.026 704.015 cv
724.88 703.803 724.695 703.615 724.472 703.454 cv
724.248 703.293 724.014 703.168 723.768 703.08 cv
723.523 702.993 723.268 702.949 723.003 702.949 cv
722.603 702.949 722.222 703.041 721.862 703.226 cv
721.503 703.41 721.204 703.674 720.967 704.015 cv
720.731 704.384 720.578 704.788 720.51 705.226 cv
720.442 705.664 720.407 706.188 720.407 706.796 cv
720.407 707.525 720.471 708.181 720.598 708.762 cv
720.726 709.344 720.979 709.833 721.358 710.229 cv
721.734 710.626 722.283 710.824 723.003 710.824 cv
723.003 710.824 li
cp
723.003 711.392 mo
722.229 711.392 721.514 711.193 720.858 710.797 cv
720.202 710.399 719.683 709.867 719.301 709.198 cv
718.918 708.529 718.727 707.803 718.727 707.018 cv
718.727 706.428 718.831 705.855 719.041 705.302 cv
719.25 704.748 719.551 704.255 719.943 703.821 cv
720.334 703.388 720.789 703.049 721.309 702.804 cv
721.828 702.56 722.393 702.438 723.003 702.438 cv
723.796 702.438 724.516 702.647 725.162 703.066 cv
725.809 703.486 726.319 704.052 726.693 704.763 cv
727.066 705.473 727.253 706.225 727.253 707.018 cv
727.253 707.803 727.064 708.529 726.685 709.198 cv
726.308 709.867 725.79 710.399 725.135 710.797 cv
724.479 711.193 723.769 711.392 723.003 711.392 cv
723.003 711.392 li
cp
f
732.089 707.779 mo
733.173 707.779 733.716 706.995 733.716 705.427 cv
733.716 704.744 733.602 704.183 733.374 703.745 cv
733.146 703.307 732.718 703.088 732.089 703.088 cv
731.461 703.088 731.03 703.307 730.799 703.745 cv
730.566 704.183 730.449 704.744 730.449 705.427 cv
730.449 705.851 730.493 706.238 730.58 706.589 cv
730.666 706.939 730.83 707.226 731.071 707.447 cv
731.313 707.669 731.651 707.779 732.089 707.779 cv
732.089 707.779 li
cp
729.425 712.693 mo
729.425 713.127 729.6 713.491 729.951 713.786 cv
730.302 714.081 730.725 714.301 731.222 714.443 cv
731.719 714.587 732.186 714.658 732.622 714.658 cv
733.051 714.658 733.513 714.587 734.009 714.443 cv
734.505 714.301 734.927 714.081 735.273 713.786 cv
735.619 713.491 735.792 713.127 735.792 712.693 cv
735.792 712.01 735.487 711.569 734.877 711.371 cv
734.267 711.173 733.52 711.074 732.636 711.074 cv
731.065 711.074 li
730.773 711.074 730.502 711.146 730.252 711.288 cv
730.001 711.432 729.801 711.632 729.651 711.89 cv
729.5 712.148 729.425 712.416 729.425 712.693 cv
729.425 712.693 li
cp
728.346 712.693 mo
728.346 712.231 728.512 711.827 728.844 711.481 cv
729.177 711.136 729.571 710.89 730.026 710.742 cv
729.771 710.548 729.577 710.301 729.445 710.001 cv
729.314 709.701 729.247 709.385 729.247 709.053 cv
729.247 708.443 729.434 707.904 729.808 707.434 cv
729.225 706.853 728.934 706.184 728.934 705.427 cv
728.934 705.021 729.02 704.64 729.193 704.284 cv
729.366 703.93 729.606 703.62 729.91 703.357 cv
730.215 703.095 730.557 702.896 730.935 702.763 cv
731.313 702.628 731.697 702.562 732.089 702.562 cv
732.855 702.562 733.538 702.787 734.139 703.24 cv
734.402 702.953 734.715 702.732 735.074 702.575 cv
735.434 702.418 735.81 702.34 736.201 702.34 cv
736.475 702.34 736.7 702.439 736.878 702.638 cv
737.056 702.836 737.145 703.078 737.145 703.364 cv
737.145 703.521 737.085 703.659 736.967 703.779 cv
736.849 703.899 736.707 703.959 736.543 703.959 cv
736.389 703.959 736.249 703.899 736.126 703.779 cv
736.003 703.659 735.942 703.521 735.942 703.364 cv
735.942 703.115 736.025 702.944 736.189 702.852 cv
735.524 702.852 734.949 703.083 734.467 703.545 cv
734.703 703.784 734.893 704.072 735.033 704.409 cv
735.175 704.746 735.246 705.085 735.246 705.427 cv
735.246 705.98 735.096 706.476 734.795 706.914 cv
734.494 707.353 734.098 707.693 733.607 707.938 cv
733.114 708.184 732.609 708.306 732.089 708.306 cv
731.388 708.306 730.745 708.111 730.163 707.724 cv
729.981 707.982 729.89 708.269 729.89 708.582 cv
729.89 708.924 730.001 709.224 730.224 709.482 cv
730.447 709.74 730.728 709.869 731.065 709.869 cv
732.636 709.869 li
733.401 709.869 734.091 709.938 734.705 710.077 cv
735.32 710.216 735.835 710.494 736.25 710.914 cv
736.664 711.334 736.871 711.927 736.871 712.693 cv
736.871 713.265 736.635 713.74 736.16 714.118 cv
735.688 714.497 735.12 714.77 734.46 714.936 cv
733.799 715.102 733.187 715.184 732.622 715.184 cv
732.048 715.184 731.431 715.102 730.771 714.936 cv
730.11 714.77 729.541 714.497 729.063 714.118 cv
728.585 713.74 728.346 713.265 728.346 712.693 cv
728.346 712.693 li
cp
f
743.402 716.001 mo
742.683 715.429 742.066 714.773 741.551 714.035 cv
741.036 713.297 740.615 712.511 740.287 711.676 cv
739.959 710.841 739.713 709.966 739.549 709.053 cv
739.385 708.139 739.303 707.221 739.303 706.299 cv
739.303 705.367 739.385 704.444 739.549 703.53 cv
739.713 702.617 739.962 701.738 740.294 700.894 cv
740.626 700.05 741.052 699.261 741.571 698.526 cv
742.091 697.793 742.701 697.149 743.402 696.597 cv
743.402 696.568 743.43 696.555 743.484 696.555 cv
743.676 696.555 li
743.712 696.555 743.746 696.573 743.777 696.609 cv
743.81 696.646 743.826 696.684 743.826 696.721 cv
743.826 696.785 743.813 696.827 743.785 696.846 cv
743.156 697.473 742.635 698.142 742.221 698.853 cv
741.806 699.563 741.471 700.319 741.217 701.122 cv
740.961 701.925 740.776 702.756 740.663 703.613 cv
740.549 704.472 740.492 705.366 740.492 706.299 cv
740.492 710.433 741.581 713.569 743.758 715.71 cv
743.803 715.747 743.826 715.802 743.826 715.876 cv
743.826 715.903 743.808 715.938 743.772 715.98 cv
743.734 716.021 743.703 716.042 743.676 716.042 cv
743.484 716.042 li
743.43 716.042 743.402 716.028 743.402 716.001 cv
743.402 716.001 li
cp
f
745.992 711.447 mo
745.992 706.894 li
745.992 706.792 746.047 706.741 746.156 706.741 cv
746.402 706.741 li
746.439 706.741 746.473 706.758 746.504 706.79 cv
746.536 706.822 746.553 706.856 746.553 706.894 cv
746.553 708.167 746.942 709.154 747.721 709.855 cv
748.499 710.557 749.522 710.907 750.788 710.907 cv
751.234 710.907 751.645 710.778 752.018 710.521 cv
752.392 710.262 752.683 709.923 752.892 709.503 cv
753.102 709.083 753.207 708.646 753.207 708.195 cv
753.207 707.798 753.129 707.415 752.975 707.046 cv
752.819 706.677 752.594 706.356 752.297 706.084 cv
752.002 705.812 751.672 705.63 751.308 705.538 cv
748.807 704.914 li
747.978 704.692 747.302 704.238 746.778 703.551 cv
746.254 702.863 745.992 702.091 745.992 701.232 cv
745.992 700.56 746.161 699.928 746.498 699.337 cv
746.835 698.746 747.29 698.28 747.864 697.938 cv
748.439 697.597 749.058 697.427 749.722 697.427 cv
751.007 697.427 752.026 697.869 752.782 698.755 cv
753.575 697.482 li
753.611 697.445 753.657 697.427 753.712 697.427 cv
753.835 697.427 li
753.871 697.427 753.908 697.44 753.944 697.468 cv
753.981 697.496 753.999 697.537 753.999 697.593 cv
753.999 702.105 li
753.999 702.225 753.944 702.285 753.835 702.285 cv
753.616 702.285 li
753.498 702.285 753.439 702.225 753.439 702.105 cv
753.439 701.782 753.384 701.422 753.276 701.025 cv
753.165 700.629 753.013 700.25 752.817 699.891 cv
752.621 699.53 752.409 699.235 752.182 699.005 cv
751.563 698.377 750.742 698.063 749.722 698.063 cv
749.285 698.063 748.882 698.174 748.513 698.396 cv
748.145 698.617 747.851 698.921 747.632 699.309 cv
747.414 699.696 747.305 700.103 747.305 700.526 cv
747.305 701.09 747.475 701.597 747.816 702.05 cv
748.157 702.502 748.602 702.802 749.149 702.949 cv
751.649 703.572 li
752.059 703.674 752.447 703.855 752.817 704.118 cv
753.186 704.382 753.491 704.686 753.733 705.032 cv
753.974 705.378 754.165 705.766 754.306 706.195 cv
754.447 706.624 754.519 707.069 754.519 707.53 cv
754.519 708.231 754.359 708.894 754.04 709.517 cv
753.722 710.139 753.271 710.642 752.688 711.025 cv
752.105 711.408 751.472 711.6 750.788 711.6 cv
750.36 711.6 749.923 711.551 749.477 711.454 cv
749.03 711.357 748.62 711.212 748.247 711.019 cv
747.873 710.824 747.531 710.57 747.222 710.257 cv
746.416 711.544 li
746.379 711.581 746.334 711.6 746.279 711.6 cv
746.156 711.6 li
746.047 711.6 745.992 711.549 745.992 711.447 cv
745.992 711.447 li
cp
f
760.397 711.392 mo
759.613 711.392 758.907 711.187 758.278 710.776 cv
757.651 710.365 757.153 709.818 756.789 709.136 cv
756.425 708.453 756.243 707.729 756.243 706.963 cv
756.243 706.197 756.423 705.461 756.782 704.756 cv
757.142 704.049 757.639 703.486 758.272 703.066 cv
758.904 702.647 759.613 702.438 760.397 702.438 cv
761.144 702.438 761.826 702.585 762.446 702.88 cv
763.066 703.176 763.375 703.664 763.375 704.347 cv
763.375 704.605 763.284 704.826 763.102 705.012 cv
762.92 705.195 762.701 705.288 762.446 705.288 cv
762.191 705.288 761.975 705.195 761.797 705.012 cv
761.619 704.826 761.53 704.605 761.53 704.347 cv
761.53 704.116 761.602 703.918 761.742 703.752 cv
761.883 703.586 762.064 703.479 762.281 703.434 cv
761.835 703.147 761.211 703.004 760.409 703.004 cv
759.8 703.004 759.306 703.209 758.928 703.62 cv
758.55 704.031 758.285 704.541 758.135 705.149 cv
757.984 705.759 757.909 706.363 757.909 706.963 cv
757.909 707.59 758.003 708.197 758.19 708.783 cv
758.376 709.369 758.675 709.855 759.085 710.243 cv
759.494 710.631 760.009 710.824 760.628 710.824 cv
761.238 710.824 761.756 710.635 762.18 710.257 cv
762.603 709.879 762.892 709.385 763.047 708.776 cv
763.047 708.693 763.097 708.651 763.197 708.651 cv
763.43 708.651 li
763.476 708.651 763.512 708.67 763.539 708.707 cv
763.567 708.743 763.579 708.785 763.579 708.831 cv
763.579 708.887 li
763.388 709.652 763.006 710.262 762.432 710.714 cv
761.859 711.166 761.18 711.392 760.397 711.392 cv
760.397 711.392 li
cp
f
766.487 709.261 mo
766.487 709.713 766.651 710.096 766.98 710.409 cv
767.307 710.723 767.698 710.88 768.153 710.88 cv
768.564 710.88 768.94 710.773 769.28 710.561 cv
769.622 710.349 769.894 710.063 770.094 709.703 cv
770.295 709.344 770.395 708.965 770.395 708.568 cv
770.395 706.534 li
769.812 706.534 769.215 706.631 768.605 706.825 cv
767.994 707.019 767.489 707.32 767.089 707.73 cv
766.688 708.142 766.487 708.651 766.487 709.261 cv
766.487 709.261 li
cp
764.915 709.261 mo
764.915 708.485 765.216 707.855 765.818 707.371 cv
766.419 706.887 767.141 706.543 767.984 706.34 cv
768.825 706.137 769.629 706.035 770.395 706.035 cv
770.395 705.246 li
770.395 704.868 770.313 704.504 770.15 704.153 cv
769.984 703.803 769.748 703.514 769.439 703.288 cv
769.129 703.063 768.792 702.949 768.428 702.949 cv
767.571 702.949 766.924 703.143 766.487 703.53 cv
766.724 703.53 766.922 703.622 767.081 703.807 cv
767.24 703.991 767.32 704.209 767.32 704.458 cv
767.32 704.716 767.232 704.938 767.054 705.122 cv
766.876 705.307 766.66 705.398 766.404 705.398 cv
766.151 705.398 765.932 705.307 765.749 705.122 cv
765.568 704.938 765.476 704.716 765.476 704.458 cv
765.476 703.775 765.783 703.268 766.398 702.936 cv
767.013 702.604 767.69 702.438 768.428 702.438 cv
768.946 702.438 769.468 702.55 769.991 702.775 cv
770.516 703.002 770.945 703.322 771.282 703.737 cv
771.62 704.153 771.789 704.642 771.789 705.205 cv
771.789 709.593 li
771.789 709.842 771.841 710.072 771.945 710.285 cv
772.05 710.497 772.217 710.603 772.444 710.603 cv
772.653 710.603 772.811 710.497 772.916 710.285 cv
773.021 710.072 773.072 709.842 773.072 709.593 cv
773.072 708.347 li
773.633 708.347 li
773.633 709.593 li
773.633 709.879 773.558 710.155 773.407 710.423 cv
773.257 710.69 773.057 710.9 772.807 711.053 cv
772.556 711.205 772.28 711.281 771.98 711.281 cv
771.607 711.281 771.283 711.134 771.01 710.838 cv
770.736 710.543 770.586 710.192 770.559 709.786 cv
770.321 710.275 769.971 710.666 769.506 710.956 cv
769.042 711.247 768.545 711.392 768.018 711.392 cv
767.534 711.392 767.056 711.318 766.582 711.171 cv
766.109 711.022 765.713 710.792 765.394 710.479 cv
765.075 710.164 764.915 709.759 764.915 709.261 cv
764.915 709.261 li
cp
f
774.357 711.171 mo
774.357 710.479 li
774.794 710.479 775.153 710.443 775.436 710.374 cv
775.719 710.305 775.86 710.137 775.86 709.869 cv
775.86 699.641 li
775.86 699.291 775.81 699.037 775.71 698.88 cv
775.609 698.723 775.461 698.628 775.266 698.597 cv
775.069 698.564 774.767 698.548 774.357 698.548 cv
774.357 697.855 li
777.213 697.647 li
777.213 709.869 li
777.213 710.137 777.354 710.305 777.636 710.374 cv
777.918 710.443 778.278 710.479 778.715 710.479 cv
778.715 711.171 li
774.357 711.171 li
774.357 711.171 li
cp
f
781.355 706.188 mo
785.739 706.188 li
785.739 705.699 785.671 705.203 785.535 704.699 cv
785.399 704.197 785.173 703.779 784.859 703.447 cv
784.545 703.115 784.137 702.949 783.636 702.949 cv
782.907 702.949 782.345 703.293 781.949 703.98 cv
781.553 704.668 781.355 705.403 781.355 706.188 cv
781.355 706.188 li
cp
783.909 711.392 mo
783.126 711.392 782.406 711.185 781.75 710.77 cv
781.095 710.354 780.58 709.798 780.206 709.102 cv
779.833 708.404 779.647 707.669 779.647 706.894 cv
779.647 706.138 779.818 705.415 780.159 704.728 cv
780.5 704.04 780.976 703.486 781.586 703.066 cv
782.196 702.647 782.88 702.438 783.636 702.438 cv
784.219 702.438 784.729 702.536 785.166 702.734 cv
785.604 702.933 785.963 703.209 786.246 703.565 cv
786.528 703.921 786.739 704.341 786.881 704.824 cv
787.022 705.309 787.092 705.837 787.092 706.409 cv
787.092 706.585 787.028 706.672 786.901 706.672 cv
781.327 706.672 li
781.327 706.88 li
781.327 707.959 781.541 708.887 781.969 709.662 cv
782.397 710.437 783.098 710.824 784.073 710.824 cv
784.465 710.824 784.829 710.734 785.166 710.555 cv
785.503 710.375 785.794 710.126 786.04 709.808 cv
786.286 709.489 786.455 709.149 786.546 708.789 cv
786.555 708.743 786.578 708.704 786.614 708.673 cv
786.651 708.64 786.692 708.624 786.737 708.624 cv
786.901 708.624 li
787.028 708.624 787.092 708.707 787.092 708.873 cv
786.91 709.602 786.519 710.204 785.918 710.679 cv
785.317 711.154 784.647 711.392 783.909 711.392 cv
783.909 711.392 li
cp
f
788.906 716.042 mo
788.797 716.042 788.742 715.987 788.742 715.876 cv
788.742 715.812 788.756 715.771 788.783 715.752 cv
790.97 713.583 792.063 710.433 792.063 706.299 cv
792.063 702.165 790.984 699.027 788.824 696.887 cv
788.77 696.859 788.742 696.804 788.742 696.721 cv
788.742 696.684 788.761 696.646 788.797 696.609 cv
788.834 696.573 788.87 696.555 788.906 696.555 cv
789.099 696.555 li
789.135 696.555 789.161 696.568 789.18 696.597 cv
790.1 697.325 790.867 698.218 791.482 699.274 cv
792.097 700.331 792.548 701.454 792.835 702.645 cv
793.121 703.835 793.265 705.053 793.265 706.299 cv
793.265 707.221 793.188 708.128 793.033 709.018 cv
792.878 709.908 792.635 710.787 792.302 711.655 cv
791.97 712.522 791.546 713.32 791.031 714.05 cv
790.517 714.778 789.9 715.429 789.18 716.001 cv
789.161 716.028 789.135 716.042 789.099 716.042 cv
788.906 716.042 li
788.906 716.042 li
cp
f
943.751 374.051 mo
939.955 374.051 li
943.751 416.127 mo
939.955 416.127 li
943.751 458.202 mo
939.955 458.202 li
943.751 500.278 mo
939.955 500.278 li
943.751 542.354 mo
939.955 542.354 li
943.751 584.43 mo
939.955 584.43 li
943.751 626.505 mo
939.955 626.505 li
943.751 668.581 mo
939.955 668.581 li
564.243 374.051 mo
568.038 374.051 li
564.243 416.127 mo
568.038 416.127 li
564.243 458.202 mo
568.038 458.202 li
564.243 500.278 mo
568.038 500.278 li
564.243 542.354 mo
568.038 542.354 li
564.243 584.43 mo
568.038 584.43 li
564.243 626.505 mo
568.038 626.505 li
564.243 668.581 mo
568.038 668.581 li
943.751 668.581 mo
943.751 374.051 li
564.243 668.581 mo
564.243 374.051 li
@
.301961 .301961 .309804 rgb
GHMBXJ+Times-Roman*1 [17.4888 0 0 -17.7161 0 0 ]msf535.387 674.34 mo(-35)[5.82373 8.74463 0 ]xsh535.387 632.264 mo(-30)[5.82373 8.74463 0 ]xsh535.387 590.188 mo(-25)[5.82373 8.74463 0 ]xsh535.387 548.111 mo(-20)[5.82373 8.74463 0 ]xsh535.387 506.035 mo(-15)[5.82373 8.74463 0 ]xsh535.387 463.959 mo(-10)[5.82373 8.74463 0 ]xsh544.131 421.885 mo(-5)[5.82373 0 ]xsh550.252 379.809 mo(0)sh525.838 544.973 mo
525.155 544.973 li
525.155 544.53 525.121 544.166 525.052 543.88 cv
524.984 543.594 524.818 543.45 524.554 543.45 cv
514.456 543.45 li
514.11 543.45 513.86 543.501 513.705 543.603 cv
513.55 543.704 513.457 543.854 513.426 544.053 cv
513.394 544.251 513.377 544.558 513.377 544.973 cv
512.694 544.973 li
512.489 542.08 li
524.554 542.08 li
524.818 542.08 524.984 541.937 525.052 541.651 cv
525.121 541.365 525.155 541.001 525.155 540.558 cv
525.838 540.558 li
525.838 544.973 li
525.838 544.973 li
cp
.149 .149 .149 rgb
f
525.496 535.283 mo
525.496 534.24 525.123 533.546 524.376 533.199 cv
523.629 532.854 522.677 532.681 521.521 532.681 cv
520.883 532.681 520.353 532.715 519.929 532.784 cv
519.505 532.854 519.121 533.004 518.775 533.234 cv
518.565 533.382 518.38 533.568 518.221 533.795 cv
518.062 534.021 517.939 534.259 517.852 534.508 cv
517.766 534.757 517.723 535.016 517.723 535.283 cv
517.723 535.688 517.814 536.074 517.995 536.438 cv
518.178 536.803 518.438 537.105 518.775 537.346 cv
519.139 537.585 519.537 537.739 519.97 537.809 cv
520.402 537.878 520.919 537.913 521.521 537.913 cv
522.24 537.913 522.887 537.849 523.46 537.719 cv
524.035 537.59 524.518 537.334 524.908 536.951 cv
525.3 536.567 525.496 536.012 525.496 535.283 cv
525.496 535.283 li
cp
526.057 535.283 mo
526.057 536.067 525.86 536.792 525.469 537.456 cv
525.077 538.12 524.551 538.646 523.891 539.033 cv
523.231 539.421 522.514 539.614 521.738 539.614 cv
521.155 539.614 520.591 539.509 520.045 539.297 cv
519.498 539.085 519.011 538.78 518.583 538.384 cv
518.155 537.986 517.82 537.525 517.579 536.999 cv
517.338 536.474 517.217 535.901 517.217 535.283 cv
517.217 534.479 517.424 533.751 517.838 533.096 cv
518.252 532.441 518.811 531.925 519.513 531.546 cv
520.214 531.167 520.956 530.979 521.738 530.979 cv
522.514 530.979 523.231 531.17 523.891 531.553 cv
524.551 531.936 525.077 532.459 525.469 533.123 cv
525.86 533.788 526.057 534.508 526.057 535.283 cv
526.057 535.283 li
cp
f
522.49 526.079 mo
522.49 524.98 521.717 524.432 520.168 524.432 cv
519.494 524.432 518.941 524.547 518.508 524.777 cv
518.075 525.009 517.859 525.442 517.859 526.079 cv
517.859 526.715 518.075 527.151 518.508 527.387 cv
518.941 527.622 519.494 527.739 520.168 527.739 cv
520.587 527.739 520.969 527.696 521.316 527.608 cv
521.662 527.521 521.944 527.354 522.163 527.109 cv
522.382 526.865 522.49 526.521 522.49 526.079 cv
522.49 526.079 li
cp
527.341 528.777 mo
527.77 528.777 528.129 528.6 528.42 528.244 cv
528.712 527.89 528.928 527.461 529.069 526.957 cv
529.21 526.455 529.28 525.982 529.28 525.539 cv
529.28 525.105 529.21 524.637 529.069 524.135 cv
528.928 523.631 528.712 523.204 528.42 522.854 cv
528.129 522.503 527.77 522.328 527.341 522.328 cv
526.667 522.328 526.232 522.638 526.036 523.256 cv
525.841 523.873 525.743 524.63 525.743 525.525 cv
525.743 527.117 li
525.743 527.412 525.814 527.687 525.954 527.94 cv
526.096 528.194 526.293 528.396 526.548 528.549 cv
526.804 528.701 527.068 528.777 527.341 528.777 cv
527.341 528.777 li
cp
527.341 529.871 mo
526.886 529.871 526.486 529.702 526.145 529.366 cv
525.804 529.029 525.561 528.63 525.415 528.168 cv
525.223 528.427 524.98 528.623 524.684 528.758 cv
524.388 528.891 524.075 528.958 523.747 528.958 cv
523.147 528.958 522.613 528.769 522.149 528.39 cv
521.575 528.98 520.915 529.275 520.168 529.275 cv
519.768 529.275 519.391 529.188 519.04 529.014 cv
518.69 528.838 518.385 528.596 518.126 528.286 cv
517.865 527.978 517.67 527.631 517.538 527.248 cv
517.405 526.865 517.34 526.476 517.34 526.079 cv
517.34 525.304 517.563 524.611 518.009 524.002 cv
517.727 523.734 517.508 523.419 517.354 523.055 cv
517.198 522.69 517.121 522.31 517.121 521.913 cv
517.121 521.636 517.219 521.407 517.415 521.228 cv
517.61 521.048 517.85 520.958 518.132 520.958 cv
518.287 520.958 518.424 521.018 518.542 521.138 cv
518.66 521.258 518.72 521.4 518.72 521.566 cv
518.72 521.724 518.66 521.864 518.542 521.989 cv
518.424 522.113 518.287 522.176 518.132 522.176 cv
517.886 522.176 517.718 522.093 517.626 521.927 cv
517.626 522.601 517.855 523.182 518.31 523.67 cv
518.547 523.431 518.831 523.239 519.163 523.096 cv
519.496 522.953 519.831 522.882 520.168 522.882 cv
520.715 522.882 521.204 523.034 521.637 523.338 cv
522.069 523.643 522.406 524.044 522.648 524.543 cv
522.889 525.04 523.01 525.553 523.01 526.079 cv
523.01 526.789 522.818 527.439 522.436 528.03 cv
522.692 528.215 522.974 528.308 523.283 528.308 cv
523.62 528.308 523.916 528.194 524.171 527.968 cv
524.426 527.742 524.554 527.458 524.554 527.117 cv
524.554 525.525 li
524.554 524.75 524.622 524.052 524.759 523.429 cv
524.896 522.806 525.171 522.284 525.585 521.864 cv
526 521.444 526.585 521.234 527.341 521.234 cv
527.905 521.234 528.374 521.475 528.748 521.954 cv
529.122 522.434 529.391 523.008 529.555 523.678 cv
529.718 524.347 529.8 524.967 529.8 525.539 cv
529.8 526.12 529.718 526.745 529.555 527.414 cv
529.391 528.084 529.122 528.66 528.748 529.145 cv
528.375 529.629 527.905 529.871 527.341 529.871 cv
527.341 529.871 li
cp
f
525.838 516.234 mo
525.838 516.364 525.752 516.429 525.578 516.429 cv
525.551 516.419 525.498 516.405 525.421 516.387 cv
525.344 516.369 525.28 516.341 525.231 516.304 cv
525.181 516.268 525.155 516.226 525.155 516.18 cv
525.155 515.386 525.114 514.832 525.032 514.519 cv
524.977 514.353 524.804 514.229 524.513 514.146 cv
513.951 511.474 li
513.823 511.445 513.733 511.432 513.678 511.432 cv
513.541 511.432 513.464 511.516 513.445 511.682 cv
513.401 511.922 513.377 512.388 513.377 513.079 cv
513.377 513.199 513.291 513.26 513.117 513.26 cv
513.09 513.26 513.036 513.25 512.954 513.231 cv
512.872 513.213 512.808 513.186 512.763 513.148 cv
512.717 513.111 512.694 513.069 512.694 513.023 cv
512.694 502.727 li
512.694 502.598 512.781 502.533 512.954 502.533 cv
516.93 503.004 li
516.966 503.004 517.005 503.024 517.046 503.065 cv
517.087 503.106 517.108 503.15 517.108 503.197 cv
517.108 503.363 li
517.108 503.501 517.026 503.57 516.861 503.57 cv
516.278 503.487 515.8 503.446 515.427 503.446 cv
514.789 503.446 514.32 503.585 514.02 503.862 cv
513.719 504.139 513.537 504.491 513.473 504.92 cv
513.409 505.349 513.377 505.938 513.377 506.685 cv
513.377 508.761 li
513.377 509.121 513.406 509.358 513.466 509.475 cv
513.526 509.59 513.714 509.693 514.033 509.785 cv
518.938 511.03 li
518.938 509.563 li
518.938 509.084 518.913 508.694 518.862 508.395 cv
518.813 508.095 518.715 507.848 518.569 507.654 cv
518.423 507.46 518.214 507.296 517.942 507.162 cv
517.668 507.029 517.308 506.911 516.861 506.81 cv
516.743 506.772 516.684 506.703 516.684 506.602 cv
516.684 506.436 li
516.684 506.297 516.766 506.228 516.93 506.228 cv
521.685 507.418 li
521.794 507.483 521.848 507.553 521.848 507.627 cv
521.848 507.792 li
521.848 507.922 521.766 507.986 521.603 507.986 cv
521.466 507.949 521.355 507.921 521.268 507.903 cv
521.181 507.885 521.056 507.861 520.893 507.834 cv
520.728 507.806 520.582 507.792 520.455 507.792 cv
520.081 507.792 519.845 507.958 519.744 508.291 cv
519.644 508.623 519.594 509.052 519.594 509.578 cv
519.594 511.183 li
524.595 512.442 li
524.713 512.479 524.773 512.498 524.773 512.498 cv
524.927 512.498 525.014 512.447 525.032 512.346 cv
525.114 512.014 525.155 511.354 525.155 510.366 cv
525.155 510.237 525.241 510.173 525.415 510.173 cv
525.597 510.22 525.713 510.254 525.763 510.276 cv
525.814 510.3 525.838 510.376 525.838 510.505 cv
525.838 516.234 li
525.838 516.234 li
cp
f
528.52 502.291 mo
528.52 501.978 528.402 501.673 528.17 501.378 cv
527.939 501.083 527.663 500.824 527.344 500.603 cv
524.393 499.855 li
524.083 499.911 523.819 500.026 523.601 500.202 cv
523.382 500.377 523.273 500.607 523.273 500.894 cv
523.273 501.198 523.394 501.479 523.635 501.737 cv
523.876 501.996 524.16 502.213 524.488 502.389 cv
524.834 502.555 525.313 502.718 525.923 502.88 cv
526.533 503.041 527.007 503.122 527.344 503.122 cv
527.645 503.122 527.915 503.055 528.156 502.921 cv
528.399 502.788 528.52 502.578 528.52 502.291 cv
528.52 502.291 li
cp
531.102 502.665 mo
530.91 502.638 530.815 502.577 530.815 502.485 cv
530.815 502.172 530.789 501.923 530.739 501.737 cv
530.69 501.554 530.564 501.434 530.363 501.378 cv
528.136 500.797 li
528.628 501.304 528.874 501.812 528.874 502.319 cv
528.874 502.883 528.664 503.32 528.245 503.634 cv
527.826 503.947 527.335 504.104 526.771 504.104 cv
526.214 504.104 525.633 503.959 525.027 503.669 cv
524.422 503.378 523.921 502.983 523.526 502.485 cv
523.129 501.987 522.931 501.447 522.931 500.866 cv
522.931 500.599 523.008 500.356 523.163 500.14 cv
523.318 499.922 523.527 499.759 523.791 499.648 cv
523.691 499.593 523.523 499.447 523.285 499.212 cv
523.049 498.977 522.931 498.813 522.931 498.721 cv
522.931 498.619 522.985 498.568 523.094 498.568 cv
530.418 500.438 li
530.545 500.456 530.618 500.465 530.636 500.465 cv
530.755 500.465 530.815 500.174 530.815 499.592 cv
530.815 499.546 530.83 499.512 530.861 499.488 cv
530.894 499.466 530.933 499.454 530.978 499.454 cv
531.097 499.491 531.174 499.519 531.211 499.537 cv
531.247 499.556 531.265 499.606 531.265 499.689 cv
531.265 502.527 li
531.265 502.619 531.21 502.665 531.102 502.665 cv
531.102 502.665 li
cp
f
1 lw
0 lc
646.175 660.294 mo
698.786 416.004 li
751.397 411.335 li
804.007 408.444 li
856.618 409.026 li
909.229 407.961 li
.423529 .215686 .6 rgb
@
646.175 660.066 mo
698.786 415.791 li
751.397 411.127 li
804.007 408.274 li
856.618 408.842 li
909.229 407.768 li
.364706 .72549 .796078 rgb
@
646.175 659.807 mo
698.786 415.546 li
751.397 410.89 li
804.007 408.083 li
856.618 408.63 li
909.229 407.542 li
.509804 0 .74902 rgb
@
646.175 659.505 mo
698.786 415.264 li
751.397 410.616 li
804.007 407.862 li
856.618 408.386 li
909.229 407.281 li
0 .45098 .466667 rgb
@
646.175 659.152 mo
698.786 414.934 li
751.397 410.298 li
804.007 407.605 li
856.618 408.099 li
909.229 406.973 li
1 .109804 .619608 rgb
@
646.175 658.736 mo
698.786 414.543 li
751.397 409.927 li
804.007 407.306 li
856.618 407.759 li
909.229 406.604 li
.313726 .709804 .937255 rgb
@
646.175 658.235 mo
698.786 414.074 li
751.397 409.489 li
804.007 406.95 li
856.618 407.348 li
909.229 406.155 li
.839216 .00392157 .572549 rgb
@
646.175 657.624 mo
698.786 413.505 li
751.397 408.969 li
804.007 406.525 li
856.618 406.844 li
909.229 405.601 li
.458824 .705882 .823529 rgb
@
646.175 656.862 mo
698.786 412.801 li
751.397 408.345 li
804.007 406.009 li
856.618 406.21 li
909.229 404.902 li
.454902 .270588 .94902 rgb
@
646.175 655.887 mo
698.786 411.921 li
751.397 407.589 li
804.007 405.374 li
856.618 405.4 li
909.229 404.014 li
.278431 .321569 .388235 rgb
@
646.175 654.588 mo
698.786 410.813 li
751.397 406.66 li
804.007 404.584 li
856.618 404.346 li
909.229 402.88 li
.00784314 .258824 .913725 rgb
@
646.175 652.767 mo
698.786 409.431 li
751.397 405.505 li
804.007 403.595 li
856.618 402.974 li
909.229 401.478 li
.733333 .537255 .596078 rgb
@
646.175 649.997 mo
698.786 407.776 li
751.397 404.075 li
804.007 402.371 li
856.618 401.267 li
909.229 399.878 li
.270588 .423529 1 rgb
@
646.175 645.168 mo
698.786 405.94 li
751.397 402.413 li
804.007 400.931 li
856.618 399.403 li
909.229 398.287 li
.819608 .513726 .607843 rgb
@
646.175 633.62 mo
698.786 404.105 li
751.397 400.736 li
804.007 399.409 li
856.618 397.712 li
909.229 396.897 li
0 .513726 1 rgb
@
646.175 434.98 mo
698.786 402.448 li
751.397 399.297 li
804.007 398.007 li
856.618 396.355 li
909.229 395.777 li
.662745 0 .415686 rgb
@
593.564 641.041 mo
646.175 403.985 li
698.786 401.074 li
751.397 398.15 li
804.007 396.829 li
856.618 395.294 li
909.229 394.904 li
.00392157 .564706 .917647 rgb
@
593.564 636.533 mo
646.175 402.166 li
698.786 399.996 li
751.397 397.224 li
804.007 395.852 li
856.618 394.456 li
909.229 394.229 li
1 .407843 .870588 rgb
@
593.564 633.5 mo
646.175 400.873 li
698.786 399.172 li
751.397 396.453 li
804.007 395.014 li
856.618 393.783 li
909.229 393.699 li
.00392157 .439216 .654902 rgb
@
593.564 631.421 mo
646.175 399.801 li
698.786 398.542 li
751.397 395.803 li
804.007 394.268 li
856.618 393.235 li
909.229 393.271 li
.980392 .529412 .741176 rgb
@
593.564 629.939 mo
646.175 398.901 li
698.786 398.056 li
751.397 395.255 li
804.007 393.591 li
856.618 392.784 li
909.229 392.918 li
.0313726 .286275 .709804 rgb
@
593.564 628.839 mo
646.175 398.15 li
698.786 397.673 li
751.397 394.796 li
804.007 392.976 li
856.618 392.404 li
909.229 392.615 li
.698039 .321569 .454902 rgb
@
593.564 627.989 mo
646.175 397.529 li
698.786 397.366 li
751.397 394.41 li
804.007 392.424 li
856.618 392.082 li
909.229 392.354 li
.827451 .478431 1 rgb
@
593.564 627.314 mo
646.175 397.011 li
698.786 397.115 li
751.397 394.086 li
804.007 391.934 li
856.618 391.806 li
909.229 392.122 li
.623529 .67451 .776471 rgb
@
593.564 626.768 mo
646.175 396.576 li
698.786 396.908 li
751.397 393.812 li
804.007 391.502 li
856.618 391.565 li
909.229 391.917 li
.560784 .0901961 .52549 rgb
@
593.564 626.313 mo
646.175 396.206 li
698.786 396.733 li
751.397 393.576 li
804.007 391.126 li
856.618 391.355 li
909.229 391.731 li
.25098 .313726 .466667 rgb
@
593.564 625.931 mo
646.175 395.89 li
698.786 396.584 li
751.397 393.374 li
804.007 390.798 li
856.618 391.169 li
909.229 391.564 li
.964706 .52549 .827451 rgb
@
593.564 625.603 mo
646.175 395.615 li
698.786 396.455 li
751.397 393.197 li
804.007 390.513 li
856.618 391.004 li
909.229 391.412 li
.286275 .286275 .560784 rgb
@
593.564 625.321 mo
646.175 395.377 li
698.786 396.344 li
751.397 393.042 li
804.007 390.263 li
856.618 390.857 li
909.229 391.273 li
.886275 .552941 .913725 rgb
@
593.564 625.074 mo
646.175 395.168 li
698.786 396.245 li
751.397 392.905 li
804.007 390.043 li
856.618 390.726 li
909.229 391.146 li
.494118 .219608 .388235 rgb
@
593.564 624.856 mo
646.175 394.983 li
698.786 396.158 li
751.397 392.782 li
804.007 389.85 li
856.618 390.605 li
909.229 391.031 li
.776471 .623529 .807843 rgb
@
0 0 0 rgb
%ADOBeginSubsetFont: MyriadPro-Regular Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /MyriadPro-Regular def/FontInfo 7 dict dup begin/Notice (Copyright 1992, 1994, 1997, 2000, 2004 Adobe Systems Incorporated. All rights reserved. Myriad is either a registered trademark or a trademark of Adobe Systems Incorporated in the United States and/or other countries.) def/Weight (Regular) def/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 40 /parenleft putdup 41 /parenright putdup 65 /A putdup 66 /B putdup 67 /C putdef/FontBBox {-157 -250 1126 952} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-12 -0 484 496 650 662 674 686 710 722] def/OtherBlues [-210 -198 -121 -109] def/BlueScale 0.0625 def/BlueFuzz 0 def/StdHW [67] def/StdVW [88] def/StemSnapV [88 92] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings6 dict dup begin/parenleft <1C60D8A8C9B84E0A9BE0F5E7F6AA80EB6F9C55A29BCD0A78FDE2EC81535B0D09BBC78AC2BA9C07B9D73B61D64C4620A3AEABD78638094F1483737E> |-/parenright <1C60D8A8C9B84E0A9BE0F5DB50450E7143AED3F02065BA0D25AF71E0BCF32D4511B91D5597E045F9FD9A2805B5D6939BFA0E875F4D520B550E8B48> |-/A <1C60D8A8C9B7D7E88499B0B4629F6223175CD4E8063229FBCC9F00B932F15865B21E5E7BB034E6AF82883E05563056B289C39B2EA350305E00FB98125757C6B71D805070E392C2F5C67BAB2BDB26729DB33934727F6026751FF00CC19CB2FCE13DD0FF> |-/B <1C60D8A8C9B79D2DDA73CBA562CD775BD8708DCD8E9BDBAA2B04F229B401DEE6F3B16867C2DF5ADCE1003CD3347893BC921649BA15F586CE896AA4574C760FC8E6103F6E803B90F385A0C480DB58BCBE731BDB2E07BC90ABF0D34F2A76BE68E603CE526C97809060252D094726469AFC1EBB9A96BC6EF2899E99E4F5DB78806C2904DB0391B53A557D2D0810C07323B9E1172D4C9C1C76664A570F8B40F0C97E620BA6C7D2A77D969C62FB9AD1905E1BB7E1B20BAB18A4402CB21DF7B3B6CBAF50B782> |-/C <1C60D8A8C9B7F7BFE3B180C56AF03E84FDFE1B891BF0BDDE2A383D526FA5F5DFDA781369FECA62B706458FA8E5D416C9F1A54D53D39B454D4B4A5AA674C37D8866FD97E642C991F09AC3F4EB6888A09F29DD6765382F269ACB77ACC8CCEE228E09F4DDA531160B9495579459312C02> |-/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364CBBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917B17192> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/GHMBXK+MyriadPro-Regular /MyriadPro-Regular findfont ct_VMDictPut/GHMBXK+MyriadPro-Regular*1 [40{/.notdef}rp /parenleft /parenright 23{/.notdef}rp /A /B /C 188{/.notdef}rp]GHMBXK+MyriadPro-Regular nfGHMBXK+MyriadPro-Regular*1 [36 0 0 -36 0 0 ]msf.883789 30.1323 mo(\(A\))[9.82813 21.7085 0 ]xsh.883789 355.048 mo(\(B\))[10.2236 19.5117 0 ]xsh499.89 355.048 mo(\(C\))[9.79199 21.4912 0 ]xsh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/GHMBXJ+Times-Roman*1 uf/GHMBXJ+Times-Roman uf/Times-Roman uf/GHMBXK+MyriadPro-Regular*1 uf/GHMBXK+MyriadPro-Regular uf/MyriadPro-Regular ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 17.0%%AI8_CreatorVersion: 22.1.0%%For: (Lucas Fran\615a) ()%%Title: (F.eps)%%CreationDate: 15/09/2018 01:51%%Canvassize: 16383%AI9_DataStream%Gb!j.kF1tOZ7,Y,!;D#c)4R.;c8fu*9cGd[#mM>\XdL9og-<\+fZ#hHRs!<=kFHmiIK@Vl;Q6s$P$Xb):V5:p[n)Y]%]Siu?pJRQ%#;NV.$`Ml6T1Z:?XBG`YCuokc499ZQ*H6@R5sK`#Fh%BV&*=4D!l7,5]^L%IgaMFu?nO*_jE:6F^0o<A"oM[,1db#6>@Mem:umk6%kqopo.6=8"s,HKs<I=h=i9DJjfoZ53V`+<lc$:U*mZ*rSol"T!cbTGO(9oi9E!eG,W]R756/,W)(>j+<BqP+rc&.l;Il1C$NcV61%OX$hWIT0fp#7>t!>iX=J[@,Q?gBg0"e8EJ6Is-m@!H`&&F"dmp)?/tE(Ur=h2K:h\dK.8dL;&pKE<cr%AH"O$K>+GN,D@4@jDJKl%K;HZf(8o`j,gj;C2hke?a6O*/e:,p1E-]Do%`*:Dm='[0$"asX@*mk4@pTlK]mW)R"Cl*-)@H`hhB2fZqL&9m-OA(.Qm:g<UL'#%%'aT>MGQT"B#PIjhn>crg]$r?nhZ9/N4^P<6_pC3!DKASN[3GSb;ATUd7SkY@PLQkNq?Kh-o6=)rrQ@B=SMgW$h6#VZ0p$u<[B&AI%fRW\IpN%:D+YrXRG5KH@khssB3!*,-2^_/UO?.?s!+rQhs%P`_A>!B1E=,CZ%cH"\6&3L]q=lW4(q__4*(-*cD&+,CpVa4%p6`\K%]dW18@qYk]^_HV#C6(=;5lGTEci3I6iF>*FZHIm"")bU%j^\/NnZ"b?CTk"thfDk^Rj15d^oUhQo7%?rFuLB7fT?h'/q,I++(Du]%c4>03!P#g<XT7TPB=du\H"o4K8V#]p%^:GMWH!GKJH'%[d"M[06)D=!RK*1KbT">[/g\9:6j"u\"@K]CZYQ)6Ehj@k<81dp@*iV.%$TXIVh\])g'"];'m'H"jjp?;2ZrarAgd1,^6llXQ^tK@bT[10An@o5onUNDU>7hQo69CAFGjJ+"M:lXM_4=_VH9)\ag(C7t_HFW1%;`VJA2fQ23c9QI1dhN%>BYGYhmDNp[f_9@iq"+WX@,=jC$2.ANo."a.FiAr>Z#*O32QLV_*<TX0,h]UOgQpp--*M/W[OW`6l%s8'%\i!JJ:Y3$2I'FeBk6uHo+Il@qD^PurI02u*'2p<TcH0e,+cai2:-f6RQVR#S:scPj##L.c1a[`2F&'h?;!Nu#d0VYnN.<t<anF\N%cESUT1LfcGAt='jK@<KDor%cN6uQ/=e#h$ZhnP#=F*eQ!XL`1kq3RmhErpkqm0NK4Mpp/(#(F*>^qoJPm"Z6?_a2ShJ*icE^S`#u%bBsHJ[@6(onA=k#3RDuNh0h3t^_gpE/U?+_oAf3W9*nui=*loIHB1i.B9JgEjI+]Hs(%ZGjH87,FNI*jR=?&C"sdf2?G<WtR;]Rl%fcOk-^K-F^Y!fnMI!GTHVf6fKZR:W@HHJe$[GT1e#+Wgr?\&6Mf`PW*mK"AL"rW)^l^OD=E14:[OSJsH*gbrE"tZKh-93WGja9h/%S<:L.0$BETaSoN,Z>9!aW5plsZ]45iGaEF%fbRl%7@+CZb<DB2RA/r2POg[o&R0WT6%0'IO_KPG)1c0aR[%QOF*ZIkE9agdi27f]%6_K[qc7'7[;g#C)<q_j!*?#dJOLbW;Z=]G#;q]ukK`51H4hgN:7/Wa&kC#/LrJRc1ke+0VJ8W#m;($#;K]r?I-PUc_j*pN'1!gZ\%=!tHpCU_7/GGl15r>kK<B+:WUr,*mL.H5<`2rKV?\_>;ZU`TQua?Q18V?'NN":k5:ISjMS%&s?$L5md31L&,e:,&7kj/Y37'KJ6L%JWa1;Le"C]!Veq,=l0i">ckkp?74)k:o&Z7j`f^2nA;rd]a+h4).E]<>o2W`b7Tj9Iu)p4!+$?H)fL7;NSAr$-fen+AH1bNgj=3F%!,3C&?(`oNeb8K(@,0D)^nX"\T(^.ZS5boDGu=<dFp/67+(D+M:VOX]ZeE@-Wdo'(`9\8tqmDCc?gZ+Di.+h(#W;Jj]ZGQ7r;69V%$o%u^p?d"rfBhoY@RKQD@+f^aiAEOg%e(h:q\<@I"`//\#NWDrKFNdu5QO:2i9[.'qWlQM!Ha_6S4AVP<IgnW!apHZI.o:W>$hjW%2h5CHX?]Yn^`r>GgM>e.>mfP^J,LBuL)X4dpA-iEQNi\?l%WmO%?.ZGM/,n\F%3--e;7M34!_AIJ`T&+cJ\M2k#^47Ig1o;o>7ZE%"!<h<R*H.oQp:qp^@OQ'fC^.=4Q,2u(*%$.3(Aic\XJDL&UAiEa*m[:1k?6UJ=Au7dBHtrTV76PIoAJsC>cr/6'Y8=Z>J=q_L_J`%<YJVPYi!5cJgap\5-9j`NCMuP%oYg[p(H6rN3HYm[]]\E9`2u:96Rq[_$[JD?nUC42_`3#B6a_E@ciS0"9uUc!Mu;DHqUDT.VF+9%"kN57'NNabW5Id-JB6%Yn=Y=4k4XBlcl;Jb?2bt$H<frHpl!ba6+t*bhrSqT@3k2YK,?>!\pOMp9V0&hd>_U$*t$r91&&5<a=k@0%l41BZY:fkuW<]ruP'B7BK>56h'):r*IeoBL6e,30qZp3J^s@WKdr5;7<7WCM<GLFsbe_%<,?BGir_FNA#Q5l;NW#!7G5[PuG5m]"%pAC&JpAU2LpAKiCpA^9K3q,YnlbFTVY609M]ajt&p,_\5g?ZNrBs.VgUqI95s1hLDr^6s7rJCI>q@hQ:r?p<6pRc-!h1).CF8q@X%*V]^ArC<a$s2Zbd+.393,BMdmA.&6qb^f_-$1N0..t61l8+OPuhtERMCc;=uLYid;].f9Vr9F[c+>%tk%RH0!%smU4"?am].!XnG%\@dBcf*A8g6nsbS&'3_Kgck'cS>>_\@1m'[[NoC-ZeL4fLV"HCpkCaL$"ejMac"1b/.uA>3;?!d=$4ouWZ%jPB.n[ZB(&.lJE+r;%*A*W_5M>+KU$O"IWu)!2s.+WDJ-8)/!'g5N;G`OmO17eHG$_lb-A12Vb_BVtqO@FIW)dZoN"CCS<h'*%h<_pe4+9:iX3'Tsct:)*%TP9R`nGbQm?3$VHC:[YeAe_L[gUPbY,,!0Q.K"8b)fFJ_:JHQa4oPhekV*S&p(?^Rju<5Hhjc<9iU=-A],_H.[b82=2"03!;X+6N%:+.7/L7GE'R1dYI>2&tfj-m':U-;8efDp!"M.;M_`8gB->JFkJIn9r?Q4f(p^VV?;64)[:SCRYFTMJAUOkfr67/_V!((:);G]9md%E`W1cnR76nTf3-l*Y:'&m._Zh$db7?6!a;95t^D;^]"IBj8ZD%d$rSXJ%I<;1e<bi7XC.0nd+l0KpWt8U08kLI/hKA=!umt%,bq6%\BLWG<\hh4s4bH^@m1-RcTtNj\p^0jUKS;7Zr+rl/hR+Hdrorh^k2[e>EK9hD\!4C0sALV%s\"GC?3d8rjA18QV%I*DYQH35@>18%RljPHJiU0t^[<3E1\T_o_Nm1@1Z0qb[NE=mp-Uo'-Rb4`'W3\3=MStqeF5^:MP+[+J%7TQlM=ij[>,V4[OlgaldUY3Agt_DoPXW;%Z[b0HC_N9>Ia!o&$9?'a0SH3hk@,uiD-M[ifu4B/-22Ba\n)H=R1M!;"*:+T.]eiQghF+*,]M%!:4T6O"):+*aVbWhBntJbSseH9%`,'SMWc&,l^s$>5\!dAM?dJnD@d7b&LcNmLI6K-4T[XE9C#Z)*7C/BUMDA<CWiH99<4?gk'#EiT-3M<)`kLD$H#M2.a8P8ti#VI6%D.9':i4Hr7f'>684Y5b/Ro]0u0jC/S$^cb,P;cfVJ&4.FZ^Pq3/q)R9ZZD;HF7.8:gmmQGJ'kX0rQ9,NnmkUg4<;Q0cj7?dL4_]g%pl=4k5cU]2Wu'9#VP^Qa]Io6q^hJ^*`sIT$1\DHRpnDr2WCtg\kOlF"dOd12/G\-OCcgVHdT+LFogK#6.kih?&@;bFcXZ78"c\0"%4h_066Edhq%F1G20mN")3F.i!"Vto7St`JS1SQCj0Zd?&Z/0/Hn]&F:"n`\*mL]C^1.?rmA@5P\cf1#]JE(U&HXYeg^AA;9gXl88%n2NPn-qP"qOsuX0O$j,PII0T<BH4Iq5h?Rr,A5NC#3S\R9oAn`TZ?$a@Qr:sq)iP;!!PQWgO25kMNNGo\Uk(CN7B9;(a?+YIHc)j%7IN21hc61-9:>$r;N9M5)NGTD86I1jP&e//LH':be06dkZGh!Bl!B"<=-,ho;sZV5c>c\TLIEWqjq?=dbNLpsT!*]RnA/2P=17Xu%k?#'KmuAnUcoO.7cX&#t*=rm/Jr6!\;WR]68tcb6*s#<3M/\Xl?;$1';"hYk@h.!%I"Umb,)jfqA\)%3JR$"_bJ2Tsn/69@T^Vc9%OH:7dI;oGZ^#&'i#'f.Ord.F=7qafE1b_+8RCJ\c5jBdic%t%9+LSOF*dNgM*Gb-54`D/p7$[ZX0]I><+.'ji$es%HJiO#!NoVhb%Armq3IhS:U6-Y7EH0:ScbbYM%+V,+!J?A@tlte?:/0t**F7K@5q1^OW>"89"*ttNs2VLs%@c)KjlWJ:fEK.kr]Q&IJ[:>R0b*]i.%_Jr?gK#kGIO!1afPQAUe;qO&9,r>oSoP3s,d_td72=sZ;Zk.@P+@a#@Fb'tjm0Q0_5>,p!9%7!'k>n.SN8Hup6W$RM7C=EfW]Y5_%Uj&r:!V5IZ*?]X5YoQe5[kh.iKL7$lG9b33]l;qBk:K/GIZkGcA9H\e:hpA_T9U41oDN.1G"eRG-g,OURs-o?-^)`BZODQ40p03>%JY-TW8/u,Ec6P+">LpF<fk$1(ct@QCcYH08kTr?IOMc$u7SDQX1^XEp&%OGgOr`O0NmMD)5X[!Umb`?r\Yfbqis51$>TGc?.#H\r%9$J>$[;[Z3[/'#Rf4HDp#*?50%OQ,CTn(?WE\G<SHce'QSN:K';qQta393O7)_D(WRLhs8GKp-+D<@!#lK"Ia@AXEWT0PSQlH.rK%$jBm@lG<B!9KTChQKl^Hmj-%ZOIF)t\e-`$#+UiaC3IMt82T,r+U_q86-G!ie8dfrMF#!Yn?=@%>Qd/AWM\HuW7UL)LWGTNi6KNT%jf+mX4hWVF2s?NAq-Yh*MuY>[R6TPU;oX;!CUk#(_"YLTTe7Hr4>3HjTElW@S#\O^'.;FeSkaL:S2:8*>JRNTpgan+[bB!J#L+[B%SgAZP=5R]ncN:iA+/D@u;UGI(J/'$kD*$=Z6G=a"rf8l]!4BZ;O#?14SW#H1EjR&,pam,EBJ`jXlRo;rTKEj:&K=.SK0F/mqu$rK%mUjLZ.llA[ADWo@Rgj^RkKTVu?l5LlUK8V'[4jSbqCp>lW>S,her!kh@>'O0r&@:.2a&t/=+VgokD3;J7d#<JQ6c-a1c*F$8&oG@%5R&)F.bt<GThc=^@:t!:MIV6,IAb,G$esi-2(*Tg8d`l%N1a71*Ck4:j_k=OZ/atKmdNJ:5Pkn?i=u_*lV1^CGQ\ni,!j=I(K_(]%UiQ!9@6X/gp`@oef9;V3R-:$tPg%W2*l=4GEOa;QR)T06Vp?k,s+1Ul(Z&R_Dm@lXd*?(Z5!!JLn-sBfRgtdp+bh3CEr_sYN^<As%aX+aK9D^i=!m$urg.Rg[rFRNQMqpIa*2hrXOI%^lHcr\7U(YTs]1YI_:.j2oVqmSSEm#KY2<(kmh9)YF`GF7`"arSHb9<&>'QeRq%EIn0F/col4UL0@o*m>#@-[`BJjW#(mQ;,>\a5o`B,q+(R3Sj\J^*MMe3H(;"8R>T$DbF8pdr7&XCU:Q^h3CF<nBK,q+LG;,/O80d%!=g!FTp58)B+Iot!P9qY\R8'Dn+!03P3!0K*Yc:om=AKN'.%dXSA9a_3J>*hX5NX?P)1f'md_Q=r%FcOo^HV1+d.64\hVNB22b&o%gbP9KA#aIj'+\^*oZfHK<W-u78Q>[4'cNLqpmP*I-8rX'l9`Y6?s=U&,S&E0gU<1<D?^@p4cpPZ/Reb45q[!/=TV/m_o%%Vd&G?g%;,*ZYgfOMk8aOq`%Wfm0I)eBr<m=;@:;`^MVcdVPfB"fD\k=h%_-]C1^WD[c&"#p_maT$jJ57$3/@Yktg;3,+#E_^iOBl5L!LfsJ%,QohJe12kGMlSf3hf,P)*lYd\Z>6l?#p,X1X,FRuj0@CTYh4,LlmL.AEdgBjU=H0t)A^LUjB:P1FoZh\XnM='j+['JPo-L$'pk:_%%g2Qr8lNkY*BCn3db,*6kTf81?9mY'i:`!6]K5%l@sF\8nJY!AnUC?$T)`;$3j-tb*9<sdrU($7VB'EZjU-ODM.X4!UrhGOM%PV$%^uMKklCrr]#3?*Y(7FJOc>&HI[\0!nJ\9rheL%1p3%m*Z+Bj7ZIYHbO1_[@I:V:il;K4W!K!4N(QMo+#5SA`9'E#pXFX#!4nnX@#%\/qer.X4a$D:0pX$IA-F&\bA\(X)CNgf74U@ft'1V5fucn,6X6=]QcPDfn&:;E18YjD/TD4ql.W<%U(OR5Do`OYEcp*(=b/m&B;P%c2-42XTrPRaVRm:(25&O]K%*4OdAlJp,O:VXGUYc>51_Q\sL\eo0S_tOjbW?)NhbQUug.pZ;X=OVojEJ"&(CQ7)@Z(OIVD^a_NC-%g=uK`XE&7A.K"*Z=.:T8[S=c>r4O%)QV/m"jh<&t6s9*Mh\F;>bPS6MnCk+9qtu6u@YBud_<?A4P)%:N8LX%"nDE5"Qosc(=+<hi%_97%l*L+==O>!<)"ArE:H.l#:phD%W.iCte*,e;S4.Oh(pB.l5BLhL90SSr5\YAogLV<o;;KH+?/F3>6nNFK=D=t]5auMdnLI!b`%UjR6GGV2Zbb6SsdKZKf8CD>7LE:P!RVH0$s2;(_@MZIaNJ<Yd!&Hp4IJrNZCN!s2NGK*c="N*6):IS4LGu\'gLMI/^ohiZc.C9_]%HK#cHjf0F&"R<nR12"[0pAb'^%t^1`1'h>DC(S<_d\ud=D^AWfkOp"5K")FmZ\X/C3XU?',lOLW#(4cV_&lAoT1TZ?VE]e]I-s`$%7L(aE?o0WGZX;0j$%<=>?W6AX3"E^SfuBSlBaB0Y11-5rVL&h;Qo#@t,T19CcbUuM'RoGJoQd2VB`jtZY`YfJf<8t-nB"^`DeINL%]&SHNR>uSLNg?4?+7'j91m]Pf"8pl,?gZOMfYI\Ti8@DXRrU).'_@S-9+^a>kM>!dkL/s!oH2t[DnjLk3iFAAadeM(G9q-HVk!HM%Z?)]3\STFJ!jjkFZ4gO-4Yo#4oU59lrQ1.[+f8J?B8CJ#C6>>C;fl)H);TWFrT[gnJ,V1hF]?6@/$0T$Nd^]bas-PDF1I950Ctmc%_nXD0_o_5ic]`!E^Tg"DT'@^h)Qa4lffE_o"E/pb944.,ngF3X]t1T$K])4Ha5BOoFmH0%iKdHL*=oYEC(;ee)SWVBX]aG@auZpO%fH6;eEVQnQ@d@^Y5Ro@@e;*KC[1:GtM8O:tiipi?C)ud]KZb84bcj8V\)cP5Mr]b<T<CBEV,u&2aI953Yf%\Koinbf>g;H_SYlGb%j'7qnLc'@Or+?B(8tfeMQIr$8MqLt(pMW9*%M4`?rRnZ*/sQ^m^=U[$h!4EJhm'>W2q;l00%@3@e94HMLY=bUa_tt;*c/Q'MR0$S%V,(q@)g?&WePH*l-TuZ$WG)sNY(IrI*h$[I@'5U5p'Fl*;d%^7T>W.i23BdlOo`0^PF:/igmM-L)A>jp4.#t$4T#_a2.Letl^Vi)%c)gDo+ITqKn19hoOEg!qql)U%Q.[q@+QhD9J65-($cD#K]Rgo3M)C:N2f6i.#1.jIIJ_$QTZrApHt8#FN>N4d@2)&8[S..X\Z?H4%mg#S&Lt97ipPg=QO-nprGJp"gPDH%TFs,A5-AC)uT0:-lOo7`h'>#-%/lkgPh):]-7f*M1XZbq\pSmIG]S8r`n_(:AL`[R780CcP%,JfnJJ:tMT-PE"G_$hJa6f3sC@\l*ummS$`@Y\*K<614gddPmEOu6&s,hG"$OFhr]JJ@Es/Q0$LP"5c.O-*W$C.9*G?P.!IOt3>6%XEos\3p7d$e$fN!OL?_22NBBjQB+>`O*iiE+37O(CI9G^<Z@G9p,Z_JMcGibM'%kf!A,GKd-uRIF[mK59`#(UBQFnF8.e(#[/3g&%@n:;C)Ui`ReQC:?<+Dj!?Q-;/LG`tN\lIuPhX=94';udCRW)s7TnsZWLaGCs&"<-re^ieFb8sAt<8;.:+,.;'5-&udX\El7koP0l%bn(%t5*?kEB&#kqR`Q=QSqi4Vc)M-OCpj/&B&<k.!LBLcldKV&PYQ#``0X[!C=:_fgV/7TEt8@VYJG)+#.?LnNI6HCg-k9(9q/,I%lInQDc"S^,F]@,jBR7%Vn#0MRe=)BN;/i_diXMF+&rZHaqs>k_X7Y+O/%sH\L?(\!WQ40_UFj1+=[2LN*?$P[lb#c4WsaB8&%Ykg%O6G"0bc!&%PBL6^g@sl92EIl(4$n5KLU5UZi?@U#DI+nJFmC^WUt[!_%QtFg79+ZI@8O#gXXE.a*in6]^$h>ql6A/R9V4Z7D1-ld%>jABOW*/$O3thC`juC_;DUo'km!IjCIuh>_qYbfQ2'=^1@kb&u9nU?fh&AJ*:"U"l@./ig.VVfF%=)<aCo@ip4%%%rM]1H@q2#,B%=!#82n@fibRD-RXZCC_\"5UF*m=]Ogo^kT_A%3EU0W*!ga&oFPB?%q]/8jgX9RGg_Bj!==I7(&T>:GSla)rR9oUdiR78/_eE+&5?%I3DP]4)d#fF5_\L$FHP,ZYLLR+!::-1b7rDVG.EjR?"8P`b\<\;mS8sD4(9e9$A:TU`JUq+[__<NqLUY.&Hh'0+o_'=0W7N@QnT0%?Ah!gYZ`$$GHJhCarDu&JnJpL\93J$BcqE=O<d"AP7@M"=g(<`Q6SD=\!kR"Ojt0ha4>2q1U1Q+d(-PrbA=9Yl@?2")Hq(XXp,ls%USd-Sl#!<&2J$skMD\VV:;5JgFDbZj:MHqJ3,5s?dk>pr[[jMsG0R1r[bLI0X5+l'-gf%0Tl2T&k+o]RrG^N+55J:Vg<j*X:Q%0]%@84F:*BqAOj%(`q!/mW-1\Dd%8jqjXbM@b[;qc)YRZ]bl['s3PB4.V03n("DVm@F*\t*cqd\da4U=X[(HqmM%.2bG-?0rPiHgr(Z%3]=?YDis:ZPG[)mmJpQe?Skb^H46jBSQN79?=H>CX^YSan%pDRR`'B'7aInqXHG2;e7a!DaR$oH:4EaZ",eDm!e.6.Ff8u5DKD\g%F8J)^06c.IeTEhKWKMTBe0Wo-PsrK`l.8dthW$_qXe'4EDt'!G<fLa"d2bBg:e,kG[uU/cf9W0jf_90oq/fg/m5jQFn'o':]a(%G%n$?+oEF/_C.en$5BA;$P[E$#'`jG7VJjY1Jo&9-7KB?;HfX(KgH/S/1>\j@u+t\7i#&R#@h@E!]KmfVa:3cnZZ#D;!.OVr_g3UUN%F:mV(0P0J8K?`a<')Wqq5i)ST>KF)g2FF1."p$b8Sdu9ejZ^':6o-<@=BF@@@8AqV$YM4a3o%i9.cFOFA.0Q"Zl_S.>&P[Kra&#3%b@r\_#<p@o_u/mPC6&nSd?nKWNn3^]1ck'hb0bXZl]0ZhAL\J?9Lc9jfi!cghl:)XA,Fg5&@^EClZfL#NT0VZV%Lah[S34Fj2$DT%Sp)NEI^_&Z2X-@BCqJOOOjDE9l,MU^am<iR8G3kuH1K^G02om3qE#F.T!kWh*i2c,WOt-sVl!L[54,:Oh!(W8&kf]pa&74IanIR%%_.f5*f5#K*<-L;WU]*$:fmd#V=f3FOb,,4UF11ss,dT#EG*k)Z^Zf"U\I@V8`4DG-e;n\m$(7Q6Y<DBC0:HYV97E\/<q?QsR4=lG%Ek7?H;!Yu+R>hriQHc.;l]bnuUtPZOm(Q9E`U@3+.[a)8=t)pSXeg2R3@ZV-7'(4)^XM<.gLm_F,4H`%Q`FW8'VL2Gkh).ukppU\%dSa6AhS6+'%-^c%X&Q[al)n:Amo1.'=oF7i/a:HmfD8fjXgX4:AEo1i/mQ_MU9=@)k%(M7Z>3sf[D]J4@f599(`tu'9k6(F2$5j:%e#WdKHBl3)\,+<#PI#hKipL`7Wu#`p>ME>je92IZDEI<':"l4^o=fij5-1;?-Q_M/6Df'AEL]h9Q>'.L9tcl\h7%R%fqgagFjKq&%`Hp'GXP0-_ZJU(OWpN[JqoQgigOBUp2193\b78oRdJ';O22)9nF`faPId-dJbc!T@No"&m2[!L4ha5LYr2jH:O`0!U\akd*C!1kV%^%cuII845nk3*NT8F'>q+!6\pCkR`e#*jWOY(\3tDR3UdOe%L3dt@P)T6943rjhT(\mn7>RiN;>R"%4=/?N8k:\"(BhI5`RchHH6%f+fYTGWaC>j)9cD)a>&Vbt5FqBM<`Y?=Q<)-EV!TG3l4#dl*3!:W[VhTD<;]moa^h;R:6/h+W&cW0_0chbqB>*H'-XKu8"=mgi1b%ofV2>\6\O^U>@ee(MfI-QL<lf]PKR:^#`j#;(KtJ3P9*M6gq']XTH/]DdR!Xr,.!d\)7'O0tIi52R@NZPOu'CmleCAA=J.pn:VBX%c!VLF-6hjEp=#9Wm>Rp8EL/Ol+1nKcNKQ37j%,ICmQS1O`$0OE>1`0]mIAf"Zm$f]rXej^Gn9itY+ZE9K:ij;;3)W"r-@"tT*PBl%m(/K5ZGN&=MK-tI\=iPk4iM?="i$[:E)7`+l8l6q7WXo1AV+5a]P_u'7f#tl(a%C&DF<6O8l5?N1:5[WV&Wr#):L+k60ipS6Ir%D%-+`nSeIrHn5)e"pFdi/J=][JRa#kCpMUIp]bef,"'&cWA,n[ELklb:83E>oD\:RPD7\sU0;.ruC&J*7n+\?L=EB&o84&hKu&E*.m%Er(mt/UtulO&DQ.]+)\8'foK6+.(QG:OC5q4M$",HXlECoU.^CRYV$oq1Ea<YPJ0[m%bXbBr'O-Ti!#>cA`G[g9J%tD#.)UPb63#%HA5P4YAsN*R?.2n(s<=So@3>u?M`P5*]^qCR42/s,U1%[@Gu_he*52t-ODsS%PSkh;YIo80%m[KGAJ?*q!=g)#JX!aBm/cYRaOjT%3#kNTh$.YpB)@1":_s8k-VLOBdOp+BO0@N?Pr1Y,/6U16lGWYN9(s'(I?nKENBV6e;q@".ZI1WN@/nK.E+oU[B4&/-8gJUZj45-N%L7KI0Mlq:J=U;W+S7YB8&!5%S,lE'L3X`(<:)qJ2<fNR72BoR!2n&&YL)#+\?&WIo=^05\6E*ZKh5?8.e)[Dad[Rq*>SHL\!?9eX%_15uYM\](0]<C[=mNA'0WO:Dl5I4s?<^F!Q[[M3q&OR&5^/5H"%mKc!TJ0)>H?>l1HC3%0=>"Xn'^98RD"G"cqo&VX%:)E<\c^G#%Me-b.9RIF8_s'Z9iRrGBPF9O.LB5&6b'V,0)Pp'X%ZG9G^eE,kCd`N8hn2K01M0/eULoSUc1a@qFu%t+bhQ>bA9$D'9DKpjB!@sN%FHcB>Wf`^Y=,4_&'O$"efe_uR=^o,@AoH?WB'lEWK4I-3q<j<mX)FUd4Q#E?\b+[/!<U9Tr;P9+]\s7*&)2-1?Eo`9)=srRdcNl0%QM85^+8:em2;Z4]m!rQZ!1jI?NgaLVF?J@i9gDhk*A/![TTBP[2NXGT)?cqj\!_^(qMN3IB^R,(Alp2H(!1"eG?A\4'H-f_c4utW%gki^<"Nrgq-&@-qQ,$M3F=L;]a`.Vs3$r+jLVIl,H.e<J,Fpc[=n`eB42NA#n'h[W3Kmli:+q$tFk0`9jDLIp"CObe%F`VJ+GV:o%:i-YLBNfJ'Z-:Yqn?gqBqVPP+i>aZ]RiW*K-D.^#-:+mc$*K,*>,>#<W\Z0P0X5"4<>hsYHHW\V[*'!YF!*;B([B.iWqW$)Cuig"%9fSL0^:C>Mr0JFWN7W'#;,-5aCrYd:q<[bqUMq2TTk@ksAt34T9BuC6gSQm@*gu@G#<DjZCqTo&B5M2(Pr%(kn&a..B`tW!$n7gV%Z=LA>)5ceKTXX!FeUlK2TQ!ce!'tn[ET[smkQ!+-YKXqklmKFA.EudD8@CSJS&"d<*apnZbn'k+\*%9.NMP.&r@/W*@j[4RIqr2+%/kpjJi@&IMSXd!_kb3L41kMWUP>+RI!d'K:h`VKt=i3[S%Q*lYlV1fcc$Qbp<D&mU#*WDN80R@#9tkp=$WIN`m-QW)[SIpim4$L$%kV;SE2F1&)#'RGbo'%,`iq;rhhjQ2lf]9B.F;kcs(@lPcbGQispaLr`nlQSP-D<D21Ss-`hdX&R<;Kflk#_=8"]]!"H'.pfCKFb8%pb^.-I6isL^SP%?abW+CpY%DTfD'3TKhWabA,$cA5hGG#@&)Eb%Z:MMj+Bm-4!2)K&S@KIhDCTP?&+n[3W]@]3)"M2YZ(NjU"Y(4%Kc+8W/.;e-M(W'L,%\JpiO.!6Y&?,bK]-ua)"AOoRH@3;==W_SiT?C.D2+W`/.o_JJ_B3^PfVAR?m5a&E5oc/",V/Qbm]5u';$7A%AlQ7C%'V8E]LX+WU19$CSeAKTbblsZ(+K86b8*A79/2/H>JS7Dl_n^&,"aEK!T<$c@R\tT16Q]%8+\]OfXNP'<.UiO#oI5&-5\'s%P7Sg(SDTh.'f4%^!i/NMS(%I6^<IF3<b"(kAXYtY,Xk*II-kA&W]XB1AKI@QT)ngOWTEr0+ZVnY#4e2&`"X=M[&[k(a+irF>\/`A%Q:rB)^&VcJ1S7e?_dP6iLO\1UY+I#nl'6J'KTYHu:Ohfl)N8'E#AiLrP5D6h6TN*E!*0Mg.r_ceFrg'W1@%>8gKgUVTAr=_\ips5%;oWf)]Z5bK35]l#XF2Fc!O3J+TOBmM=kLu=f(Eembo\k`a,@B&D5%8ei:QTiHHVPrLD4qtWA0NOm5"?&qidI&90?F;O2]8[%\XfP%)+X%#3E#Y%WA2/?+LJW(:2M"ab%GeK3H6:0ROg4I-!RnT<mXbpSUrf;S@u.f5b/S"ELd@HR_m]8\B0kSeigVI0^sVEm%guAqFJJP%!Da#Hle],."=FOC'BgnD1,r,BR[h(*.u2j;d+FGJ(]/ZaD\5TLj.HbB3U#b[BE)XA8hk5MND;E/s)1=A9H\b?V[=N6Elr"t#gAK3%1\#?S2>*^hisnFVi>81$2\oiS53=@W1<"/rINoef/0NosjA51NrnaO#8_1Lb_!XHK=m!A>6n5-Cko'*g/6;knV`)9.46-:?oJcgM%^8"(ZP@*V^+C<:u9PR8;-egAjf1^c^CY2SGK<7ZI.1mf*@IhP6-=I'r0+QXA'sG4^>pOZT<'(is&8UZY&G3Tkf%Tce!ssMgO2mU?%+$%,U*C0<sl`([&,)s.r.NflO(jr43Xse=;E+O2L1tunE3)(]*N9j4!,2!LI'oG6M3O3=>g"cs*V+Voc#$B0Vl(%2Cs0PZr2&cj0%/V`$6\YH'r52!$FHSF$b4Qq:,cSQsXW.05a1sjD%Z,tI;JeDHT9;MX_X"g[I=-h&V-u.H.KW=u1K-6,m_d>+/9;D)d]#]G.hkpf1%cRFQW[P!R/k2?1o)%;l!f*<>B_6HTfYuoSCTJWK3c=45-J@b#upr55H!UJ7Xji1nC#tO8U6meP<7)*FnKU13_$5gP92oFeum<k89%.+g=%b4<OBfKI7tfbiK7._e)Rb,!YN9,\WT#kKa2jO\fQ3m()KV^##a5q#:Ldjob+K38BTHODE:%qu&4"]7GgC_Hi8q]`^ki4bF7%9Tp#'5_.1Q1CkGFA9j!UfP-;1CU;6$)min<c_LS]H5t2*$X2*ufh!IO?kWQWp8fA/L57JbEMc[.iCn)./IVVrmhiN$V.VO6\q*_%%r2G/NSR3Lr6gE-B[91U&hZ9kFe*-lZJjj?o(>4Q9D8l6X(leL>`9q8b?!./'aks;igO.c#[e*)F=X*`GT8\>>&r$a+DU)"ZkXX'2%$9!J3lN^O!i/HNp9gmuH6`.A!]r/NVJKrjT1`"26`sO#K]KSRNVq0LZijpV@6&@WY`V55n3ZBZJ$.-t[[TM\p*J:Mc)f#o#bT+t[%[0c&5R?G[.@[rpglnb6O6GE^e&_)Ks](T#)W<X9f(7hj:HulH9K6+FBV`kbWh=5a/>QId95^^UEXp$f<gMtkkO,O?JI*Y=.+KkF'%aj=)'kO['CfW5.@cBc[cL'<Lfd!4rj<g>j2,2YWG)YGZ\g,*%N1^Ohfju&>m$e6$O<RsXR@6cVpZ"2UY)s+P!M\3Dp^1`lq0%/1`%Q;j3P,89e\o''>h(DlS\H1cbUhLXF/BRr`M*&ug6)&2?9jR)D9H=d1GA.BSE50H,s1j:?917O0qjoh;(nPb?Vk3XfW^!c,WJ?_91%j=XIY`HV[6$Y6h03Saq@F!m9TLU-#0347pqhWLJ!9F8i_4@,O.8GYi_>%SiREb=3bUHq/ki&>66!5&7k9TmT1"]10(/6@%Pq>,*s%4QobWaPi:aeE7TWOPi0fm3MYH(?7<51\2q&/2F7UcFkfCF6Vb!O\7&;Xb&0_'pCrH3[ro2C&(Nr3^l.IaW*=S!Ld,k8VHrY+q`I+%@jWjSNs,Z.(1s]L(H%LN8'8DgHmk-TVRj1Tr:pDu08I%+n2aEaTI@-'9[bp$GC1>B]m8eZJK=?I:)QQ;AnO$AEL_+>VrQ7eG3SVH%b>hdX8Jo.<[_Vb0aD]inQc/(=L"(d299)@;PUV".FN-5\AKtfX^'f1*GXu];1%.9?1c<'rXl#eL'ZNg3c[#/u<U2V#o*tqU4`nF"%877Q$IHC,^Un"*bT?#0GU`:Qe)['2_@>8PZK3W^DGMg@%*5=c%^^h*`XG`@m%DGoBbI_(mnhE9.>`>>:c,!/%DtFc\3+j_dqCoGW%J3%/$+X3O4<&e$!!T7OSa)*Q!"(!J4#@::,4'BU%D@gF#f83%7YN<pd`=2m@AkigN;;1a+Mfh29Ut8pj6:HI]@pp91*W=3m3heN(%PH4&U;st3([QD\W`%i\<m:m-T_6B%IPB2pI(-q\95RN/NGYdNI<40;g-1)N\7?Yf'HZi_k)#p%P7uook41cd'MW^FYWP6aGF@^[5%M8K72Bl##f6g%qs.6gLBR"`GaG@?JshF\dQ!37nJD>X\\'2"c214=+]_/D>"IF/DTk7Qu?;Jli9=tl_Nc"?u%#iKV``\H53li`:b%\K:YdU5s_agu&<?Q-dCe)Dp+k/'!UNI[FD'V=j*,CT`(oYSaZENGeqD)2-.D"0I1%ff0[L'dc`ecaO)\#i!+B2d]+o"/l9\STQWM%%C!qK']FMl=uTUc!C,slm:''<L1MC@S9'Kp<p?ftqh`B@BBK'K6==YE\Uu)R8Ct/`0?0YeA+X!pVAt/qKL:WcRcYcP:hn:@2AA/5%[$O7mn]'eq3mtK/p]l^n16ADpE9Z,K1R7=?1tLL2@3T77JhaaY>g0IjQLQ/m:6&*V^:$-M"-`\8@hKW4qpr[n^t0gYnGG[N6Ie_4%1/?+6f7dXfBiKE9!=Q>e^YR2s&duM9m8IZkR"'NXd*'c:`W9)T5(+7:7j?L,2JUEqMhPTbm.@(kZ[8-l6g,2f(GJ?@,3;tRB"hSq%e-l'3ksB^l51@:Q99Y/gh4L*U3MO&:((4IOr`BXhA/!p!(V$%8VA47,%TB%^hq#U*cM,H3`nTZ*@=400bl^\;>]KqTf;A7N$MC]>%hg"a:`i#A"%pGj*R>'7jM:bQF.pqXNaatq^El^[idk`php!Znu?$+LtO4!-`U1(8q'7NZ1ffK0p1.qGu1GT$En\+A>IS4R5B!Z2!%jMEL.eAdMknq4Ef%a<*NFj&pP9kp;a;snFC=u)SnRFoTpZZSCS6uXLmKt$-6GF1JZI5(1s;fXg"cr]&CKD=]b1,b6#a+=Q)#FsDl%'-Q40&(FeSFF21$=?kL'qE$Xi"kSV"$5iTIcV%D-.Y%,BM;"_H&rkE7S=CupXHYHfa]MThBuDn\Vih'b&]-?*^fVFV]fJPZPeTo;%fu(u7B.>c5f#n6,>e1b=3k0E?C2/9=+Pt"\TDSo@X#'XTcXhai.f25.G(IN8%n2q:q7?7nn$@bJj?=htkKLt#R@X2uhGi$A?MSfa%VA2S[_JF<-f_oR1#hW;SQF.5*Mj1..[W?&1ok@VU3uQc34-]8['ZA!<&6qXX5/&N]9,,Ij,d`SD7]W5K_e<+29NVgAc;k:*]9utP%B(eo<PO8fP53cm3BQL%k.KJV-nRa"+j6,O?I94[tK(5`t46^:h2pKF]r!"0s_Mh&g?SWmF5piK2@q7MZj6'Z6=o@U?QJBHA7deGV%E^=./aHVcHHL'Dkp@pFKX;>'Sd%EH$@j,l*(D3n*=^.-;"dj_rk*Z7%%rSQ,(Xe<XD(Y;_a4>(W)?`rN[/h01d+N-7!'kZ9HX3kF%IFeW=I1RWUSeYX>hXR$#/>l"j8)=_:m_60bjuLoXBFM<f$m,49ZH\'C#BM&-n)_/CeDtf=.K=]g=J<`@]*T"9]f]4JQ##/^7!ITm%A)8lR2;Xf^;5^g:\&Ob)2uMb-7%,:nog/3GM0TYUa#h<Un1!qoK!lE5@5&8)5':#'/`.0q;j7M&RM8bJ`#c."&G+L9!.W'62VdU`%S^F.!_<488k,*oWdD0pN1M]e!rY9LP!q$'HeEn3=qI3Rlp(T*;M)7Z?n6LLlqjsUtW_MD7-%V\%c1]VTJ[:Gc.jk_=GWOH5HNjf>%0g^N%93\dmeOX&0f%Jn86UT,0!8LI=V<@Xb,[(06FFe5jq7[9M6;s,,L';/>2cC$fjps2b1d`:>]cHQmn_$dX[f#P9p=.FkLM$D-%cr>=KMBaK&Y#?&D@p0B\Ft65BH`SPLDn00n$jb+37eI0-r+auMm*K@!@HNGh%t;]?@_mZaRt8gJ:"q6Od$ooR)&7r0m\cAA4GUN]%eD8G7,XRmd:`jVa,3ng-fg4Kk9a>^ZT'MSF)ZW'<a3[qb^O`4N-li>m"".k8Nu2bfEB*2Jh@hl%^R9PCa21:A6&hld9lZtSs//KX%%2D)J2maR#T=S2p&ufeLcKiH37M$5%@s[EpPhEHj7GGUA4;q;B,)2=?g8]<&Uu%pS2\*1R83OikR$Se-WJZ^9PFMAi5TA=nOJ99\%59ka/Vq!`[alEm[OF82(0/Tk\l\Zq3gCqTd`%_fLn&IBT4!SSZN<8[No^;3g1Lnd@QK0=7T@G)BEg:ANWVM!D*UfS52/NLf4erYR%kVJC6+U.JS8*f!\2+K*k3;%"4pEYj_VS8VKk8$DlUlnK5geqW6Gf]V&.?66Z1!rJ*JJ(=BS\?ekfbAoX0h;<m$YM>aNCb8cBm&ea%'c'=))33)!W6c/EWmUuMU;Qi8Ze#s3/"3r<C6D,I`$/'F(b+I?k^>f'Oi%$gOMK,2-14PO<IiT6(F$!V;o:E>U"ptZl>'JP4Vhc*%A"C4TL"auHQ9Zth=YGF$NdhEAg:u2sIA095(2>.P1pJ+"=eS^W"_[qbG;Iq_&[XOGZMgO\,A]kIV!W.a/;@-#B@,3n$Dj!>=<Z*L%g+s3?i^bTR;gU6e"[nLH.N$8MKm*KFXPLNF^QCid7XKK+63:lVh#$Gf,m?hJD?cj&a!VWo!ftCD@p]<%LBejM4(`K.[JJm0OGNrY%'-6E&k\*R4h);?hJJ?NP3c5u_!i,f(Mmf32;t!:=/W)C^D>-UE%2=nQ%BZj*EQp5a(Rd=+lG%\=7J=*jG=#6[L<Z?gm2-t*;F70d%QBprtF<.^o/<'\4f";DhQSE)%h!@4_ej7]AOqo7LhclP,"8U=?EWBg*(@#9'K+,%Vj//nP5[G_(WuG'?<HX:]Tb<F%k,pRHLmB/]%kIiA3@Wm7?n-tKA:-tc+.W.Ep%5f.7;?dLjej;<l2aeLYmWc3=i=T2h:4"AW%>Y_3,B#/IcjYrZ,!bG)e':p5Z;^#"<kUR=r]CoL%%_J!eP3C@.N^V7RL\3(ce/6)B\tN],hJ5bY/n[QD.:!-A(K"t3S^3qW@IWM%dqB*3rPb"@T3aOgYbV-h;8FdQp@0!8@W-_cVaU]N%W;!VmM5NiTX-AMg/M6t7N/fAgX7mn0e2ONV@OIqhe+1-`o(VLp;\An)Hc%JEe7H8D<2f4GPP6&(nJSq5HT!3qHDO^i@d9d7rIi,D%.8+#<X\od-$at'/fD,u->#"-YqX:B9D&.V-CG!<cERlW0FRZtddnZ7Je*V^nYDE8N<.r;HUP>t+gEk\t=l-@;IK+D:kZtQh.)k\,%/#olMF5h*OK3I]AW>"8ekNHSnr%;_PTBc<uR7c?m+gni4F,Gj8S*i\nA:dStpJ5(o@_J1]6'LV0#uSh7Q:=>57d?Lf'E^rWA?tDD%aHu,FVm!&PP3?->gXFg3*8*u?AhYP8=>%FX?Rk>)a46Jr(di,-<Zf?0D8\?(FV*$6q#io>&7>XhLqPnTT$Um4B4$Qc8JhH9'5)0-%_sON0G"*%G%Sf^-"-i+6E^d!NY+cRcnF/8;&F;CPHBZdeN7!CY*:2l[^>4iah*r_@A]('qY-l!s#VK#9q*Q("-MM5@6jf]bPcrB;%&R;-I1#BIY@gSsK:DosR`%0bV/m:*(VhS9KDB@4k6$r*l4t]Ct)a8O;>bmt"mY2F#j+1g:`>S!c@*mbl>/QhI9`h;<$+Xn+Nmoj)%hN5&"KoS[]"Y,@nM&dk'JnPcb%MLRmN&Nr=--$>uN.rU?1B*(T;Ws0`Dg#JY@%.SQ>gX[%--QR@%0euel-/=ue*LuG`EUp$KG'*0%H5)K[#9jQ.OueTSHB,^iUHZHa<Jh.e(VFT@=]6SO@sK/D8jiW^aH5LMfllBQ>/&ikklI'M[e$+Nb":N]ZW%uMM^qL2"&P&up[l!,%GUis/)'WR;e#Xcn9E9L`\KiqVPofq"]cs\:V85EHhD:NFopp_0gmfo8U\&$#XIf"gkf'%#h1UP<1iKo4fXtWP>T0.<I-WOko'5nl%+34l'5_G[3"=(ui@hX(F7R/s12p1<q%IhmJ3T=Q]lP.*,[!\4u6D]\;"-6<0'P0'Y%%J9CYXG[bjGA?ae)JC.]^[^<EPMk?=Ll:W%&^g,'J+,`nIfA-m?Df9?^Iq%Y1P<.$R:Fm*89B5fb>\"VNPreJ0]1_M7k?)c:rD@@&(k/:Z_MU%@3A$`0`01:(5_!2A)WR2nE:AR%A)`_s^.NG:'DfSf59Q7WoaG\!U$BaKV"Y;mX6a36s5\!DB!L]Yc<gU^`<aQ/IbA[`b!]p0rMUgK_nG@FUYBYTcT=)7.jC6](djW9%'Xt#?MQWF&6Z_S1jbdGZ,#\5EBHLF2TeV3YYVL=f#WE"3F9Nu[EVJFjbQ_ZYiljTnmJ1A2c.DlN#F'5tq"uUr4?c8lL;UgZhQtPS%BC[Uhno8oG0LE(h6`.?!*YYg-bq%Q(XL(t3=PE9tAb&u#Y^TOaQpC'd/lF*A\>H!.bZa494HMWeGASNIGIFT4rH"P\G-->5(0=8&%\2?l*'`L+.5phF?_Ag"^M?uOR=*_T&kE<2Ams>g2LbnD9F`=26JgKqQg/=f;&&t<1gm"lBHbkqs\%@m+VWF`tQ!RAa^ufo5R%/gs%:iAMf(iNPmd!V/Bld^@"oPf9*NRr`FQs#%?fY.;1mlc6I:Cqe\_=9O(?"2Dm6ol(48D;3jDj5BYWKjoWM44R.2]h>`aZ=N;r,OPB%QpG?``*>>,o69j[\2-Z]NRb5#JH>n'BA)MApV>kM%b6cYI`Cp;'RSom4jbopZ<p$T^.*I<@ctDTRF,9=_9gI<>ROA-ZLUkL8ssmN%N/;9Z;281EO"C^]*GfV"YKe."58+!M<%\N\d4&(E,#Dn'ElE:i(t\eB3_XGp3^Ut2PG_0iYuM\l8<+uc1MYlme&2X`=RY68=2[/j%8.4oJ,3iAJmX32"Fl_[m?$>$dL^b_LZ`&^Q%E9FmXJ4^oL?tYs29F*op_@8(aBRH<[OH8sb)9mS7P(YBWDeHnDZ3L2K;1QS![8a0%S/5+)g;]&j_pVhR:]T*l?a0\-/j?H=,^^F_5/W;u(CrAV3S<4#S`'Zr:I0-L[1^3dCIBh\+-)Dkl\:tHr,D[05!peHs":$e9Jba"%(-a/^5DBe^#*i(qH%3X=HiCV/=7g_bi`PH@+@q^B0!Q:WP#0)hcQrQU=XVlAQ2[bU_Q=3^7)>Xk=I>6debg_e#QLQmR;PCP9;P%.%6aS()ZRhI"i/EB9mb8@Hd-LZa#?3`=2O3==MIu,6o0.%tnDI0ZJZ?bD),gl_+S,=H7e6`IaCK,*;unZ$^iuX6->\q88sbsY--r!.%KL!D>"q"]687!>n<EX36lB)quA/+cL^*/a!LjMp"A8!WXQSN%QQ1DJM71M0e^A7X4T?"Qi2_uRg0:\aFVtaL'9V-n=;!I'sSGVm%%hYgOW!4$S7@rd6JkfZ<Xp_@eS11/UKZL[a.J5Hd0nkuC6.pq388m&q+KG[3uo9M*+DO8t'9!'*:j]!Q[O7TIb)#ATMS-JUZS:6la%+1)o&WSH]/_RWl"j?ZZ-T7E\-!l^g;p\(h1I_AXq5e44JQalT(bBEtFTp6NnmQObC[!9<u'De3f\#37D(i:^epO^1e@W!#("22B#%q^>_0P9a^0N0L(._KA-*1n$j$UNOO4g5X.E=gA7;nWZKV?`f'#V=R\*NF$*E]`L'e8>FRJfC(l!1^F]IRbu;;pE^`[/#L]^H0d8U%-T0W.;\HtC]gh>E1`@`[a]WpUM.>._js"ePJ3RIN<&0&;((P8nEH*YnbREZp(dS-AZNrI3h)7Gf%UA7iX$Q25@J"^0'hmhp(NMO/%pe"R:TD[?BLVUiO5DZ;,lY]o=ELn*a"cX%G3W"rD.ap'^iB2)><(c+3[fo)T&&Z2.TS+'R7T=E</%i/?\H(9'=[/0Xef*71XC;/)%W*3pV)<e=IqY+5A`AH5BLek95"Mig8GYEZG"MfI94rjH_"uA[2I]Mr7@^bb2<idtCh^c-ErSRDE4=FiHpg>c1@lRu?N?fKJ.)!c%%k=o(/-#X7SD'@[H_6\l8;n,P0%Ia#)4M(o]j!bGuX<Dd0enl@\jQJnE4uqRMDrk9g=PO$W,%CX@"_j%g-JL#`,3]T*'FCS"D"Fq>%!16gg0Eq@U.(7St;s^LAEhLeB^$JX\:s<EA/p4:DB-*9$AND.)Z79fN"_Pk"0M<s_iJZ-t0VfC=938<X[s.60PRI_Bl/dWbZGJ-6%/?-Hh4uQ<QgD0iP-nm4`2Ul)!*VD).O:2lcP:n`6fR9`)LgVhMD8&.8PAi8)%O\>OiGH>pg<Fm8$0A`DPnmskq6>181I*mSJ__"m%Jra+fB56]/n77hC4LlcHY/$f9`kSLHZcZ=qWV!BnTp)[Q".K6920AC(F=R6)C?X_/kQKFf5H^]DYFku"?;a-<?U;_'jU5hej=BHP%fc@8pTbATQ9tjg#-T-#:'m,&mg)nqna]HjZ/%L+86RTVj)WiVY:d`:\OF1]EY84ZWfII5S\UL)k"]dt"pIo8>*d$]$-0e@\>BF>c%3TlR;#i7@up:2SG0f9@eQ',F68nnM\abKFonnT"9$(["cp6c6N,e59$Se2leiRT2dj-:A<=TrSg^Yu)p9u6T=e;VIJc7'dk3N!!A%jnL"Hn%-GEb(3jXYDakW\o\#LZ+N1r1ahNGMm9>(DVLkEqJFe:.o<@Wba"pI+G.HXV/(.PLM>eB>u<&5m*O\'4L#blU*I+[r)OAo%P16.VN3SO>DtXpF.Ti;ikOU2ON6Hm+>Sn[-aa8^V>2h7GIg[$J=S#RZ@Q,YYpF%@iW#fp&5UND)3:(4gUp.d:osi'WccN;#.nZ=O%]Si<H`W.<A1Oe')H:sIWFRh!_W)c0/3K12HT3!W>A0'>";;Mt6VN-_0DRh]i8lY,eNpi\1<@)QT/"&"1j!Cr_Z15Qfi^1(HdX0oU%;obLpkrM#a,Fb`Yrc\,C2=F0!1G<)KF7q2X!;>=b"Ar!iqigW4:I06&?c2gM.4.tJo/t!fQU6-d0tp,(Efg4;YFf8]5B!UO1%t*a%&LG0XU2\<O8lZ:*Kj>>0UU!<@!3p[O7H'rWl!WkM#MStjf*PJHIiRh2V0;;TOZcR^.Hu`#;F?F0@Akg[?ncadMI(3W/O>T@KlURU%<"I.NKI\:q@@2/=h.,,f9Fg;5`k/`YOrR8c2lSZk!jf*!Odmrp,@)O?io#0G7E17MXg&N6Oj]LY]*BYO*);eO5C-9Ma4E@=#P.#<%I2?7Th>pmpM?e(5ngTD;*DK/FQ.7S:F>EiM:,aZ=?-lBDGCEL/Vp[f[W@'JWQS.ea^#r/$?ULag1KAm!V[#Y1_TWau;uDSJ*%TEg%N/UsWgrjV?(\3qmGn*mSFkWS.A7Tp'k/S@-D+Qo9UXC[La9RH3r8H!^EFnD/)&ZP2-C0d>niS4#LA#":LY.-1're$2A7T*H))!3Z%P(ch(R&>g_i9X+%k5afBI^,`&j"*!e4GhNm*GVO04PEN)`*(r`?W!"(mpa-S"(JM9HYSale5H;=\R@FT]Itek4"E7sW**qMCjo&$%L[N>M4?&5.Eu<35bglsZF`kR';\Is+UUn#apTBEC8[,?m5m`BIkpW/^9FCDH-S*r[%PV[XJot&^Rq_b-O.rqf11g,tO3['<9g.9C%Iknb_:0OFmX<-d74SFDR37/bHm8qoWrG%+fid*T[MUY_X__F:IJkC"XH8qV,PQ:F#HFV_/)G3X[ISp\(\Hi,1ol)+;pu<rS:Y3KI%Y,k^5X917-d[KC!HEj"<R&.-J6JjPHGKB:"pI*k]8c23S]1W%ro88e9U\2\E*(((+^e"C4a'(11&HpDmFlEbdr4L&K<lkO(h!\ec%>KV;odCKB&'V;2pr/PEjL`#gg67BF'5`ln8M,7FhFfe@L@J?*."O)C*cF*'`0+u1ha&$m$oMaU+T_HdLBRUsDYi;ht6O8AnKKk?#%)*"p2W9ij\(=$iZ\mV33+dC6h.!4iZ@/L+=m`ur%ieSI35-#f]"b1l$PGg%.L,DN*W(?kH]W<:lJ9kKilGqj0'rdQi8^YcbG6-=2%1P]<=kCMJh<fmaIr2PqP;NV=E-ok,bEGpNN5]\/6"ncX4!KfB!omW+PI5QdV$puArSJ[)T%jjX-DVLMD_D,gtT9@L\Mb;rWEYe<=%V/T6Y9,>+QX;$\gfM4U\q"mrKn[MI`EW*B]:,K$@nl!!(XlR*K%nklG3eh@(>]'.t-c3d43o1&IiI4/AH[4];l@*iJRcqBm?ZtrB%"GN*kYOQ$J2#iYGagEAtRQ0\Rb&=;F4=6G"N=L.R8/msEN<ACmN?_OV5MCa9c2]`T46&`^q6o=D\KK?cJ"QTk(Pnt==m@e(Ncm0n%/=ggIqACk^C1lPWFsfn2=af4,^&cq*e%*:bDWW^o1`=j]1$N">55G+JbBeT'C91U/>E'pWG16/>%;u$"<ra!DV;I&+f>S20.dZ*<%I$c0Wk#-%&UcpBC<-oln@5jFQYhQddOhsc!-'>5"n6545<&KtEVV&$0F`EN6$c&.1VQWOE'mAF[]HD8?;0QW<WNak4E/,]:GTU9Q%EgtUk@Q.(7o-IE'2O:s-:?UYKhusj=q53j[!bn=#YHOt9'[i<6I=/GC:NEOM2VZLHB2utn=)dtWY/ED)U/&gRN97m`FJht>&CE.(%.&il12+/LlN9NHOI:1PlO3eWT0&_VRe$Ro%qn"GhpLgH32Tf6e?8I(j..cZTs*K)EH&ks)_,8HL0)]8Wi+Mag8XK.H+7(?im(%GY%9la_"06]#42)iX^FQ+BG/94[\@QO#i4aX^%9'0G:<;%;OiP%M/Hf&.PM4EYhBoY-T['Z!DGhL0opdFj(B-,qfTX[W%mMSkiF9Pkt%(!@!\ke);J*R0r4[#<Q1\nX:2>.WVS@>*0Q@WB1@Z?TM0SQNaeT-&DK24[jl=leYc?WPX4D#h-$U\O.i3jDjLl*G8V>#"`bf)"R[%FCLmCO1i&l:99cL_&gQ;<7?[qn+iin(KT"A`Q`uAmMAjOnVD<gUS;P-^T+0CFGX3p-Wr7rj(^VM<6_rspXRf9@^F77pKplo-WWkf%ZC::+C-&V'3`a/2ZC4O)rh*6)[[QWHVt?Em3\aHiDu%gr3\aH'mM(,QRdPkDHfPi(7BrIadn*I(V:BZs[<0Q,XHZc7M<RIZbH'mG%!!r$fpjG#j9[1WdX6IQ;^UV\WCT?X;#/jkAH:9]^fF6RufN2)%.?5p.<D=i1N9eX`bGsgFUg3m-+t9E(G3PCpnEMA/MK_`38pKmo%LgE2_0dOs+pq,!L=l^HS,@1'ick_\TMs'Q0'6AEZ]o/N<=!us44MJ!o.@h`&[cOY<.AG9Ya$P^gma!&-=1QH17/KB=cDj/%9`#'B%.I>Jmlbbdn=Jf#X49510>r2t2jdkc:ZVSr)&5'.5L1s4J7)EG9fqKsf8J#+0<0RUaeMVPPMTK.GpQS<'G0Sj\HU]:%s4fJU;R^6-%0"Up_159kph/E!7/&14ADL_6MU:Xct.D]ffI\0J:Em:0EV?s5=$GX48m^a30m\7=#DtZ/;II;@3Wr6LCaM.SX3fA6]WMoTWmrF>i%Mh.RU9YVY&c#ej0<D[!m-b?qX\\6SUkE"R<)\B@Mp[M"DLDSI^D!Or%Pm.QdS)RN;:<9`X+rH%,7#e;k:d3d%-?&/`)EM!'jq+**%kB<c4?b%,UrOUf]D2#Tq*pa;RCumTB.B\%T5JImVJARmG@K(CD/IP"ijRGtO:]T[`"H#JWhNMW%bsdgIW2m*OX">&%eqtGD%"=+T%XRr\k"ba\>o#3,*Nno1]E<:[$'NNY%CmX&a&2#]P$&d$UP%Yse[t>TDCM"obk@:4;ejn#kU-aU;^ifZcAP/#2i=1N)nqB">p;gS_%&-/[]IF6D?Q&f@s&)COJ*CG&6'`Y+R!'h,K&c\YYqu2-*8%fMjh8-nc(KNYD&W]1>KIa\G8f8Zb1)LOf]0Z_^iF-;T68<k,_k#6P%b2;#oG?=\8U3is:2r+Aa)h7.-48I%>bQHt+K^I_.M\k36pQE+`hqi=m\LI!`iSI2m6c<lP'A"oFlR*D(E;,Ppc/C"7k6NK0`u]0O%;!R0C:h,JW6%P#i_HL2#O\Q`A^?`?0S+EVhQ&i*sXG'L=ZWU)m\Undl.BJfUNO*SQ?W[]0aIN_5>^^s+Fs3=1>,/[i<Y^Ib>so)+%$M%@M]co0>R1tsgL_hcPXOro'04T=*LhUf9gFr0hj+HLpYfC1a8nm3I:m@iCc<KigVBC1d<&#(B3Gnlqj1&"(Z2o:FU_U5O0iX!!%BS&u.j9TJ?OLl;=ArQ,$Y$p&SnBUKXNoBZ.][pH`Ql7N0k;7-%Me?g1duF\-YB'BS4fWKr3trEfbO4&nm"bYWI\32o;bXEB6Y\2E%d7nlnYBrC8<_JebGY-aBY'X]j`5K_MW,]LB0C$c@mG`I`/qmn*R\Jf/Sh8CV`;RTt>Ai*8]Oe'1ZJb&5dOE3nSPD2gE#WG:Ika(^%%DQuIm*`:^MQ%@"'XZ]pk$>V.07pj[>]\L*27Qo5X,"$9VtDNhV`k&$2LP]OV/DeBa;*[YS75"i`RrnZ:9)F\Dt?WN\5d!)UgJ/o%gt@=mba%Z=[ZHcg+r-E@Gm;Ga=JG@^@hL:dK=<S@<K<Gg)4i\uhFcZb-ZcbgB?8@IB2t1'qmVhC3(.guV^%&J:a),\!E/-tT$\0+%<K=KL5T4@Fp7@Tr06;9pc+XJ(g:WnT+IZs8bbm7hLD7*ol!_c>,)DhOMR%Ef#2AR95H4EGGB[:[2g<s]9d`/$/5SiGed`GMBYa@C%XnV#%2%8OV[nY`8@eOIcN%dUC?2\iSF\2KH1SqR..G]f*\[tnR[-<FL<K`q+j28NB?F.$HRXEKlB];)sjln&$[HdRf[&:?5aV=lo%2+lQ%2!+X'b-Ru)]fd7T/Xm*ea,_cZVj-T^Iak4!?nLUZV18nsBg%cKqgDX,`PqQ550i+;.gIMDB?JT0ImoCn1Fp*ojTdfuVbW4u%E;*<)2=&hPLAB'mHBe^DmGms:Z-VcTnljZC(mso%03Lq[QFY^I=V]jj%\XWi8lu7qXBt7%e,hpAG%lfp@2*(jI;u87/lGe-Meaet%8#t0t1sEm\H<#pJUk=/f$tf,/3S@\ZcQrYN+_8I-Y'@G!.6)U/^YHi#%)L[`O;C!$6($h:>hp`:*0m$+_.gUn*+)W8-?B+<Dec@!%S@@h_Q%DF:l0:/nnsfeNhDhuC!du_+$7J,gN4,(VhcF"()157JV0]!QY\3tZ1YgkC"+WPIpK)XT3%%T$*nZ,<_<33nID=)=./'l!%89qu*YG@OUZ<uBZiA30%s%p?8:h_W,b0*S]!0u+8.Q^Wt$A?hG^t[$/:T=DebU<Fp$BW.,Z8I0L)q^d`!`W>*#]8\LWrR&o,[UYP%df60O:anQdhO^?@!@k2P]T82IW</<*(8Y*ijJr:,]t#)I^j?^)PjeSeJH*QaHpUSoXkNXAV0mm9i]hN6T6M,HET+.=9DKXcoDXnG%q&$=(]D*J^PYX=JpW?/)`+qhKI4=&hm]V"[.A-+BEOehE4<IJ8F'%&J:qs]q:HHXP\,*e6P3Z[l6Tr$4mtnBEIW;P5B4rqX)bTC%%5P_D-SY,htHi<Bpl4mr!h;.BET.Z>/YC,nI5P\O^'QLFa]i$VpqMCimr'WmGI';G2/%HAMlR/<G\5[L^WXqc"<ki;9YEZWMn#<t]%O72`Tbdeje.s3qkZhO=p@#+"Xme%6_U&.!15<Lq&HEZ49:4C0qIe&4gol+V>ftDi,WmZ?GYMZa:96@MnI@gJDh^WfQh[atu#P\(O%lqZQqlM'WAp_4J$._(Q.f2pXsn)Jc2]mfO+n!k,n?et#q^WfL4'UkrgookHd`:dC7jBb%WM*Bh^VkEHXdCk#"Uu]bCYO;(Ihf-id%_oQ`*-KOUfH`AR_a7oE:9,74,5"kd=ce[p]/(n!OYFg31,cg`jJ$5LB.3?gja7jE+K31"On*]l/6Fjk]mhR5JmTr,_\qf%[f$!KA%hqmZH<qjDE:](t%qT7X[pRktd\JWKGl6i:GT"`hF.<#.)p\OCsmI"#iTAR\en1Ylnkk41erFDQ$+oM#t%Hi*:AFa*jb*5u_lhBIs%3^::/:HkGcBpdf6lZ]De&p&-hdHf-IoojT@(f#Or]m__:\<t;5UAO^,'X91&O7-.rPB.i'YNfc(:di4!kOr/;h!:l:(g]<`rqsHY%o"/tY=C-$OT9SFYgtu`7S!k_X>Q(3Zp544qjMQ/?H$T*i5P\O^I[.D';bZ=S^ZXTKl$NBIi_$1Md@]=^-dec3o_nQlH"HaHM)^6[%>Q(@57A%3D:VQa(V16b'Ie!ZI6@\@"p\K`j$g1PTfo4o(p\MuNEhttDUO2t#(Dh<D*rP#(5E:,Kh!-8tht"m9rF@p?P9#oO/#D6F%g_km)8#E;U[0r<A+'`Y38F=!2_6m4'g6Gs]PhpY7c<KiI(PTJSq)Ku.:[Ce[DSh</bh!4gQm.)sV/R`r9m?2=;-4EbR,6(8`9oH_%*UZNrGA0sK.EY(,&^,c@3pld*_;2;@P?slH?5B*m#r`WU5gU-nf=e0U)PhU7,KX36W>U0]6Fq?$9^:6AG/[!'pNBoUEZ"]*ZcXJs%ri.Qn6ou6eI2!1)2RY9bgWS_oe'0tTVqsCO2N>akX8.,+rN:&Xf'n'*I7kP/IG8:cojVeZU*0ikWCM*SYkbCVm9,(mW[W,<D(FgD%^WTGQ4OcVIUO3erV<T"8Gj7kn3A_dEF.Iaic"kE>R]k>/'X`hQWREV7UlDh:":cD3hoB@=`su6f1f/OS;h?]7DeQTB+&hg+Ud^hs%6<(FdkColfNR>ej>:s(#7?c-`m0ZDX(-uHq!9Q_?=<#K5??UGr.^ATqOFF<JPof2SbFu6ZoRhlN&Dj5TNHW$Hr+[%CStMeBZX,.[%]h:%V+'H4j@e^.d@Em2g>g\R.X-"&2E41:2WDe1Y8oqu79>BFs<oGOD3SU!3L3AP`0(t&nM7DF[16=+a[\#VQ'$d6u@h!`2c;`@p%8:]TtV8U%$W?hqdYF7?4NQ-$*?#,`IQ*^^,Uor4oR_<robcu&jI,>'.=A7;)9n1<R$H43Tr<u-C/)5utak:7'lU)5+%b>gT\1k7_%:AeLT2I6W47+gJ1^gKXR[6*6q31.[RMe:QZc[2ckVq5EjIK1'TOPjoqb'XBPgcBth#s8$,6k_K@P?Si[I-&BJ5C6bOe].(=qZOP6%:>!4ge2s^TbS%?L_@h"t+X%/#3A^9QIJ-lF;KkdiZ8'ACgj@>jpIp%gY*RR8WTmE?9)55>lha9@VDboTH[p+>WP^8iJ'R6_R^'8P%qGVJ+,(?DbrijGGiZBZ8%lXmRiu]i6L[rC+O//,%4M<7L?N4scO`(pKo&Z(XAc+nurS`4V_XFL&-+Fm0*a&9`]&#KgO.9ApRq*<_%PB#@376u$8c`g0bFu^<t'>Q.TGWX,m7?Cc#9l+IsU8%2EZF`[M7C2@On;*3h@T<q"7D)^oo.M&3h_!7E4R^P7'=1mT]ib)e^uBR1%-ekIOIo;cB^.bI6#pN:R<3e3aenZi4TuH;1>)_4BP4jFH=S:_7HuX)m_->]92X:;3eVr-Vq8:N=ahJ'N]`.fsqI=s@ldrIr]m0PP%l<!W;?PQW#XmQ67_64Ta0"c>:_?Ao./iR)3fA.L7Im"mEct;J.r;!>iMr2%sKIc3[oWX'%*`hK`$9u3+e"*'nIGPPf6SE*Jr?'F3%%_4?dZam-/nIJC"rFNa%mrG,7bLtKP'BR@VQ7Ca*gf85!orZF+l`IR[gh6<0J/+>kCrTem.E1rrM;s=Rq7L_gFa@:-qg=:i3Aaod%C@90.J$mR?@ldi>Qp(-(G<J*\c0"G6VfhamZG*[BD7Y-mY'ia03fh^b.L_g3e%O@Io2!1&l8u!S[ci29QU$XsDi1\<?M#S6c_*b1%pKJ`CT%hNMjdlA'j3>=p,W?\<]*Gu]f]tHL<b6LCE;e,Bo%fZ2D]h\o(UWqcV$j0beQJRe:lIFWD="C>nhp,j'ug#-p.la3lE:_`%lKsA/.6ol-T.FcTngIYiX\8i=6!8M\86XG9V2;QiTF;U0m;=@Zpi#ZG(DJ<(aptO^Z:fna=X\sMiRb3#i[aXR?-BJK4$pe:4tZb,%KW>Zd,XXhshTI&qejrQ^8--H7;RP;<[A?9kN_N-VHJc)5X7Lfm+PLAr%Qk>],CnM=66UY>OJTJ$`-h=uAKaN7U4EHL8dXd4kr-k:%eZWDr*'[cGgb/%DD1a1X4^6I=>!_mihkplE(rKB152&3X'@dD]'(!D#G8X`^QY/7/j)s)8d)!1PJHI`-[T/fOgkq4Ue66-iZXtk\%G*_=S3Et@pR:V_mGp)+C=hA"ECkT]QE_m,KT/5I]q,l@dY%A&2CI@c!0'27_G-SbFCOMiRC"lS[g?6O>?N!SC@thp&9;i9Tbp=A@%M[QlBlM1s#C:S)ofMf?F%N$q%_(Nn=4tBD]74GtA/mp'h`RM.dktB)nSBOopL,!/&7"JC@l\h<&<gm/u_"`R=RUn8)m/$Yi.#\'1%RDI[:?/MlUf'9H6e^6('LfnPkI>1D-3Xa09;]cH)AEm@!bg>5'Wnt>d&je>A/^.U]^F7=Ao1/1#]<"[ZK2c.=6S?j?AH,qnbB1bY%p3cH`/(C?.V6WF52rLh/:C@r9]+t_=="]MrgLFJ.Ib%ikikfaJp%rh!ZS!@iF%^B*3NbMFQrk>Kk88TNb*)Zb@jT]2J0i=l0F?#U%5MOi[hfi@Ho?6U,/uk]4k8?P+TCZmp7rAb>p`d($]4?=SST&!$%bIaG^<b"Jr1()4;d\95dFK4*I08,;7l@M%QN'[\A05&\LCICe%oDJ<.@!_<BO$PGP#A:knr7PMTg&4P>_>;d>/h?miBYWge^m=hLqS_S.C(p3-a3Zb/d"?s&KN)?=LtMfZ!"@2sLm;C]I/r=!EQ)gK%;gTpe/`,3L?4iJ,J7W(1Da8^Oraki]%sY-kF0c2:ii%TkGp'),/Y6;u]L#k/k'=.$WK*3<Ip7&_Z$$BFYR?Z!]k4CkrZ4p<8tJq\%/!!sg4k<`EiWX8g.ZH(/?.nnWV(RS.q:3;MfGSo0A45XEGdVjEERMd)!ZRK*NdTNC\Z,bRj?,&7V+4Ra-Gk/=b`5jL13^n7eAh#J%olb,cA_1/`-\Da^G'RUU#1/W"c`HU$-S<.)G^u:h+Zs&3Jc7c:(j*U6#%>G@ds)>Y/hDFV-YD$5cgTrKXL*G`1r+\h3EMUp)ki'W%H[g9C46U2$bDQnF>t!_boQtO6+rYbFlG;)/BW?'M$L*mGoU"Rs`MF#9^!jEfDC;UFfn0Oqqq`'V[GN%E?cGbSD;0!1<,YF#AT[^X%r61aNJC#s!P'J*%D>SqXIAX=N/+i%)5CN:lYSN_LA#GZaD_FJmFUXEkd$6E-cb:HDq<:bZ4s1+^?ku&:n%j><6I1Rt"[$>+#a4/H%`R!\Y)l?>um)h`!\n-t0l\dlT\5Pi1">b+3IY/,"^E=RmYO!U^Q[a0D&hPa,e!4Wh&HCl:j6f?=o]seSQX$KZ`r>-V$C<)C2erN;%^ug*:EYXV%4nWd,"/>dn.jjRnJI=jE]a,$eh^pI0Cm=_=bt3[rY*A;pq(S89pCOIXdG59/oAOHi@.$AQ/aPp$*l,'P(:iX]7GA5:%FV`\`WD:"B.*(2MaE&X4hYs=2MS(k^)&psIZ\t$l"q$\+m+I#fWr[N[YD(JI]Iq]Xl-KYQP#!G>M3YfF"LWCOTjA_?Hi5jdre<^'%)*,4PU!0[eg(O[]UY%4EYp[bq6eX3^@S\81Jc.@^6:B[I.26<OUo-ntGb0V[q?6M0lXpLhZ8R'Z?sUOP5(M;tF`mQ1hiZc3<%Qo*%g,R``QgQG-Qhoh;7]3XnFB@e)^U62S!2^<<j6Y7HB%RSG9C7Lufb;o8mN,N=lJqgRnuHOYfoOVW/k()!=Y7%&>#[ZSFsF3nn)Ji&%g%[H'k?G"H:I!-1LC_/bT:^0hr.!Onp%J4WFJXD1p#--ETe#h_n191_PCJX_.63Z89"h1ZAicJghl4l/YAYApAnJL+h5sm^qcBuP%>:[I,+$6SderZ#CVfccTSXh-eq/9Y#r'PJoGq,/sr&nCHeaqSM7-e&mH$S@MICEef)rPjMc!bp,CpBES4m?sFRAeVPFTO(9M/Zo<%ANpQ[Mr)LpG4G:q7t(-Tf8!>OA!?kh)LLVZEPPV0lM2rK<@[TIa!NmG:WKOp\,'n'Fd'Nr[lDoZ\_i=c$9+"`K*rnP!%#08o=e4b%$3bqUK;"mB&g+M&>CRQ\>IEKdbB;.r]5p2L=t<,".eGjpTf0[8WPj/R+3AjAhV(%C[$,X`c\]D[^'C3G3m0n^rA7f"](Or'bW\*O%?[^!3#733=X1sM=`[5'clId!R(2Au/0E731(n'tK-:+Ygd64Q'I/`.VM:(&Oh>=bV_st^CHZsHb!C(C;euB6V'90=-rj`\kF;L-'%O1FGC`R<CLUZ+C`!UsDt*oU^,EW"Ib@C*^7bY1]\B`7[Beo%oklatE*DmTRUPCm^qXCaW.C]b`*q1[]WgMlVrpql1F"\($B.0k':%>1RlCG8><l7^U5ZbjHiPHO[#6]htjAYh(R%m>YS'!$+6OO/Z=\of\@1^'eV"=c9ro[.Kf#;2O;OWIDhPRM[Ui8US]*pY8h[PM)N"%2BFZJ2:>sOa;)&u&(IoeL6U.bCPQEBl,M@dY';p)b8'K9:9J\b[>H'(F/9sCO)r:`b!rPDrF%<[%a(9Ol2//N>j:/EAe*$ipks>[%kK7po&c]DaPs4SZF8:TH;Qc6GS&T!)01kG'<"&PKCS?R8L_Mi9Dk2AKl,Q@[[H;==lCmo_HN.@>Dti4`F'@jXXDct>YJ\:<'<U`X%O#rT[pm=.7DTNVq3;c>B!2DXe\X*6G;hOf!5!Ni_Wr;`p4bN0H%XR+_Ok$GHM<^/D^STmMh/7Y5])RTWquXIE4<5EZ5c9)QF:^/0%H31cE4E)9BQ/V!=VRm(#:Q9);CnlJrq"Z!'S_p0\?A"JgWmTe;cV-@O@O&]"rHlQ7J!HR4m.ht'3]]p(5>A,SftWRYah/-u-+set%9kcR)#;AKHd`3!H'i+2bj,Gs\R<6TM4TALM&K2@9pN$(h_[og<%KC,B-\J/G&76-K5L-#.=\%#KNbW)6J#K$Oq2?CW\buBFCp*El%`-NO(19:HuED+$[d@70=kSFm)Ds@)@Fm[B+_@#YEh-Bj$g\cUDOo\SKJ$XTL]k4&'gIj3To6'<=aoK^(b-i>@,"nX/AYPI\$P8@.%YLNC0Bq[HZmDiqAZ?,`dr4_[`_Xui0p<=#?h>j7tRgX)of<+j&/.V.>"uk2-4em[U`V(3jF($_sPpSZUfNWmd5d)\`Cs_Q,j?&Ds%^1r!(q;N!I%Cj(Ufj#4u_$`8M`V7@,h>"=s>G&cYfCSKT`;)m_CuaO[I14lH1LG<tg#r(\`om"uokA-BhKAQBXi&GNcg]?IbYJ+R%c*ffBGuir$"3I`.s+Yarog*`1/u/*JRfM9sjJ`"k"*mFD+'_Zf^R(%1?Q2!ld>21#l_cGMGSEdh]b.$n:h,\V\g$%kK7.=LUCWq;%`]lA7B27i>B`H_c3$,3RrhdV\qI'3RDlS<R='-<f5;rJ%/$F^)_B]0B`.+&S@bTq>Ojj3?hDtOW=6S0&c@6>.`T]$:@/TMA[dM>6%;N\L*=.pLVUJ9&kDf\GE6"QNf@^5dkr'PO+*2m]??Tepnkh5V$;tGcoHp+^!oT._B^OH314DiF($*@?5<TDWb[^9!.<o;a1H.(;3%P3aq"9:T"Sm0GWW`q/8&JM3b]Z,q2rGZo8f8+@T9SsEYQR!2e[>&:/ghf%HYN:OW$iG$t6G5=9Qr1GdY[k58:K72p:Q_*&X?MKj!%Cu9r5d/MA3!@iqf9Ra748G$:U>?^2s;N6L05>s-b3@d_bK9ak6Uu`rW-Z0?Oot.%hooZPS8Z+1n2.`0I?1)Fh0lCBWr0DXB:19RW%Y/h+LX1\P%3:l6-#tEr2iIRQ44^H!sRqtd:L=G=LmXq>_)HEU?f%FDB8W=.GP6tm:bn.WhD\r/PU;b^@l>:6YOn^'qm`WB/]7U@D%0:RHKa^KIAl-%)8[],&no&#Va-$4uh`"mX2p-&=%YE-HQgJF6(0#!&V)OlD^]>0?H7ImjiL%AtRZO..@PV&;+3kA8BJsMVO_"K^:%am6G31J;m;h-#dR3Bg854Fa$]i13YUCd7['g(p$^5;Wk1idLK0k$hf_)a")X/>mE)n"-f]GR@2Z$7+aecL[OmGS1M:8V$?0POL*4%O".-YCh3r#kAt:`'KFWR$?.i:e6Fso"TQ=a/C"1j6^*&5W:T2ME]aN2;gD1;!r67/R=p9lM#3fc#p85ua.oU7p]*="G3_`*FsFa;%:I=fco&8b<1^S9(h96++a`KS4`E?e^,iZ)C:&MYql/0EP%6XX4UNc>>9miT4=,7dYZQI16q_UUH6/OF%WbNC<b2Je&<ltNW"uRO(%"(dponl]mVNP4"[_GW-Ap,])IIT!LY`KaqsC&(_sr\=$@h5rSCrQ1rUO>Ae>'B)mKD%[%G=;6`h%(I4WZsG;O)AnsnRSZM:Bk!-g%?WrH\q2M0Nqrj%DW^i2::Ad%*'qYH(p2#8\f9_u:Dd"ehAKR0B]p'mFR"2mmQFi-T$1DB_ke[7rFLBp!Q^;fbT.H\*F>d<8.c'rV%1kV0?XP[56n')7aFYk.D5,fB%A7.T.^2])?1,_/VNlP<P__Od$A)2uFohDX;/U)M6S\]QPl`IM&Mue7h0(&-EG2'oDQ,QI>SYsWe%]J>5"PK=W:%dB=/1N@D5/A>s0pT0TmjIoW7El'I?^_(uO16ujX$n8\s"(&>12N>p5QWBF%O58'LqJgkcY-%]biDDrCR/)T]XST3g%bc)\tfm38N;Je_uf^15i+1KjgeGXthdq\1:Qhtpuj5!9o>)k5)+f).T1@,5,gniJ'.\?(;T$NbTS&_Sg8*L+pCToF2IA:^[o10ce%8mt$YN/lG[gHrOcf<!,dj[fk5E]bVT#FFmir@5%V7#@u<[lP61/4:ee52T"rjk2c)o*LD!+&'!@/+#6!GUTd?l8M.<N)F-9.TOa^%j55Labhe)'6="TkML(^j9._c,(qBe;Wd'-`#i.*c*JU;43IR%mKh4eW,.u)VC)ZZ)jB%!$0Ndbm\!ole,E5JP/9G;R/mQ1YI,8]l%c!29pWCQDFSM@6=*S'EAc</t"b<B$t/AtAH_j6cNksKcZX*i`g/qMZL"jHF+)sW%TAVK9o+e#?b;7/L!*ir[<;Oe2S%T(PWD&nEI%K%DTno1Ap0S?_LhnDU/Q.pfC:ff-<nNAq@?q&W8ZMV\gQlH;Dodk:`eLs5kFi`*^pqJ!DOo%$F,,HK.!"W5PV8)YqDP"K_jZ4D1>%(@0UZeHNE6Z"M?d=5KtL_]7B9-'!!CqfF^K83#0e<3L4dBml,d=@s+$p7VG,]";YDFEnhOS1^,hi9:(pHMi?7EjG\]e'%h6V@DcH%qBHYBH#=.1\laQ&Oe:;G?$njYceg<"K.!8n5GJi^<+Y7M7,=HG4l3W6pA@A9c<4F\,\mhsFDuTtnokc5(HM$j&F4(Ck<RP8":K'M%*O=EO..\^a\1QK3`]SFJ*:OVHRJe:o$`?X]q3-DQp>s)=]gt^$'N&drj<>nQ@3!h.H5D^,&h)i,)cEKaa#uj`8t^tkkSHYp'nh$i%84bD-ijTn"Un@rd'.LpfG"K*]dE@eCWo,o-&^-I2&'M7TC+NBEaN1#pAa=]BVd)MH!J=`0<8[S/Niq,8oCJn2=+;6m?icH&`(XSW%^0TIoi=jFD3F5QD"hsS/X$=>)-%oC@`288H#[-]Ljtc7'k-5sC<ZUtFJ<'#p5b&Nh,S`A&IRiKKSU>1<Z2T^tcZ*)b7X`6L[/(+C%)a^r2`F^8P[BOYJ<R8sVg/bo8ke3;p2`j4<%nnPK.^6XK3p.ScW=Eo&0#F)ZlV4O3W3D3QbpLbDGn*B>AkA5CUr.TPQOl=*kFu!q%]Pm>fN)6=-RB^jk!\1j/HZ?eh4G4I.WOuh#H'drXXOFd\Ru@#6_gU7-\6_?_]_L0i$U3!>q1u3NEsupS_EXBB0U8+c])A7a]'Dd^%#ErmSS3E\f>M\"9f&]YtMF+8\'mdr)WaDcPOV\MqLiX9pUfF"NUR6mjpNsIcf^uVU-PiOPei24#q9f?:;Z)`YnmL'.g+DXe@UYBC%<_n0Lm>jkdL*AUCg>\*_0,n'i@h_UMlu[em50atF\'#en%n$=I]VhNN]=?OWV@B2<;;4h$0@_VD3</_Q:%GrFmUB+g.^A==*t_#/%[@eb@V`r1Fb4@bWFfWURj`kab7<-\'H2efhSEhOBIp(V_"=r;7"m#7I;t\2g8KTOP=WO!]YeCeCZINZdYR.Ji\'u=P'i9V7gcY3a%H'JKNoQ4t``>*?9>h0ZXRa\oLrf*amEYbmG?[udeWKndqb!fs_;@9o,OYGKb4VHNl[rR[^r,V3mZi2,6+YR4-MMoHJknSo&d?3NV%4#`WWH3!d]^d]jQ.t9mb>+fWF;7-;c+j',nW:pFpA?*SK\F#o_Zr=g,mjC?3"E):Q!pN0sAuqC-Z-<E/Igd`>Q,)E0gTrhgVY<.C%D<J*af[KSA;jd-jgJc=P]/aK[=j6*;DW81YcsimC2dKd6F_bP0.ikme?-jl6me_hYN)tV(H"Sj!EFf*qH]"6\W?UdK+Yf1`#-<]M%fmmA`m*/sQT<nn=M]&c(apQ'rL9/uU#KBkK`3OdI]8.>!n%VoI<!F'n1A:Ri@YT!ddDJ&()6@r_JnB[F-9'?CT.,7URkYM/7lJ=m%1hY$E$]Ci_XL2(Pd&U\o-Phgm>S(aa2gIuGrfM9A-L5IEf#JU3g?E1--W&=V;)[=_LBC_RX<kbW,hoPiJrZ(?hL[?K\-0nFW1oMf%(>TqS,.*\7g]$Om<\<3Y9`4t)nA8?Lj/dO^QVc+X#pdCPm\bh3A\TA2-2U-l?u!PpLRM+OE^;s2K&=t`#5]Uf7shJhZVrF<1nQ\]%0[UnPnk"i4j%$c36JVD3m1F+i+/*,LA?B0[(/lOka9]B[-;\]JC2<s<>h,p`RIdiuT"q.WW>32f%9,jD'$T224M/,<=Z1PPL:!X\%Ot_OC;#=ml4`.-rL2&@lC,@g_EcOApC,@i5EluC87?,*;g,sDp.F-dNe7cW,q-j,%;>N$`LBKQcMt8S*Dcg_Nl)3gP$UnG7+%!,@%Z-K6M"A,dSr=jDcT(*lGH=#(2$RJg9Op?rs.Pe@BrtMaM6PXoh*r-qS`cQSf6]+IT9i,Y=Unq;`eL?eagee'&nA4ON/'=1O-K43k%M[.cQbY&A&g!46KN9tcPqS=4Z)YG]`Ota/o`(LSVV7ib^Qo^]W+ds8ffJ2.tbujqlN)i1=h9ZSLO]AaP?-l7Z(Q6P8dA*,sdY]qm%mtPF^`aV(%&t4)L.Lq;I#[8@7<11]uZ`l#rk`8u;*=\Hod"V8Z^!I2Sar&I;+.A<m'&f5qc+#g'8R2UrM4+0Y'tIkH\*&2np-:F1%=]g)p%9,1%QM5jZGi$ai5ZtPQJnF)cPX.Z4"/2-TGLn9#UL;7]I)9ef1O(/!?p<PYTG]=joknFIX#ER3o7Bd5/SG@GAMBa\Nb6G;%68N:V.aFL9a#'7LqDK+Xs4r-^7p)>t*Pa'#(0?JtrBYhJDfO<`fP<]ac&'bH=3^Z_"tY.=1$]FCS[[1=kB3@L5B`%6l>O[":r*Tb%:uJJbkn+u+*7Q>u*4Xr1DNp>i"3$CX"#jbK%HJ1O$b/c'ft?AZILEZB:(!oXc/S?c#f-sYR$X=#07]N<[T;f,DPV4+"E3eliedqX%pagCJbn??.G?tGjF:?X9=n?6E1H(&qk0;grC_15R$uUG5gmml?q60sojf"FF2]Ia"EbcLm!]Ruce/G:D"shaLS@hL'QH]m>DX^rg%)"8RHgjhj@GV_MSnRfjmpAj+uM'ENOn/_SbAEmI552\R(\/Cc`fic5L$uV:K%>G=:l\ek&JK&$#]Gud.4V)eJSIsXJV"Bt'pAj+u%fe5\t]E\EqQp!E>,jN,.W8M8tG6^N.PBMMZK:<%U?S$$"97OP'1D5sZ!u9So/kE/\fN/`22-^Z2K@,?2#.t0@2i3eFi6Ctr@bl[r%R^'uD`4C<X`hm^7/n&'*lQ-blW&I>`jL-Mn[YMdYqOK(?gP0UII1*2\>i&B,q!_>;=!dFRdqMt6c>BZ@Nb1GnN9]YU5;=tf`dg#)%P5_bS_:A!k7Iba90ls_&URC1@:^tKn4l3">H=E7L%V8?p%:@i_f2Yj\=0$G<hOqS#R;;bMn--U#j$_4K)(fl#E/TrjY=:/?=1Mnl%8p[7%/dZD-G%DH"FS>VE\n)<5/;?GCe)DDNEDofrWg.DnfrN#e"1lfFb`ep*=/P.7%69Ih33>)S\B=OF:Fg-k"BL\.IGoFaX<[tQ%i72cco$kHh%e'%pf'1ZahKVWcdO\^H>>$YBHu$:*DV*pNhp@b7aE)"ibfrjLL6cYgD,QL0K85bSP=P(iWMVA,GaJ0p^*FO!dD^HX%?P8;A:(=jspEdX(kin?\jXE-2\%)DiTd;bo3[@>nnorHu#"h=T(o;UOjlYOhXG%t[F&3A4MuW,-m;EE8(G/@k`#!p0^%p_[;Cl'X%lt%f7nVa<;U.GTh]AD`p>isdZM-JGX)3Jn&D>RjR8ad7s(3jXtlXs&K8&UPI8$4+8"[,qBI!(Zo`F/R2VpPa9.gPgP5K#t'OBafU%cX%fc^92q;A7%c`NEiV3iZYIA4-]CoW9o4MX*\&85L10?4Basp%q,6/9---/Df:f+Z+b^mQBf8ogF!#VKmAVgY;GeK8o^N0gYo&3%o:'F8f_3h4mb.rm.`M-_^Y\g,<f6kIlr*X5n!%IO(dLq^s*Nh[,mFomVnYlr?"Zri9+*cR5'_=.!Al\pJ-coW*hs%khZ0ChhXitD%51L1^*7Q>%VhM]FQ/=]QF(0(#pYRj5=%LMY9SJVlP/n-Mb!Q>k(--(8;e!uTPVA%JZi(W?e`?;-6G#V%RWWDpGgUGT76>cH@?,L/%CLn9"?J`VC8`>qdNAn7+Mc_7fJ,%O/cN!M!P"("(hYg]B[">kfh%X%LU'[U4.jhVI=2+uH3IMb@co!qdSUf)VMITFG5;%okE73D"%W:>`OXiMHY7Yk,f['E3-KQo&%=/K5a-7d=t?<NbeB_T=n3DArH]OF,V*-6FE2cft93*YdO<(Y15BK>fo*sdb3fNX$Peq7NmWlJ=,%9d/b$-n`cO9-Y0(lR+8\'B`BV+j;'D<$/P6[9R+*jg-lq%-+EK\`s%WL3Cl%XgSg+I[XR0.;N<s#-j-tIQS)lCZ&>I5?Z'rJmAIu%r=NZ3WT`qSpSPb7\]2Yd=@r>RmFHTQTCESTU;F`-Y?ecsg:&m>0]U(5$TB9\S1F.-n$NUmWrI[9Zo$6X(eX'=S[LM.M3CATWkCJA%lGK^=hRB'Nr'1Vo<Pj1Rm2kR*<aZ*9<g*MB)/tU[g%a)>J";>%](sTLWt3O`fA_2$W$2\0VmafFO"Anc;b$8qGlqi3GmK_jm,I*+%+kEYVhrq;fg-hqrbmFOL%;Uq<I7uG'ZKl/j0$5FEhPFNIf%BQ<j(`RJY2n:/!gj7q>1k]uVd\nA6,++7MP<5Xb[4sXIGJ0^p+9(h%cPGhHSu15Dm?ICd5;Rb._"'<lP<B<']XBq^CVu,0mN?t^VTRB[boq@ZH(+25?obhDOV3]6'3-!ZQhEUBLe-)h51lqbV6Tb1At/J,%WOY7$3U=ik]c,.iHZsHeeN3%:lkVsdpqWMOI8t%3aSISRX43**7Le3`euq[TN1p*Z/7C,iVHPU09ZX#4i;)e%#a3mCD$tH1f"e'k%]5ImKMV%]Q6s+hoF$pN!Usm9iXJmu\1GWZCcZmTeqA/a=/fsOfG8UP8c=9bU#._"\oAuSb'G!)M]%I7MJf),RY215d[@lp5*-CIA%^glL'Q6pphlf_?)(LhZ<I0%fP2b:%?e!90?Ib+A+BWXJc07`%b>%Zq2dp4HAe7nMM!R>[kRH)c.odZR"j>=nVrt'%hr+jSZarcie%:=M&\$XYeo,:lg!%-_q5/81\M(%HnZ`ZJh;1%XXj'Jl61FR0HPqgU40^_3c*Q!@WDYjqpChuS2MG7drBUe%>Vq=L$L,gbmn_Xui8%:V:&/b6ME4-:%-G(WqP=*.-se)ll0:Xk;L_,h9o?cLrjA])LVM-dtQ#R#^%^S:"9i;sXkn/6BP\""/a$/+W>t^'hbBL:[6geATM6%Z\'<RU0b4Eh,IHVYITG&RC[P>FMpFEQWqu^hgOGNa/=PUh*<]L)'BnOQ1;HXg^%J=\XE$0Y`&1<3\9H35V#Fa"f'T\^:[7i0Qi8C%%,Ct-g0C:20`WT&<HZ+dFne'U_s6Hh$1*E>EKbMmF)A5/!2G3Q/F3[VAo#sf%$Oomb`AA8CU"K'o4^qa^sgH4IAIFF7aK5J;+dCY%8$&P!OuoG)3i)L+EbEm"-g_j+W^qAF;?nI@YDR]QF]`Wl1&#:ZUNh--^\_tJBDk22OufQ9?S3cn"gNDHSZ.CV/U4\$d%7h>\2$XH%7#h^_=5rmNB?VcJ7P/cD).&N2HWfW9RH*/8go-hcY-?>=X%VW<^BEbLL+i7</=bh*+:@gH'VmETSbQphm,cAX(WLU.OFB*R3^S`6%Jp,upF^i%faIQRIe5Bpq@'oM@WADUudC2c>AA8OP#?46bcMmBi=%OG'>Rc@0L6al[It=[60LR''.bEQJl<r_qMk_n*FSutJb;WJ.%kq@/j>muI2hBI*^-3lt$K1hadetMHH=E;X32d'kWA.?W[c"U)=C`BLU)K-Y!,S`W<KfK!`ol"SY];%sJ>m<`:]2r7soi^7aC@M.`%kDmp&dk<?)a1\fcGa3V'jkP^=-B-NhPB-)I\CemY4"9>&SerB.Hfss)'AIH/CAup"`29Qs,sJtgVo7+%MOZbb=(,\Q^0"S!H%0<!%IH"]\GOHC.@di738ND"!]'8jJ@NY=S?X.!^X>qAVaV+?n(4aMdq$oriE'<=>;3mnuppbu)+AMoNBSI9fT%hFgFu`]3P@;>[\p%&X%Arp1T]aZRZm-F-2!.[RcHUdDZ8HGEfpMoY4DO,YdpJ(d7n4pcUaK?MfHRAuAjDA%P5b?DPF(siA2rZTghN6poGS@U\A-MG?3>iJ!%(c$k:iSI-,*lVnX9(u'fn/11p"F7"#\9Ffd]4S0/?*/XYq;eT,kOo=B<Aa$O(+7&'GkN`&&;PKCZVotgmA?dIT#E\ur7BWmhS&M1%^dC4Bb_6H'!7-,JbY$1N]r+esmc5;1d#)^1*CB&4Lt+RKQ-l5*bFRe``<`;86-HkWda/&e?5u5qUeYo!L)/V)QFb/6[!/m5-^-K>%Vrs@rVtZKZM="@L\9K1Ib5bTs85)<./\jS8(rD-Un]XIH+='#R(_SQQCb-!6og8Q1@PN#uK$4JaGOY`7Bo]f24tbc`HqO,a%U(_?%<X.mfp;!ibHX+T8_g#BPqia0#hsaNGLFVJn!)9F%4jS'f9E$g8WRa(a^Q-orQ+h0KYYK(^Od5p"X7.b#C/:p`ddeF63uZ\\!2RQ1%*XdoIml"FbjKN#_CTG4P2:hf1QQk!"Wm_][rN*-`;h&#PheA+BelKL?Z&3[0*&<)Hl\eK"D2M33N_'kGYOD,i-th5@m?sA.-'>RR%qT>PTRpA46@Fg?X_n(6Z>0N3V>!CWCUNkG0;pC\<H\M2@>aue!hr,1bO@8mbCE9al.WcjLA^SGA-Z]S&>@6CcR_9jtJH:#rZeT@,%+Gm>iC*JMS-3q:j.d?TbR:C8WbFY.a$8M.!%e$V`/Lop3[LW:on9XudZ:11Cf8m1RR,W4l\t?$*ro7l@[[VJ4KZ1NJ5"Z4U)SB?X%UA?eV=D3,KT,p]`0S;D#*r%XiTRh>Mgo15I>?h^j(V>_""V!2KD#k"p(BKaXn;5g%/=n#d4')25]pVK:Uq1N0n>NK*qRil=<cskh%2]keU1@?RLEUoP5rho$e*.nOoQYX9VieoG!+)/EHook.'rDW,_1!60_XYoh9oh;-@ilH`u;EnQ?*UEC=eENQeSu4FCqmRVFT-6`T%X(]6DPQn;;@U;9oi?9K6^r@rcL`'5YV0=s7.siAAFX/1EY;OV#_4KA!JkhaF@j;JQ\?TE7>3Ff&[>m::=N)nR\iXWb)1sA2^W-[L%L=a;+>e0YF9MD'IN7nCCo2ETk=n,Q,5416oSE2>Q4BJ.O4J&QZlh(pm,P\d-U;t=')JupqI`5j?ipp[dD[*$V6s!#%IeNI.Wt^sK%9XT[H<DO^m#Z1mObQ^L8ko@ZKR-Jej/[7'N:4*o1d;lQLa7CepN>G8J4MDBAb:$Uc,%PXNs)fCY]F9\c"!H`%p[4umec8IY_\%6t%7r]>XC"Pc=in9:BH>SpBfUXk`C'%).DXfNpZ"[K<T=9NK(p5-2WZXCR;68rGh2PFaV+<TuG^=N)AES3YJL(c>Uh$-%OI\?Kn*Csi%,^[u(,1p0KD)?S;/9'>C7b&IM"(KO"-<o=gWe&N9n[^j,j4V1tC!,+OYiuYLYq"uh<]+%]4L2>nRrGFN$KSD%>qD%$-dIWIRPc_I%0%M@3rdr-rh4FK6qk@a`0;_II?UuI9aNodXY-upfc\qJ43q%E%/AaHjH*J14cE"2[+8(K?QV-fWE[#Y'Io2g:=GKN>A58r+ATlR4%-+6_VT&*QOSn@R<HMduKe#Pf^(@Aa<lPM.Z%pPVQl-u<;Z;s8Cr3iS;ngTF0j+A=4d.qP/mJ>FX#7jN'XFt_Wg[gcd&^4A_0NlNN%0YI`q[d`e[o@8P(@A1WV\<rL`*Xn^G!ipW/(S/f1?btqMW:ukI-1k*;K"0P5oQll\_CXp:cTP]3Ou`FM$.(ENTtUI=d!7FkOYuP'%"._Bg*-`8+FQU@2"?LIU3UeZ)^*+>eb3L\/93#XYj\7uf;6jS/1ci9d\(<(8Io)N-<&a1RFP[FIYhm?W5j-BG#P40d!'9];C(H]L%k@"22"CM3M;Ht9?GO(dE`d9g4EA_Z_hg<9\fgodEWJI#(Dssj&o4Q1JJ%;!_#Q3k"LHB1ZJIk$7"++ds^")-cX6tZ\[:_umaP,<1%f2&3V=4om=pQMTrGekO!cVDV-/3Bf&8i'Q)YV:X&_;"n-&N)LJ\,7Oo=Sj>B4m8t$\qO`Q"aspim3p,FhW9&)>)f6_I?)D+jg'TW%'J8_"M(dG^GX5-/Zp5FGpIk8T9&m&86i!Qu["UdjAE%]J`\5$DSmD+Af/5R2kRp\)>*pYF-[m];r9qXk4Y[=+@sN!J:3170ku>q1%&2$$uh[a@@8`d2K)IUNBO=T(X1WEFA%=m[5qD*!Fm@C,5/%WE9)"[#m``7CEJNrS:M^pg5Jpt$Vq*j>D%iu[L/,=>\PKCIXLTG_=%gQes"Y6HEL".\.OP>u:&?goFa3CHKYc>W.O:H+aLbb9jC#lH^]@1Mk\./Z+(@88;1?q>dmdFWh$Vi(4N/[O.4h.)]O3dA_odCT<W%S(ER@k\IEm#nqk*n[>M&*TdLUlI-*Aj@-C%UC$mMcC87ffOQ(s1K\Y%!FX4*l\^T0$$/esdFT*L)[,<E)aB+YcG<C[#PWm3<24f9%Q%2O^-a"#dI/PmL-(sS%^+dSrqrPn6nCI((,W%X#$d2QI`Jno1(Zt)\O*`7FL+IPoF\1^Ze'=XcQ%RV*(V91&\^.#!V\o`$akDWr%I85*cgh6#1QgjY46=X^5R<'FuEI?T#*:WmRFIT`ImG;/[[X@WZ0;?!kMr_j8P>08W\6N1RA?DkmBoX3I[N5'65YQQ;"U1j<S:9*8%$bBC@io8h_kJ^]bk2CF`/;_A8fb2Ha!P))Goso1$PdL4LE/kW?!fr6&3r1(T21TaEIodr\V*T=Rn`(-2Wq<P_&k)9AFO-g4ig,A]%r)ONZ[fS8ZT8IkI5>fOdJEU,Fq$h]Ni7IIF+.gaFIBUaF-Z`QM3Tbn5]&ifMhF*j/Cq?kl5dc1M2([MTG)0tG^BDto/P;2lJP;4I%-M7bY/7T:*i;5PDl?eYEiXuj(!M8`NCl]7/A7K'5dG@`k(NS9BOXt5IeG`[?'1_IVI!>^kWnBu-krgOs:hFh^!F3X&ZP-uN`U+B)%/V]$7f5Vb`U1!pmph6<.M!=']'L#DUX\`FsHjr%"Pb?G&)XC/J(pSKMAMIM41;g3$k2Vnl@ro:_a`UbNT8h-in!ej@NZ.bN<",h"%e3QoW*r:rK!E#u+&X7tlj`ZtVoQXY(B"#KN0CRWq%3Cd&Bi2E081O8UL+n.AMPuS<0B=UX[`+i8bI<h-mc**nrlK-Sa<a1\^s,It%"`AXXi-n&T<.Yrc!L*"giqGAl@mG=t$4.@\;CtNh00il;X%>2iUUBm/D&]nO8&B9\]tgN3`$c7cs6W<C&R!HSbRRT`Z7/!LT.V'<%Q"sdY:94Hec-9^B[_k_Dqiti^ED/h-AmV<t>[eY<5qT:lm)IO`+MoirJBZ0O;U4?!*rP8o\NLdIK7.n!!^q=C,eZP%B3^BAc0Wpk%;s!!&5;o\&Pet@JICHom52'^eOi(3P:4d8S*Gbm+p#9m-ADlDn(>,mB5PJB:khBe9"=]mj0CZ=DV%-Y3p]f5",,qElm>mq>5*^Y^%F)BH`e(,L+@Z+oD@<h,(%S4<;$_9g]\qEq\c'q-A8hW;g[Kl8FlHQ10>UDFr#['(s;W&Lh&/6""l7(";H)M*0J%%Oe`a:RuN$>t8%K%EQG>p&Y`:!>5^IeQ[O/pgDS?Eaq%,.XPE)$Af(]"(t&4[;qHp"'G"M81V<rIijVM)XYr<2P(rMR(0-Q\S()5'YETmf34.I[A2b%V'l^tQmA2ZmN7Y?.F<W`%92?\H2shl0'^c>2OOiM]f79l5mMG)r95;7-eGDD6!]8kad\jIrLQGlWBB"kI[aBWbjH.9Kr>eBN"iQq%o;G!c7d=q-AWg<:Her8sQ4_oM&(@hTn>Vi^:MT5rBC''H?4k"L3itYKoBZ,"_a?$DPX>+[!]Hg_/ob];Nad=ZgJ*-CjK5,h3%lo2%WLrR\U\%^mT'eG:msDC`nbR\9mW\hL.kY>/I<3h+h:8d.g.UaD(K2Miak3)PWXN:u^%,^IeXj\$PJ\L6(jk.-p!T$Cj0A>><)6Pf%Yk[($W;c4bfJdQ+HN.:"'B<=$<AGIG+!"05<f<BErPf2'^Or&(ER.m=B$WEse[dO#Bgh3BjN^N#"!,_,%db"fSmV(FSn31$gksn?%ii(AS!:F[Fao)Z,ZTDB7)Sf^,/K"&XPs&)"O0gC%=p#<XILQEF_hD1h$@(ZAY>(12][>='e)g^XUZXn:LMcg2ZDKXJj;Q)Sa=Xge%qKue,$4*=O^/J]QRLu(lSARt$FZa=qqqkMT<H+Ff0&SU%!JtqZa'ZTQ`0,P&bbC>!">Y7AZO#UKBP>4d'u[_G;u&NP:_KcsHu)h[%Q?FeKA(A)<o%1)&@"Rhd'LX7:2'1s99\[d-oYYJgq15qLB'5p2C8L!H,T[=XF?m\k592t\e=rSdXlK_pH]X^@o1A1l\Q2Dd:@3>;%;l1YTXg0<.KmO@"m<UW&_OD;bJ0KP&ppe@9=Mp_Z$=slY"=$K0RKZnGj[f;6(Sh>n>-AK/*3n5OYqYO\i1DOt\BfL_c9SD4Pf+Hr%6Bf[9:,PU)GC>YShYc>T2WJ%r`(a#.K#gY^s!6A(mHdf![aW!VkR=Y2B?r>(rj1_tJ*jta>Q=;[4Qj@s<&bK&R_RXm($<u>]5,HG%FJc5%`Hk*YrH"rK/p>>1=Fsi5b)=$[5C=XKA1>fN/!4?f\-,J]^I!Fl7D--MBkPN2ZsS.pb33/DELaQZX5u*QYNCEVc`_C2O6-L)%fNX5^\8`_NJ*=o@EWI)adu@nr@<l[p<BZtHMM&N*c/IE`r)E;!Rda]+`gUaNjh%Fc._0(%[hcnhm;K&R#?t'GrH(D]E[B0#E]c/s%n*kPqY4[56EORj@[-pBar"t[^o!Z=^p=/Kj<#kpT,W32CKJ7@W&/[c9;eS'?UPt.C;Ck;qU]3TV-^gBeX0?P=%Pd5U>5[^mUBtc-%IhD=RQ1;_B4Mm7K!"<3U+u],W"\o35H)+nur($[(;PP4VP*,9!PTX5"rde7#/[*6!5f`)l=Y%KZ5)(5_^^(aG`.9_SXa`4r55aZL%dYWGoZ1o6.8bBc>RqKM$="/-cTB;EqY3!?b+AQP\6C9@^3,TEOJ<+(i<a2WrIk?g^QDcnPE8m`9[2k/U:tC5Vrr/P/0g?*BG[NU\%]Xm]^GQ"cAE-l['B=p&Z2cd&a0Xg`=l>PkEqKho45G),/0;!`$s*5NT*O"$Y2cj#][rm,ppZd(;,V1]8k2HZ.8uZ7nE\<6ZA*\KO%r2]^7BApMrh)\Y3HNL)5GQ2*o6[*?%=1kV.@PmX(=5ods\XDkq#sTIRB$DdpOUP\H7PB.*>sC0;gVltS?g35`$I=K?]?:RlPO5Q5%l^_5PnRd7DGjA;\3c$DHQs4#cV31d@oso@\En>%JSJBIBbU_'L@NuSH$$oT-.Je<DKMQb@Q_3/SEolTY(O2?TXkZ;pW9-_J=q/5N%bn[]PCu?"Di"&JkEo"IPPs4SZF+o)c+0sa$?53,N:8mHPF*\aEio!!-PD92k/j]ki),8*f>u:e<ki;"<)XZ@dr4)19-=@3F7Jh3r%;;J6C>P.Lo5eup5o>:"G6;dPM&T4iC'S)h^ji*Lb!YCT%Z+.mg0Hg<qPT6ej"D."eRjI/$V.]FO@r;m4^4a\oq!mN'r3/Q&Yrp,-%*.6PA'blUH8gYI(gEE\*LebjsI\@/X:^dIL;`8&u\%p?XfRWLE$2D$N"A05?D!T.XDBViL`PeBC[j@1l[[p1:R<I_!MZ+D,&UBJu%IoJiNP/dFK*+=bfOfVRe(n9mAVQY2J.p!+h#\`S2LjsVo,+3`Ume!8bYCgmd!=]B_?#0k4+HbBs?<&0epj:m"K4uVBIiU8C`\($]%@^s9`XY.odkcZLlRZL2>CSr_V"P0l2O8BN,r,lO=J"89)oe09dqs2C*nAIoD4r)`6m*i^@q(BF2HNW65-lE,.e0BVnrkVI18F:-+%&pJXN=lnnd_Si)bq!4G=IpF@.k>Fc]Spi_h[pP*7IJVA@j;7"W0BE_:3bP'3"\uk/#2`Ti/u$KLp/3X$-ub*W&Vj#D8/GX*m?aY#%]Z%p^B@IOj\^Hh.2@.:*qmlXEiJa"jca-h(:qIiCQZdHGgUkF0q9SanPbhgJ0\5[j*4Y"eq*1*a#7*.+S?/+c\[,b#3O&J2i]iZn%`E6;q]rjuNK>/UbcDPHg@prJkO]<$*@1]bGDtfkp*+O0:ClteqEk*LA;n9L7"'W4&eL,E9JuY&SV(D[F2&c%S`#,=67S^:)!`q4X%\dh9NE\H!?K<?p4)eJRn`V\bjX)I[p"H)irUVZsRMBYsh^qieIR_%Sj_ZlLf]j,"%V&beAgBHiqM6q\9\KT+B<mC&3VP5-aPUin;%La"ZP>km*gZE>PSZlU8(/uMZB5mMVrf=o[c7#]*ISE,22IJ<9(p\ZITi+u<2'9so90=Ljgp?&^*<BK9B9#-b,b:O^,$Z+u4'=%7]%q"q]>O?M5o)fYh#Vua#TK=u;i2"=^*O^p2n8dcEuS5*Q8ZB#kG=?ble6I:m^hjsctaR=S+.+54nMUd3Qbrf0cpt!c(Z](sdS;n\F%g=O2%CntMFI\>bfXhXKqIV.j./t"duc38u0S=f\l6_:.QB6`&+1%*R&ihs?!]aYtF#Q3OGRi"2s-J)fnpU?%E66Fnl%ug\`A:=;A%S^(J6m!JotF-^5kX<N(g&TXrMNFqN;-a4mkV=SpgL%CPH:A=:6O3)("V*jET1^,`uR=_]c_W6+4/=H^>RS3dCk>sDF,/[\[6L4/_%49aWl.<n&1N2L&JR0"PP8cq`g("/5.E5&]Y9u61kS-%AX/m/gUK!EE6-=Mb55"b6]jO`B_kT3ehr7i6A%k*eHlQV_Khu"cJJNkr5%&hZ+-p#:U<@?cXho:'SQ,=)F+L:4W!KcBnHdB`j/?fcRl@@Lq[>:c`%het`8FicI[raEA4QIeqN&fTuA/,M4*ZFrBaCJY+T_HL^V%'8GE8)OLe79sGDXfIN>Hq"")_WF2)2PqQLV];*iu0ir*!Lbn:J1m.:hYS(P;j\*"<6!%PcjiVBAEpr=h82l\#Aae/ORf2n,C7pYt%W>Y8ga*]lU;p>`dQ1-DSRn3=[cW'U:H)e6Y\uj9p;%j1aFNT!JHramh&WcYD3))=KO7de!]ZO`fSQWd=q-H0AkZ5eQ4D&&aR)f':%7S<BfRR-L*Nt(b#$'4c?o+uX&hi#MZ*lC5]3B,dj[On!,O!f5eKg@#WU653!9uME>j;;uu4NpJ5<3CV2,E*POd%;su(0lR&CZGP8%*3^1>,@-HNIh\fjP)i7_lg'ED/'=&,nOKUX&UtL-3g,P'n2C)5=l8a>5.rr)9g7Qc;+F[:7oi=/Q_@\jead%b;8XKdnnNE:.gP0'%[.;'(hoqET%KMmI=6'Dt\%j6qp>2:6Xeo4$Lr,*+g1lMQip)R_g1lMQ;D08S[[L[-@j@&CRUWDOb@mZQrOd)`5L&NSY1b&"<."Wa%Jc4I3m/KO_s1aN.cG?Ye@I1B"k=Q2hN_N9c2kR:GT'qfW4`+H]h#:G@s0(aD0fCZ`Zf"(Gf+5n>&&u0G_?Uml?,%5G+kgq%+(,%(%ArYEsA!<h@qSQ7tp@@JAn"93,ru.NKYP(2_n#`t:B?.snVsqLWp^@SQ3X'9n.?EHD;]+XG2?Wuoru_$Vp"2(ucR'(_B$?EjJ`$G7%5-2UC5N/[C(h_FpVt$NlC]"O3gDMM_405rXA_EBmI+JnK4`C8mQkqISj,X,s?3#Id.=6J=%t5<^.c?\;`iKMg64<h>%W+;7r:/l'%%`;a0/?@cjs2U$"q:oH[^Qft2BW.3_f=kJJQ4jIolZ;L)Z3TOe'aNq>kE^&>9Ko$CgAJ>D<ZL=U3t?<_O1XuIbh'k4D6MqZ@HcCQ%+,#qmMha+G)P71>X8#_AfU6Z;cbb_X?Og*8D&seZ'gE*omc")KBRK&_NR'YO;[MA>I+Jh_d$BTQq:>I[kZ,K1qII@/DiN)S5u7kD%bF/1WpoJ!g_-Z9sm_Os=mp0%P&>&&.ZWL"8PE0@k2a3gA/,=G`Hdh!m`Y)'[^G\6Fi@OM<p1r-pP0(Wed0J\Ce%?u^R/,J.E/(pA%_qD5Q&#Zs25+MH&oPfPu`5C939b0b"9M./U8RYC?!hjK5KjfsB0c^PKJj:p7Vt8ft.t=_)s&4=Er:KaB^S9&%]Sb%cs#f,/hqakg%hYt'Ze07m_N02i()Y:s]o&KUS?dTf3]XK&2i:#NTrU)g.n(r]omQGg`hLkjr4Tt616hp(4YZGX[XU>8h=\s8t`WBHQ>ja9V,V0=T%ETU=h(<.Q>7QI*7+h8[!Ja\;q%3kTXB^CTq1>d6W3t*)V9>^h/@U$QbLKqo?Ui7lS]-2rJkn1CVKC_4N//6Z#&MQWTO'dnjN>L;4%Ns%MlKO3l;RKhlo!j?'ae@/ZmD;t"m`<ouuY/ad"HHB(;5nNn,j]XJplm5)1Z\ei`i\M>W<H)TH;2)JRmh5aJi:8=m#[opTV#q)p%0Ab@UA'Jl^MWJ!7mk?a&idKY0[i@>WBuOD'L"S.K@P)tog9?tQ@gG2dK,-`[0@\##<'o>[=S,.=if_kG$uO#l3%-:pTXc:2n,p_o%+`\..:UVWq6gd"Z,m'RmfQ(dLXZB=pce>J:C5.;t)u7d\![KrGoAC`#@kdeOjZAV+X\.fnXAHYk=pqilg!#SK5SP-_!X5oXAHf=\%!$aDk*eWj1bJ=5"EQ<-q3C!Yl%X^@d`s?nk5SJ\`nIAC*Y+&*:L[>34*le.F2h%]$Itm*GL14r9jbOuM/Jd'U?n0'^BUfF6S*`5M%j5JLUqLWneO'0iF![MReD]ZD>KPc>.d]Ti`i;s8@cD*kGMJ"r"d<Nak)aV7ShM1k#TE--HJf_Ft:7/bO5(!UZ?qV@M_A`^7kAk>N%,B/oNOMY)Vf>LEL_^u(6)tfD'aq1.b\2'3U@tth;450kooGeP1,<LVUg`*^6TL-]a]30^*Ci4Tc'Vn:Y!^cW%QSFjLU2](2XWKVV%^k)ne4YTO9&V1/[3:f8;25q=[_lUY03Bi,5a+Y,XY2]L$Ljh=b@)A*Y`G_ImQktO!i!rh)p]*3\+Q#u-O/7i%_,^^_(IgbJ;<Ykt%oV9fEK_Ct!#!N._LYf[WDB7K>@5@'VZH=EA=4sO&_@"L3E/WKh=Z$DridsJZfV'NI?Wn0G^F<A3o/lNE:6AT"G698]_.XIr%1?%@%_Pgr^C4H@')?UZRZ\e@O5mkqYI>4(B75L$o6SQ2u!4'oE,h$C-,4mB*e>l[WdY.I3_X@scB.-p<!!NcF)(:TDiFm/-V.Gr>";U;c%JJ<8u!J1j?%s*Cdog!5DW3[K\X[AR+!#.]mYY@\,H*Dple/Nb"5Z.JF!d\42AEj>i!GiPZk+jmtfOU<:HD48A^VI.=H-K/jNb)pP%_]+4Jo.4I[5&*]<5Gi-gHe(HGg9Vsh8W*o"Dd$[fPhX"9Y*<]+7KM?+fa,,6S*8)9/ZU'==nK>GY4t);=R.3F@C%eFmJ,ZF)iWo@%0`oGJUc0!URB;pSJOpP^'J>clG<o73\g.La.KBrP$bAicDVTmF$=UZ>#^_.Y#.Y1&5<qE!Rh46%&)A@+="\/(=IXO9I6^ep$5^iB%c'1DJ</(!$'UQ`d+AqOQ%Dta$V-<tC"`f,b?P\V(L(30C-lc%o(?fF=Jh.-dc1765U\^/PGQ;]8cusDLON*%Ln5sLkKEqX1^Bj!.%1_"c\o.84MnfB30cbVM1-nN`D&^Q>@@'sAR>\l,oRii-,$YZ-C7@pnlAJ:fljIk<G>$58E$CqD)kGN$%/(lhb^Mn#;88NPN#gi\Z%K;J6K,([L_9S=8ie6)lK([0#&h?C>+BPU,2.JOq7alZ>8!>_>90'k6'_7PO>365rk/lkWXD41RT'S=eU4u0O?o3ukgBoYs'96sBE%B-Y$hdPLaJhRjh9s5GXam"&8I3p&Bbj=F#+-Z]Z_ZnDkd^gne3W^0>4'ueF6&@=u:4,U;3'%ZiiCBY#Jb\1N#79UpKBFGg47&*t(%8DuOb3<G)b!ndVF(\Tbm0te!N?0k-k#8Gt`2:DV@3(P8@Uk;Ltgl4`)9prrX>j,tX;4p$HHD#k/dcbR@Z[ej(;01#FgA%VP5m.<k%.%p_pXpZSH/a_,J;U;S'61&<!Z>(ITU^F1l![nLm5>)+%'<:YY1iA#"R^5PN"Z.:?@Jn=a0/8J$^e!2GH`3=iAJ%8f42H4G*89oC%]E!Jf4jCi3RK1Q0-FFH!P8u'UMd,[F!-#tk!^gPU#d>#1BWa6HSt0Ib0FBqFGS2d60_@k'+9l-V6kTbPa!1iu5;RE,,pAd0)ZYSe%>)kRRn0mKg'!!1`!LjCs(]7RE6(knBj7rH\F6QtDR$O)m_[KW_RRIo[?f@6CgX'M:(emQ[EB@$(L6m%)Bk*SeTFhUV9p<k-KFnM+%!=BVG-5^?WUgT"`6a2bk\\eGV1KE.:+1N>"l\&$WY*$;gAUrYOGF[;$^99jGUsRn+Lth;b@=SC\)d2it!-Si\!FSr*qr=]l\89,6%"U`M(QR-T#?HT[;TeSfH'9*KuOTNmi%t&$.deJ0^8j&;nB;j#PACkDC"FL;r.<.L]<=Os^F[2AaFG;-#K9:jeL%I-S5qrFpgP:C5%e96Cs,*7q8?]\hAg\No>Ln+WEY/5f/AnN0\SYNDl<\YL@15[e\K:HJ'3g2J-6gpMAED^;"cuidEBYOWQl@rhJ^d\FY%*q>I)(6KL%Ta@24[IIMW(=J6q-itcLAcq:<_g)EU(44h5&nqsh#ulbKr`r&EgX?%fkr)@\qM?j7pU:V/h^+[V'@1eZ6Poh"gCGQ\&A0W__m,sM%-4IhY/`Edm]:,?#VVM\]+'=iG7N\8biQBLa[s42c]u:jQQ$BAdN5fshWKC=l:2InoDd[k;,EA,+(;mT>^bl!<6pE_l@09a/S_FDL%RV5Ci2pfGP#5eib!S26Tr#;XUBuIc[mPW>Kh[m5^l<hcph^h23s/'I'gH7h*>RSQ"j9!BZJ^#33R)3IS:!Q#sfrbag+GHA<VB?Mg%J<?*I[Kb"_;dg2SF3o8A;0jEr_F!9[&YI`>C'Ao#c*Yr.L"Qj9J>Ni^psBR6l.8PpF9%Q!L4-?h*Ct"6KgbfN[Q75=(2+==[FI&I%L97&E0l;%89kp^RLA&M18sWmD([VDYC7Ad:(ZTY(6cQ7M&W7<<Vqp1.NT97]N6s_QVD2rJQV?5OBG-(Y-m42r8`0iPF_(07B[Sk-%Vr=k34Fp0C.uX<dT].Y'OeA[qkQu(6M@R+'0SrjJItm>)[g-[W>c%Y>-s__HMMO)GS8>tZn2`+bL;P=6<(3OM,WoljY&7eFh#`f[%cN6Tm+]8mH3CCT5#uZLqL'DGo98s2)0OUtEg.sE-TJLHQ#;Xqk'V5O<l*qq+#MY/j\q_5;`,]^>R=loGh(`/.R2\Z;V%6hWZf:36%d#gcN`W6\meH7K06Qu*^SWDM@-@pkUR\)ck%MWCi)$fY)Z?R5olj!ZLjX&208`R'X/>KlikcFihen,BQY"k+>$Qr0T'gS2PXC:l)%\0s8,0sf,+bphurraL%[$FuJ'MgGjH_fA\':kBuIV``#iIGr3**3=cX's`WA_3tLBQ3lR`-u9GS((V[XF=W[:J]$Be3C<+cFL>O4%'"O(<L0WCB2MP.q@%rL0CKVO\NtdSM95tl(lCU=r;7?\ALTf!)RR/\aN4]\GSWUns^=%*hL5',e&QV[G^OkV^8<2E9!q35e;m>(G%&ck&OBi/I-OI]@%h?4]padtbKa4,2GjCY:WM%#*j'/&K^>Iq"3Xak"a!&m:/`\fA>D$cm)!1ANV0Q=s"T"]\Gq8(eg_?gkg__XPP%dVUL^OeHB]i24o5!V,L\$EM%0!DSp!GsgpCP2>gXI`a6Q@4$TkpVAHCklT^7V5Y#ck"l-u(Dt8+1>m],W6Q5p%G22?(iNA!E"n^r%M(bPd@2(h"Q3Bj%<sT?/i&FVJ4%nph-+ohC&H1hi-;AP?QJHtdT(F%^Dlc`NQGR4A%]"(q!U+@Y'IJltVn:Gtl8@lLQisoua9a:t%\YEt8A6.TEnr7-cFJBD2oM\#a>R#'dg,>r_Ck*W]!L_+3^^^MXa'5A</.ML2(!QL#@?I`L9Ub#p9B)$EFWK^aUi!+XBq`Og6-Mer%Lt!3a9>W@G298Oa#@4BbM@Z1;V')J("F,/+Nc$O_a'0PeMX;q0_r1J_:#uTen:7uXH7L[1`ZtL53?1';>W:TGDTb?JSO/.c+9`)"%Xk4?m6:8a#am]@<$R:I&OusJ#aS<GG*ro&X\0FEhqV*mA:%Nmf/fhnNHC7DY#N-jF`j1]n*4pe8bni>K`$KqHi)!eIXalE:3#JuU%V2>BhZW!9ATV):u#4ePn[UNa($\F<CaT)Lc!8I*6W-b$p(r*EjgCOSWTY,e5,B6$;B!>He062(p(gSDd&!j%%Q#)QR+<uL%bQKt5%P;<DP!GmG[;E++W`b/M<IgpjYL6^hk&FDG'5liFA4BR\N2IlS&fVm0,mJAZpN`-:S%C7)Z9Rm1P<&.-L/GN.%9&69LlqF'-9*9PC%,>`Q/Afs'ug;_7INgJk'oV<TR#99NFFIZ4#.Bt[N1C'pa'%[;up-YO8767=bG,Ic'>b*d-GL7#"k^8/+&:m1;(Zc<VY%eLMHeI]]%@V/o5Edp-;@ApEAD/0FXaQB]eD,=A/K[fBGek0irgW:A#"r]r(i30SX>jS7e(F`U3>r!+g%rM8$1j=NU,aofdHl.3^D=0J>Q*c87%D86,RO_W"J*)HdR1gDB*+G$T)[)>cBJ0VcY]G3iP>S[,\7Asbf!!S-Q;r+5udbYiD%45J/IPS//0MNrHs,_\Bge74bLdDgf2QB6D%835-+j(^)&@M.@XaUKL%_+"J<kKqR1hZ^qdQiJ$0?.Tq<Zt0W46]uJ[!@,H<`XO.%LfVk)60+[@$5f28hkDr5II/SVQXNs8GZIb7%5Q_!K8s6F!aiIDE,*2jbCA^,+`Nmj3r&C^9HP7Ij4i`IS<6%]^:Buq7!"BSjg([^#,/ZYs%f.W)PJTkN#^N86Fr:X>e4\8`/HeB_%FH\!T.DS6HLVegs$A=%$:83'U"0.`];f#3@F"+XGU_0:>77*nT&`Xa4R_+^!12NHp%EMQ\`YCL,Bcq0=*D[X28AWgo6-km86/X(#%+tP*5@'LE0$Ro&"LD3lWTo,<JL$2#?>8\>&Ou2-1lm[QVCsWOkb&Gs+U#?`=#gUd>!90"He#W=c_(=*3g[?[&k]8,:gi&p,@D*A%%`Bbk1Lko0kZ':pm+t",p8lOYPGq%?pRc]WD["+%=-eR:\9@,M!T[;J5l$!nQJMi@E>7hW\H7L\=TNkGp?dI1%P6+d=-_N4h!8Y.#%$@+5cQ"gFMI+?2fQCapV1G2&l5jcNd)`'b="\Q'@RZibDbQ*><bG$tUE`O>N!T4NJDV`?BTE-8E,[d,RjJ$/<::q\0G87?<Mg)F)%S7W!TM[=')Z9TWB2[%QZDGh_$0P.Djo2.")`C3(n;XeMla2-dGM+Krd2U.1H`R:9nR+UZ&hJ$@1:PgENP]Wu\9HJ0"N`TAGUM/6?%RthPDnW3aL$\AXFP/KVXWG6P^SSgsK)c=D`,mV64c(&B7gr#Kmc$eiW(&1+@-mJuD:C>7/gJQ`K6fEXR:H><^1`hJ9+@5Q.g!,s3%MY:tO%7u^L4jZ[/Bpi[f(NEQ!n,s290X;>4JTK.F8e[E*YJf:[BQ<ZL0L+lm"r;`WNDV)adK;_=Rc4"Vp,2/!jj6dp$'RU2[BqNW%FlrjX5,UU,I3a+;['Q:P@5+"U:>L"iJtIoDhO/)"Y6RsYb+Y^!)nS4rfp7%tfPZR4Sfn\5!I_'UK']k;qXm,oH?#+=YIPm>^suLG%.m/A0K\,ab3!]ptWqt+n6;RHr:%)2g@ZeoKTE*/1b;7Gl35E>@:,gS93_+t+i\scjECcf!+#>^B-87/@Rc[AdH;3L64(;?4OW&&%%6@WPimaL14!AU^D4fI2dA"+Z)P[JPkSHXXpd8\+,DBLN-Kh7h=hB2/O/'/ak>-NZ<Z'nUSTb*s8<s.W?<^<#P0?36[\4L,aT\H4%%?kc23G=fISBp9a^0(rQ&$nR4q!;pYI*9<e>WgQOp$9+GBBqS$A-%V;O/?grH6CjrVJA.HQ7m>.505:-1%Bl0e!F"2L\C@55<3_ph%pe@Z`AJ@;1X@?]46N[CDBf'.hq(7`P2#!qCI&cBYjAU<ZA1_VZl=k-++9Km!Ss3rRWt_++b6g)KdIo]B'T!S1:B[7CM0\&[Z3:_n%WDGa>Y+7lD@)W5/`#6?.$HjR,ZSYp22;p5O76q%:"DR;71'(KJ.UUH-7LYmB[NH+2L_KnpGSGgKA7D:?"*6.kf>X*t?mFSBH(K_e%>hpS0YVEs_8^JXYXFuop)&5W7\GQoJ>"\bo#$V/%E$GB:<4%f$Sh\4f-YgiJ8-(7*;]o\ZPPs0r:"n_`6u3Fe_Rmf<@;#f:Um`Dm%O[+He:@u91]sT\j+KNj#Ufi#$9*S-.B_567"C4/paXkYrf$d'InX[?0dVXZ*X(aCX:K`<2[6?6Hg]m\GTcr1H7>VpqHtW?_^PRPF%8`IG"f)QN4`XcT)JNDNOmhm4-JL%Ia_qIN:_%WJm.IS7)8R,a?Uei;1b`LuIqKgYU@>YPNBfcU=i@c`Z"StT]aLK7<'IF&hL5)GK%EUXCoa/;Lb%9.?H%2N)5.XE0gf`8^el*(6'F'N`Rpm!FmYYn^CjrU)(qU(]^6,mDN+OT#jZoC7.`3W#RAmO#?M'=i6\\F7N7Vl34%3rTO,?gT&\KaK2sSGcP^$rE6N>8ba*dY-m792e&-N%9]d;\)OZYPML8iYjGHF@@a91g$q*3H'bUiV9&j";[cT"i0bFLs8B%&89**%D62*]*:tKl$mGj$$\Z#nSBjV](["@L<!+AlGlq"lm'%b'aj3Gb4A.nj8Og(Q5j?Z^7V+A8.7\iQ_Q]jl2!Js$&2<cf/)gjOg@o'P%jJ#[RefWq4l+eX[ZEL>^@KAaL35#nOK'$#'BJ@7->#cj\V@>&F*<W5X-GVARLd^?JB,K_8qc;u]LDCa]K-`=s863Qg49qXt&p'`*%:lk>i:=cqB9'jKaEYqR&O$`n+g7Sf56`&ItFGcnhIcC!kOPXRgKV/`(VY??QMeK`Oj;WS7>MT`R0qq"+]ul,-.P8A>a:kma?&RBF%VKs$`"ce3)QlZjSoQ\OMc-O3"4c2G_.4X@6ig1HR7Ac^!9T"l[c:[a@0<#X&]jc^CGs`dNGKLQ?=/'Dq09IDMhE`SbQm%WFIT:)K%p53U9USpo^rhT_Mqpu<gmpA2=%9l!"=%TqXa80(F@O*rF'RYNp+`tLT;^)b]P9PC0=kkBA8u780OB-q57"6mADM*i?6n[(NO^Jb+%)%UhFKElM$P6bDNV4:t;#$3js'HMb8)C<rB+r>?KA-Ij6oQ3kO_,rs]851?P,NJA?U^DVX"5C(j/BAI[)2Z"`4IOLNBPLFn]hIC:%.Us<>pIY.9a\rR`Jc-'t*[Xc!k@&rFo41!]NlXI0VbbJW,pJCSGj(1i0S759h#*>RO#-&HM5(F:1eH13#EU'%+5X%=2)8_ea`*lG%X+8W=/1(j*?ruRC:a!fLi+'!K@k.Xh#So#`&n[IuW:*+46c*pG3b@^UNl75Oic;+q'd]V!#p;^a+;S"7&1#uObR@'"5MF:"g;.Sj%&%t[?F_SpJCWEEAOtjJ0%Z)G`#$<Fnh=4CQ&l')/_0A9P^IK.\"r9T[Z40W-B#jNd6.6BK,d4"hc_QDVHNp,^+CZ*H--Vif0I$:D%_u9sBG"+81MZ47p0Q)"-9tn:-\]M[5k+Z'#VHF$-rFcZAIfg5rBl$0?BT-(XM`7V6;(B'.[%\^GT>4j%=RM0<Qk7_B:rZB-SI9Vd%Lh3s1_1E@r80N5.aC<;SGTp%[JC#/L?]5tMLdN2)jhV@GOdTdXE7?I*UWLr'jO$5'JVh2K)G_\;&eXUg=Amp$n!7\#<6^M-16l?s%!-MhDS.q*CN(GjVjL;qc%^9u,i"4PQ\1H"76Rj^-O<G:p@tk7[`:Csh'TiNc/BU?j"Gq&NEN1m9X>\rmHjhQYq'qPXOTEh+!YGF0%%>Id#M$-2T?m&qB("k<4Dc\&QdYJd0Bc_4;Vtp^_L[`drYcBlO%%n688rtl,OX241C0=&?"%tS(KoUGP54:cMK&pk.f`u1tF;:S]%BV^LQ";-r!M%[J,6puX)QK1=nT1B##ZH[*lHmB$kqN"2,@7_#m[4-8K&-3RoPsUQ<<030$3&24W)hP3\Ts[F&S4$Eea5N5k:QhC"%)tp9_D!,5`+^!uZ/8-IH0Q@0J$)qkU-R,Xm"!!"IG[Ih1[>tq)6pCd@Y.cQ;&I&jal_"EIbZV9IY#7ZtRmU"rADhLU%Y+[iR7Ibg%DrHhjGf\m`[??:te[1CsnQs^FL'TT5I$m8Q(*Z`$<`3#gk+R%'EOcFVi^PP$h&:=5>R_pfGfU.A0lBJo1SCgbGb`?Nm:&8?/iT_"%Q_OK.,a(fKp]<?(3Xf,OFrWG0@KSj7NX?uh:9#fP9DepWmM^;G'GJ?_JKBt:$JJOL84EO`lr-`H(mqVR'ECe-:]tCi/Y8h:lG:OX%dK\^q]#OA'=R\'$:M*eW`<.M%Ucn2k)`LJDLq1l-37tT/.?\B1JkT*2?`"k!Q[nc]QT.W1=cf5ZD/C'@EpNRjeABm[;Mu6`;4t<!%PN@Bn,%=!J0<qr5i'(#caX7]48=C[COI3IoRL!2LBE^h&Mb"\NaHQmkO>^tVJg?<B-hmnQJ1$D&$aBmA4d87oB^<P5/#<80bY3P"%5\6\\&FJC1#0AnIOgmu;J0Xb-Qu34C!<oA#7;6tn;W0WjkV43c;.)^d!\-jG8.Ia,J]kF07a2OC[J0q=$1>>V5Z:(H?9"N0(Zpmc%,pMjZH%[@bd2+&NeeF7c!NW6I![t\m.)[T+"c`Umb6&B_iJ7adbH^S"/P8h`Z.*i*Sc_M*-pWuAbi`RFN?Mh&8<[F2+EB9_UrJ!V%BNXngD1!]2WF.p-7`>(=e5L*o_!"*0*>fZ)EA/HYDi?sb$2,'Zd;I(/;i9X6+>$C0$7V]2,8$VqU!<%b/<M:;Gkf>i`$#ht'@>'O%jWjO<OI[$k)F;6jMGm&t=^/\C_Ts@0B]plmc&da\$pu9W+AKKipqgF6HW33bO<hEp"'6)qR0;.nlH0T=P-Tm3Gj(DaR4I"M\fVN:%BQ;/7^ds&W03Cj')i3jFAHAOG9458o&0MDF!(QV;H6YOTJS6-FD2EK@k<B_;@[T&pi*cY'+)LBWcZ.+0VRm(p,br0%M%?515iam9%Yf,W=<D&YrDQ),],N3B!W`od#?kHg7"B&ZQGi1nC&u&q=8I7Xgg35db5h$U3RY<(=#?1o]ZjQL`Oh`<p;-K86+;CNLAQVOU7Xp.P%ek?nh++Z/$nQY8K!@,d*R$.-$Ne/Y%NDMud<<QE">cfE2_*Q<6K&r/-G!P0FFgF=0<ZGo3.j>GhXRo]L.8/)sXhA9<>n1<^7L*p-%Uaaso>7ar+<(R`08IMb'T&B)@o#ku/JqZT?+t`mjL)2EEW37G^UQpHtU`/IaY_l?0)Nd[Ij43$S`0VoUSYeqdT7@O`PsftP2(mIm%&4Vj_:q@oBI$1!8MO#54Rg#NqXt[k'\,%lM6:tbDcf<t59$O2jZO]]nE#4VGI`bt)m$&G(,sb/1fr9$$#")BYrHfKrda7`1Ch'c.%%7HS-Y3L6mKW/]mYW4k7N>2_AL;uR/=3%]M54o!_1Zqmt*isjl(l'9U%pO[7D?VO`"Yr`/\Am&>kBMc=QF;J[`V'uFYuL8p(^T->%R.PC6T2ALE0;_QIYD0a]d[i8`i=qDpYh:/c4?C*?nAt&QK:#7Eh=Vlt1OG\Q)gYAW_XkmM&#,DN<sk+TNr`1Udm0Ct[:S%^9G\6D%BpUX`c+mD##aRdd2"QW(:5"43;C%TkpKMe#V2;"+4KquThDTM2^/F)@(!MdA0ci"K.Keqg:;o?#j9f_9J5/@!0%W'U=mQX&U]YF#%SBR,Ph5&C3KnIcq)kH_b%Uaf5EAW2:5Wo5$LNnGF**(G302+5-m=ksTm)+d_)-<>ZfbDsm16ZCAA+YkPfF,kt#MMLp@Ee5nKICXQ%K3WgrbsX#38.h7,%)iIQSg/8'9T87HEd-fn1(4[]=9q%3[P^>NhpO)L'+#he$m<qVEgl30OPN)Cd<?b^FI/@J"IM<?,i-O--)l/Z%3Kknd4(1).(qhU)3,'Sq'uPDH=Xl_!,jl*"-ILU,5[^;@?n<GJ+q8YH!MK([PB+Bsq89G@J.O<aQ/4dN.I5_fi$:A@+\=MulBB.t%/1T1!]ag"#8-"HbBMk4WBSU:F0cs74W1PJmBHfa_KWCuk&eWE/i_)iVh$Jj0W[4#0je6d57oj5:8PMTp]omtAdR4.]!2-Qke$DRH%)[XG=eM33;ZQ9uL'(d)3Xi,7O.D\4*K1/ciq?].CEj[EYb(kLD`#+hR11Yn<2Bac?4<#WV&$.CVF\r0rLqmVA\0tCL6&3/["+U[h%;WuBpHXalsScM"NU<8NZl75:(YeN5RORhCQ'&V*n,p]aopOai?eN!pe\s,m#H:baR_G37=C=+J%Fj$W!b\<55e,E)U)>CT_@e/0b%D;*l<!]%Q','InYi;lrSK%4iqrP1;Zn3@]f;qf@]n.5uMiF+5Kq(V2TXKLV0!7STu_[;FM')*U&`pJ\N1^3i%G^p_(V&c-O1@B,B%HW\)1QF5#5c)\t[*^oi5#pPILYg\d&X-qAV]D,9elQcP\-5!_e(S>VSaUSgrIg52L!;EtDoTRu^N%=>n7&&1K&d1d78O`hjmfRNl%pFJe&R"afC%M!R&/J/_Y>[Y.37@tLN]n&t^WEpiP#t5O+)?#sM\hglHJ5K0Ua4qXd":t1]PpO9L_o^FQ[+Sl4n=DpVqGX@<3s_S9%'Hc-]<`CnI$84&/![iFfAUDkb991q+kkbT/H'I+FV#_2?,k+sT@#QAFE=,W4FP/Is8:QmA9c+t6j?a;1Qm\7+:I^;i!M^*+<:/2D%0sOg>OU'O#P_^-i8@giM8T$8UPF%rhjWJds'rB518;QqbJXd&L9E.V=L^MdL2Aa7FFsU6-J7e@^h()P9't>Gjr<gWhKHt_4`"cY^%\r5'5[DVZQ%Hr[Gi&Vh@n^\U5RD-C:.Bb8,KB,^7;S9<qZ&h+<]g[?9Bls4pH?eMY!"pBO0q',gmZU"sRGX3]!+k>(gV=`@4r-+i%jG0On0Mfr4JJlLj-?]Cb"2#o;+OuY8/!j%gX'h.DN)2NBrIO3$)=',m@-97ig.Q0,oPu?CJ[o?IHD4)(20A6HQH?qodfBl^2iM@c%Rjgo==V=QiW$XVGX5Nd8(`l,]_c//uIT&]LML<7M*MM4-FoLk>luZ<07D$2?M6cMVXYX@+bV^"Yd'+F9_`:b5*74)A?7H13TZ]Sd%Sd$t@'B8gQfKiD_$7#]HZu;(*fb3ZT2AaD8V#L`/5<'"_`Tocdo82eki[?Qu<$d#$0,8W7@N]If('sogY/6um8Sq7G)ZUQ8;2$i`%oQ4e+nXA3(c9'KGPb_4+n!WN*SUsa_GX<R%Hb,-Y848l1Y`KL!Ar)+-&l73%RNP!2"<*I/=JI?@#7</[aOg#IaYq`h_5o*LM/5IJ%6@LNMMgO:/2G/]*&"nO:A?J]?OiXn+Be\7WlZ#8`K;scM'XRL3D?=KN!WJs569Y^')0)Dq95j,]*-JZ"g)Q7M/r27p$((UDDQ#?D%oTOSGS,,\h#Xdqq"LL.q,9mh'eMIgDA9&X*Sq1eG#RNKT.^jl^=B65gkZ)E^:s_mo*g%s<EHiWuCA&Y>_l0nsLCh?K0gp0gHe>gp%=BKQ+&h$<Cc,T;+Z5.(-OD&@';-3!VX6lgs*^o6ektk76,YQIfYFSX+a=&-H4S,^$39,7.TOe2`jbQcmg_0(0p7.9UMeoJkZNGOX%+\tZ9F@uZ'LdP78\53r#7,E#r$jWMC\$`lO(X\?W7Abp+BU57lB..kL,t[j?M'tdAX=3!g6'N"i.AF,hnPG+_&;ff`7NBHI;i.Xj%SVtjt<cpQ#AJcbl",,&1lJLSuE\65P4[h;HJYMX21FAit5,P`?p,US&N1Pu`))JG]]COP)*[FlfOWb&?WJ^0F=CHApCQX[3C"8.`%>\U9:)+UQ$"/oqn;>qL72+NtX(Oukg7G\k1!MC2U:\2O*XE-B-IjmZ$EH[?,7=s"i&V^HRnAH6:G(]_uC<ZgN2/\9N.Lr-epmQ(h%5t]?-pV$@fnbkMQq+hi^*T5HQ+tX5JG)sp(LB1d#;3?g_H'(B.L9?>?NMBufX."i\DL33HKKUkdQ7kA_#t-!^=8,pd>Jd1c@!1G7%@H1akl*hiJO[D,;/7J[%GF/IG+!WM(Ll;[;`Bkr@7tcaud5g>$=X4Mfk!=cfHCkESiQ^q</jimSlC5i4",bDqh.3"e_fG)d`jm%E%1R@0h0`HZqHKe-Y\)^u"$7V!;YEgSA(!BAD4E1Vl$sP7iC72!8f&J%<0o;-rq"+t%;659o-&h2N@85Oe<(W/=/A)?Wi]cD'@>tg\%Lb#KkHfb?;c$de_i%ip'fGBj\!0tKt/66gb^?u@f'B'spJJAp`l7m6/0b,uG2@W)!bUkgi/=7?J^,HQB92'rKOiO5DFGIoe!+!['%"$O65A96*XY*:"t5%.R!+2/.oAP?TXGR^M:`heF7"1Rd>?Wh[lf%7tiGUX:S1EOMebmjK[dPJTWhU:X6LSfB>LR6A=?Ekr9gE-q\%m=^0ZHp94q3?Y/,/u/%Jo9c``GuD_r7sA4?$eAgGj&JI>D8<H^.K@gYiLj\2[q0[7/9gUsk"m,:+?aW]38N*Ni3hmV`f?H8T_"IC%ibRT/d4NGBEqJ!H-Ee%DIX4O*]SbL\"@?eS8,[@DaJlt<JZKFUbBpU,=$3mDK=N:'DQVQt@%)%$_Z9HcR0Cb:pLq[KKM'qX*b3'u%%'fQ<a'>@*_FocQRp3aGG>CNt`\@X]V'/WVYT@_<f"^s2(.5PIn0Bh9:F_gRKV]0Q!]/uQY\JBPRc#$Z%QaA>(Q1"ngrJ1_VQ7R-%3ZaPtmP/IlbkRhQ396,WNuDE5+1i32_L_i85#:_V9YpjZk-jQ827J6m6kh4b-DE#YPF"!6gik3T2V)>L+p[I>R"N0eV\tHbjP+dk%6*/&LA)\4S*YW<Do+Z/&o0t[SnK()+hVk4)[]nm2'>F@bbSNY_R2E*gdbuSFQor%"c:KX^2GSf>kh#Hp>J`&,3+ueC\;.%7M&%nm%V+7][r`Y6nf9N?gAet,W$@g*"bhO4F,8F]p1J4?/ip[+'7d54A.q.*Zfr<"KiKLE`3q\q[;2Za"-#4h7aP(7/be,_)L:MINb[hnH%igCV%76bNlUXS\Z&fNUsojp;K&h>;38i]uE^`A:q^jdCC,3J=?TM`(`\Ks(H!"hWU/i+).JO3K_fC(G5MeW74_&6`U%f45@e)47;%_1O$I'2-R)%N7/XPlVa,Ag#!iK!t<>ZQ>DL'#>BHCP%suJV+/dSXb3eNsQ76a-,/ja"D>XTE0C>ed^q"!Ebj=dUD:P^m\\h%Pojd%>u%'V0OnI58G@SO3m:9N#0fe%bkC:_9<?$imr+seUZaCQ95)\j'a0LH@\YrY\@BbR3L%Q'H\9O1R+)]CY^=Xhs/#,=G%F7.o?8S\%G??d+O9BoSpt8rcC-n$/_uKj`J9X"d<#9nMW9P.e7?DooZ0uo2aB4iG\bBclPUKP6ZLitBK=N"Oq^ncr`K?'\k3aQ]9Pro.c*ge7%;i*SGY485Co=lp;c<P6@pVeBFbiK%Mm25W[bSZ:#7diPOIg08V:(3'\3-\V$lV;cM]92=I?H-kIHSZ;5=GhE;<Ll@BFB$,t$:5!9%)^3UsgTlK8l/BoI"JZLUPMi'uG^Rg1]-@LW)4Shq%b[>66u?l)5S\;nqh>:PSa`J8@n)XZOW`)chI5h6R6U:.gOpLhF(k-rmP*KR%J*d^R3&Hs`bZu!lo=3XcmRT;oX!,9L8e(POQfO+;SHAeLC#.<Ucl\+!c/rLVS']E.V#t0aU6ge0c(1`,IA/.^f9`Yaf0kuj')p,:%'(\W1T@o)!H8e_7l-+F08R^B#k@'Ve/rcj%\tPJYj)A_V*geeW2d>'jNls&bR7nOaS8D]I72[r3l'M1T2\%LFGm3J=fOhKd#RQ!5%&,_jbB]A="i6KtC[N-gi->DD`?o>>N`oY",0kW?NiHZ*J,Hq-gGpVA)*RCi2grGPZZ=2d&oQ/Qh.[A=am)DGe%N/YDhu8QbKKJe8%`Var.a1N>o:W?Yi[&FPk6#^Bj6-pXTn:Yal2A+u/p*T0fF#>b-h=hq@CH^&CG9]s2Cj+@sZJZ+i);i0CK!1L4\+BU1d?Gb@+)/9T%ol&1Ka6lL.1?\UY'0uW09QTJ[)clcI$+Sb=-iD@R-0FiP(>.GFI;K>:*p;f6S9A8/r:2fra_rL+8&k7(hsGEr*Cj,IEL(@pBJ-;9%b[AT(Y.o7CX#MlsW7J\UYMRl2*1;3=g?q+a)P#i-IGI#Ggg[s=%!>(7IIMN1opa!e.rO@dhPGW!K!4ocH1;P1O=BTW3&5-'n')0:%Xq9c26#M*4VlJ.5XJO\0I8M<9Z=<.E$)__ue-h1ipI[lq4kl:7Y0hY;27oK`05i+WA]"-:nn&MLdWiI>>ToW*bOss\%:A7DICTI=%b?V5(n#CnWr^Qk6M'1B?##;o2SuHUE1HodtV_Ubl>e&A_K+7EP4Fr)CRLM0"NrN7tlRb7fmJpWq)VFe,TaH/`aicXs2LBOje(;3-%_Ki[u>+U>!p+_!Wd`Q[4qV%cWIf?1]cco#CkM+`t/hLue)OA*%)%"@Fg-Ef/(64<t@G]pQG9e/poZ7&Y)^OCOSFFfCNL''<:3=G1%HRJ*ScO7pEQtYG3(RB7tkV\bm?!,t$5c%d?/GF.G6B+Xi.6"AagN(!3gl1(MK78;Yd9EVUf%*J)<hY24@rl]sdH.g,D4GMk5Rjn=%(a\'oTZ`0P;XrhToCM\<-'"Pp]hO][drLu3hjYU*pd>_S-W*lRo!kk#,TH+n0%ZA\5Ph[*5iE2G@.&HGfB^Qi^gEL0DSG#`qc^2T%Pok=JccX@"mmjVGL:K'^\$(e;@e87LJcY[%ShF_0UO2I$HMO-,]o14rZK*h3lPg(R/H.G=9)kmLY\Q:gC;+"SY5Rmi8c$[8;a,>t%\JY]Tj_HdiY0,e!MS=Y$X-+MUDJp'j?YGUCWDmmYqCC1eN=87"jjCT^Gp+;)Ga7=*.K:k#3%A0:[QBTYd(l9B)EPctg3E?`j@?@V%_jMG6/G?d="I;$bOKc9;\o]1tZ5*9#\/RUl:Jqk@"`il,pOK??jhf\g`-E'8lLpS#/D=CuE6,k@(_t=U5rd1f-7>>P"9js2rR$JK%3AuGaT1r_GYN%d'lsUp:^PN)Jr5k5rSlD<8@<nVI>h_ni-:aI,olq?)qV`q,H7t7nrLG<'H]5/\5]iKAU]UJ+1m3H.[Lg&nM)0eV%"oZrEfU!J!2HR;WJ*u[/r=gFFc<[=D@+]>&>(:h8fM0gr+]Z6:Rrl.*E19Shn*Xbu@/%X.IIk>Rkc-#D2[0h5mC2:AM=)_XdS.h_%-6P.FWIhJY/>*n`mKJ(H;eED;e)S)9Jg;q/7r*27=_@<5B]nN2%6NT8<u*E7eGCeA3fZj_,4AZbC+dC`>;-*'Z/^$@H[CeTj^Ts6%G>cI#B7)#X94RL<D>`E&6GrJb7m2KZSmmI".8`lGDI`>$=LJ"p#5r0\_Woa2k]QmKeUo(<d9tUR(/V9l!Qt<.^s1T0CQeE3E,3)"%rFW+nr],Je%:d[fZ0@1Y8\DM@1qM?]cAdNET=A?O4)o,OInpklF#eE5:Y3LX&RbFW>uX'@IcW13^`Tb(OWspdnp2*tY7)KDXBnN%%\QrlmBpuDnHb;**@<O`"la!1EhQpTr?A.Nd<]cgL3F'/W3&24*r[oSl%i0iC))f]bDe`AHNj*G-U_V`#<],n%gBN!X"$$(%'mWTL%aj0Q/nt&h&2VX"*]V@Cqh+t4uOZ*d#("^(=)[Dh?lWrS2"/PhA37QWXm8.9,[bYfM3IM?a\IG'QdCV>4I"E7r[UT)r@bGj@I^Y]n%Dh,!';_LqD:r,,7,=_FFiBrIR]?$C*P9C]>lg?n"NRL.J>j`g)I4/$=IhtD7&[$>?o/[m>_t<$.j8#<9NL77aF^7Q+'qngO.trg=%%c("2V9QP0:4DJbjk9@iBe365EME_"$oa58L`8"C8emt2o.[d3\/P6&Ec)I]:lhg87MJ)GoUN,J\K\O$G+4hXq"&$08G_R3HC\M;%W/ja+dHcro[s3;3Ngt)3"F^JOSO%3MD":Vj1&&C#\/@2MLWY!_4rcMV4d:Zp/pJ6E5_a'&N%T53gNnR)QXTKkD-,>Y53T$>8Ck=8%fF\*iR]6e*QohMQa!6#refc.l`r!pb+9IYQFW7l,"eq^`o/=1*kFs<sb;F;@NaOEBL?bc^o#JSma;^.]j"g5<P?uWG6NS?dpcT".%l@+(>KIEGj+T/5N5VEA?=G2BWU_]@o>Kd`m*V3L2)+Yd*Mo./iG%L/"hIGHY%[fpQD^7QA:r/@aIYn'0X4Q<U,Irn)?r:oBL\d>?%n>\_spbl]r;\="-:6;ITaq89]O-/l?'p)p%FDXOuSXtYDEO'TZT2)TXZR3M:)*Em/TZ2=TTgWA.1R75gLmF$?]L-6521<4@?CbpO%@A(7UBAIQH2tg"\g$TGr_mK<1_utV3?J\&$5uu^r)Elm=;h/O^gn1.!GFq;keOpJ**@Io_B@Z@YD?B$#;^a^mk+BBkQ/"+>QJHG'%XO5bq/Xh](r1N]H9pPo"3tJs5mH30n2_KYRn(TYtL>D0bB\!XE"YgM%;]55-]@N^%T5G-`50;AoQJEO"3%/FAa%_4Aj)M.q[5X+#%)"3"TZdU/e3-ZF$2WQ46W")JP!^cA)`=)VE^q.G1aX+-2IG`<M9n-m8l5FEQo#hd&lPP$-qfB>R9("ZqWm=,nk*tgSc5#T(,:'\3%j(SW3.>+"YGl;:6F4@I`\+iU"n2]iEc`==1.tc01+.4VQI@rkcpVtIeS'qtq%_VciKco)#[BSBhHg;0TI=,D;,sm&O?<^Th0M_nN%UT_rT2r@q]3[Sq/m67U2*L?g.pK;_]B;qDr%VkrI2XWa7Ic*1\"Io;**JTGA$)%/Nk'#Yam0&XIXG5J<<mU4'kDdr043iM2Is&0o%WRThK']=(</gXR'VZY<%o#JD$!YF.,WW.(t\BqD:D$c6t7$#NfjN>h/Ib-X9>f[Ap"3O"KeU2:Am!\Xp)^OWZ8ange^k$tY6_Io^%F?N[jB6P?nNbutqXEk]Ye]peaR^qI&XL<X<oe7S'HaaJo<P'$FGqr3)>q4[ckD0WF!W7)TM;S!Hl#WISeB[_<iq(Y9oIH8;5jrjR%D!BR"Giqpk'V/l4/UnbmYqO)mDIUh;NZK5J;f>kK[FEk0&q?BG(@n"OokcC-^G"E)gs6UQfAf2<?Q#3JY04EBEP0o>kBL@p8jWAp%Xd4*++ioUc\WE?-UADU5\724^<1#Fi\._fo#S_3IoVpra08&$,GLFu(`@r!nq*%Qp\GP['*Hb%DSA4E0-J1\/daZfTO>!!Dfj:e=%/:m'%m"TLL]=l^pGobLGEpllfXS8ntV*e$eX)=fUI6er;(QYc2q=Kcu!@GNHYf",9*sj&K=^9I]mNf&W8&=B0[LdkAKA<rPk=?Pg%i\+u<F^'5=:#5OuT;0=6S+3ht!>[%]n8G&iE3Aso%$W?Pba47/q_bO2fg>5C>S[s?I&3NU;s:_0(Hr6$=lsJ[b=1K'Xj$sG5OHQI%mQM">Vm(Hgh+JS&(ehDjo>cE3Bij\%2r+mtODX3$G$O[Z8ba4)8',&64lL2+SM0ZN4lL1@SM0ZN/)b:)2om#\Rc9V$`I/@NLG*k6%4-"S)a_n5b.dl,4i'9G#pl7R6'*I.6M;ukkT#QHhfR"<m7QWE'4ob[TK>qm=m-0Lnec0p47Ycb!YhRbLNV(;Z]$E-%_cD3e=oAL]%s4`i[_&9hBH&.lkjDV;*LjV7Hm\=_Y*h8,e34Kl.`[GJLd?=;t4lnj8=2Un\NT<:Hr,5el%H[2Za8Bj;04V7L\ONLQ*FJ#[\W`o)%9N!g9\2au2mj^:9[P-bD*:?]=S;h;gEpoQ=2VLophL$-b7bpYbS+"5I-msPc($T)L5^A:)LsRsuQcmI(':DHOa(L^7hAg]`,EAs4%7d=M#*qXU3qtOcQUa>,IYk,K99Z=\i&6Sh%Jr<KLVY'"LE&$q<9PL<_Ni@l+.eUie^R9s=lP/,uL''3D6*$HoK%om:&%OH?(h;TL%I#(tD_\ea:*Tq8X*l\<Rj]X;o<3[H^Mn/,G]Q*EpB&g>3Cd_fMo6B7$/,$u^1cIM&V>`I:@b>>..iFAAYr;ik@:AR`\/6$tLaUYk%1&B1]qO>.X@e:>(mfMhE0^9#&\msZ)e=BG/f@(`-g90%hpE9I"<eIcK_qf#uFhNML]dBoW\</l+^%-!RG.#TNN<aH<*KOI)q`8s<%m?&oAa2,GKZbZQQd9F-3#NpUF?GsOuS'B*jWaHaJF=LCK<Gs>1kr'c7]Z!HSg5A.4+nniQl(:*XP!9Ejgm:^H[h8fCih6k[BAm4M%c<5"LrQi?q3;`:B2q>^YYZlFbSuupBVORAtH.OkLi(e@)BiKB?8hlg_jN$\6K+*_rcNXr`iK_XOVA\D^R/,L`Y&Eng`ZnRMb2@!H%9511(5N@<aE*if.j2?GY$]9nr8WO8$I2$QghO/jp`L.26jm7OsI7l9uBZ\`Cm^Vd<F,A,34"hlJ8`k!HKALVZfZ0GEd3#>cG9#Cs%[ZNZNQ\Y.n6<ieo;cD?@eiYU%s*\iBnfq0">W+%hAt2CMD\2Lpdehe?g`?"I_FB^bB\l8nL#(VJAs+B6`lZ*ZT&CB'1AV9)nPHjX%i+0L6NDd^8-uU6&.H4d#99Rg#E0Ht5k*[K;dFmYkfYKb8V!ctoRWpsI<*U;^1$EYlPGIV.Ru=QCE]9VUn1a_'F*g`'r/9#PE'<0E%n1Ur2On7N<s.VW+40Au[n)XT*nJ"TiIE@='oac#9O3ZM'.%/Q?c9<[9E:S[/0chcAn&-LLMuLNZ\<Dl$d2sf8mo^P.ibX^(,D1JC%*[t"UI5:f@UPFP5^"Onh0CEis\\f[r99$:MhOEV#chXd20Cub@4)`ga?NskIbeAD4T8p*phF6i\GT-5qC<)R2mAB_<4dl_\7_,<b%S]NUQgC1_bHIN8U,'.@'mM<[pEk<DG*2&l3]c0a2..:a:1G/qW:BWUdGIk<]DVU2o:#q=eRo(7E;YPTZ1[82U]0q_>ITdhrgLFjA%QQ6:Dq'm;jgEq.Mfh"#P2Q,_km'u)CUX>.3fhjO:e`upl*VEr&+_D-7Fm<kmMPF#jfhqKlE&>kPaI>EJfXA!=75X1E-UHk=QOi@k%hr71h!MFhs7G_*'W;bc4gb=$:=lt%>pRlU!Y.d#+S_ek:`Ft=^W;A(>)"j"0F^G:o,@=?DhQu]+dbE8b19WdhoLOtQn'e91VCP]^%9*lj7L;G:bl0a,anPsSL]suiahMk$T4EG_l3[&\egl(k+lF;OM\/47X*d)&bfBW9tq:t&<cEsN39SI`LJ^\UGfc5q`*beJqSG)'n%)03d6_<>B1TD7I)@'iF-e?)$S_0CG?dJ5;"mic>-%Qo^J(-QCk&EFREdA,j3_h.DDO*[En@rLs_:@tL^XSV$10-LB9d;aA!&%mi"%2C3+P#@&Kl;*+EiE0`UaU0bgnJV0*B<l^Z*Y4g:V9%4k/_Sl!FO*W*j#OR<oki8fGci!0lXr!5p3p'nIb=1JU$5]JP,lk0_5Tenh%9ZJ[E4)cq>"$>d3X+.Z?;#.o58<9RFpN*@M.I>aO*:Gc/dn]GMd,9poc:&/&Uo5erF"ul=hX;XoG"?"5H6bp"k5lOm,p/LOG9!-2%b;JA'i*DQPB%27l#+<tFUXj5f=K*@/;0SN2^"!3@lH,F*SO.^ZcnT>'CMX20?MP$-4WKXk%Gp&bOKm\-Eh_t]p_NORcZ*Oc/]o:c%lFq<SVniHilFg!jnfAc`^]&8Z;;TgiR#X$/0"co$ABM]kbU20c;[5M_>J)@>Aj*oJMe;7iYD`Zlol9grC#I1q/#@fD%qWo!7s`oX%-W:4uTeu82eO4+jVF8+]732/Uh;i0on1Vc`1$ZG.V;V;m(V,g_GSp/IrLSWq;[RuM,k8U,;K25O:;j(m:4e5kJJ`Oe-\!R`IA0CY%pk@,2I@5DX1q<@[-;&mq3l`2;MpgNWLq56uK@/O&7$5$!)YeZI@do]@!_+ubi%:L2P2>M$$f3KpP5?YK19R-5Y"XT6on""Q?3_if%]Z#e@MS[P]Itnib'SF0`1nYP1ZK^620.Od[S-H.TQ)Ood6l+nJ3%D`tS-JDf-j>*>)RqD;VA.goq7GEqVA/qY`JL!lnFDh`M.1FF%Hesm8AW"=IKjr(C#=%6h,IujmBB0;,e/bHN/UBp*Q`1-ADk_!7;Xapj_$ur&&?3L6)g02X?R7SNe:Kopk'Y-9/bjtK^u*5_K%hV6%iM,bHE&-9(,9no5jYl[I#R\DOP^`$.GM(Oi=A`.3I!N(W^KGM*_:*X:7D4a[\'PAXJNHR'Z?m2=W"[=h+-[!/$)S./9',8#WJK!\%b_s'Y.T]4EJ&SAhV^L?HMn75Ll95"S/"3F@ru+H9[GZ5kVbNQC4c<M5f\U(+1UZ02EZ;R5,WHb)/QO],$gpOI1*tkJ-M']4Rg=6'%R1OM5:p+%-^(ifrB.a;\F`9(T,9c?4e$!9d^4e\(a:-p67IA4h'H(iAgWWXs&g,W5Y$#35eNCD?(8=_;3Xs+7<7Kqc0prWVf9#a.%9`LCd<7H7q\W@]=!`a%@4#Gs29,!`0R1T$N?Og>"$al!Vc4HD[R1T&*$*(iIR=T]=$_2tgmS$\-I\GZI""=#G"-=BW:EK6eeqNth%7gdkG`1d2-9(V2Z&(>O/L"p>"@akWZe<RkhGg#\Z./t@WBNtqqh]k<_U+Yi[5rYf69%82*WkY`B#2Y,6rV_Sr^j.$%^E5fAnYH#n%^V,=.p##_\KtJ.uqYS*8n(JJ0lL1p\i"rE.H[9'fh/PJD#&eFR6M5O5%udGs%Nog=1@U$lpq&\VFaT&pgl(ka+^-;nr^r?K;#Gb+%UYn?e57nbmCJODD41c0::GVC54[Ke\P8YJA*cOu#S5/Cc&`:qF+nLP3dsVuA`oSuH`hE%Z:;[ASobNe?mtXEo9&O%:1G%qsq?hr6%2*Fj3mP%d+#4K>fKu3<TSlVacpjM6YE5u\P0fW++mPoG-r>qJ-./PWXX2t5d>`26r)=Lk0qS'8JH1+)MGKCAkW&mb-_r1Jn7+M%.%s,K07(59RDqDLs[o7L,bSJt28F+<7<h'Z27(d)no1P(d<?TT:=n'aK7(q@m1T*Ypr=/Ot=?YFRe3k7LWh?R$0HQ=TMc.Q6FC"M>q%<.*l4>X_V>kMn.r:8-Z/o`nIGqfF=%h`F5[Rd]@,\R412?1<kNVblf0jXtL`#5t7946jaN\bDB$^j@0G^!h[3a"muLpO8`M0@Y?h%nJ7KjW:u;g665fcEA9*?OLGMFH^gdOJjeF7.W*2_''^1r]cUPNgc+XF/pJ$\.l<TL(HNR4L7uM33h8ULS+%I-;s9]\:<J2aa*SR3%`e@1.-"'C_h?*F;GS_/W*Hr(d0#ElK`uE&=N,YK>n[o)jil^]O5-)SIIA,-[5(%bR$7`C/^?KlD,?j:4AaW<>F+EL%F_*.DLV^ZK%:Sh"RDftab\N-0:b.=ko\1F$/1M_R=iUtAqbZYp8*Uei,$C0K.4crL5dX,5TFBhR9r/5_Lg/n$lOW!1BO\Vb$qgBF<8tl!h2Keb)%be4k^M0(5$hBtk8=8\=MmsZG.EQ>&NBa`^9n1`SNUhHUOq`Sd^V9Z]f-dk<#QJd?-F^uom^34/_Sjf>sO)OPKPsXpi]:1mBGo6KH%UuT0br_-PS0tQ@Po[Uq;O.03#^"\62a*gqa9O$G((,!U\8&m?sOFaju`94Yj%+,j'bDTCN]eA_iY"4*>qCPIL;Y#6IGOo-rP4'nZ%dsW!,`g'$6HPTArQ/0\0f>Yic/MRul)p>7GHs]t`4LIMppQ`/%Q0Da037FViUW-A<$RunKT3)J-0=FKlGI\:LGZ./PpKQ4#9"h^i%p.IFA$VJD4Q/0^^.Or0U"Y8M[PrTcE_X?QH;dh8FYhqOf?n/n6g4FO@e\Bm6)r?;)So+;i%M)+,c9%X!F-gW%I&8IaSj\if^2W8F%j.t"c"lAE?jdl"r(rdT9I#IU2H`p?*]7'a$>aYq'_4,n8Q29o!Q(':VD_[:*Yl3]L;W%G0b0AtG5/-).Q(,,"P]o?j$G;_!\GJlu%i',4E$hI1e]eA`R'R0"8O`rY>'R-JLZoOE2mWbGMEQ>o%kc9!Tc*=.U420`IWml44Y?X<AG/s?Y3L/=d.ug%m<Rc34pT-B?g?t?r%),mS]fiOUDpGqA:>W[GF10HF;B,9!F<;A"<6*5AI(WIG=*'B-P=P-iWMJ#fCJ:6hU1;DhcQfC16'c!m!3R0>@B:Ik-S3:]DEQki#%;RgucBJL+tX;_hPiEGlFcK7:HZZ%MAS&_"e<^&5P\.>U3)%&K!U>]8A%\>VfWqk<Y,Q7%Q`g=#*r9dP;LYCNg;P;<jqoPbNqsGQ?%q`k(`?iK=d5QB?mJ,f-/s7hB,r96F0rep`3C?>$VbJ4#72a;chfroif5(<IZs8(cJIfB-.5Q9sjIetc?J,dRhp#dEHBl[f4^CgA/%5Q:TP++K`Bc0hf?_8#sIn,DdJVq`rR42LsgLOWKJIs/W`D?'4j+2@`cTE"Q\5Q's0ci3dEJ+`d7s8(4%rpf1/n1dl2YO$bR)]sS'%k9'a!5JK9DIeCU&s(_Sks7e3or6G<AJ,\jP&8@MpYl3@?/OTR5"a+$+:_/0c-X2D!`&C>Hh%nO!FY/X#O,f=X(TB.HVMOV7:]mlP%kC&hao>#jE+7p@sdGKCs&6.2M;!Kltp@7%TM][H?&O-3iK6@%"s$+9kn%S$R]YU,AFU*!Eb`fp13WbDWh!Gs'd;4'C5G=O<=%Z-b%BTA<A)LUeiY`$,]h<N8*:S*Y0QFRj3b4,o4\f<Zdq'tKc7cW';Q[rFVV1]oG_&OV:XD_3`GAHt\q(5ggPKFS*"oBB,mP3V$VDjqg%jcB,J;!q^E6LIsZlf<NXX->QslU!Ua3C;S)hf.r;Zg!JB(]X!\07WZ\&H;ZaJ,e2>LZ@E]s6WTHr9t5Hq!B.t_<Tp,o@"5brkiZ(%pilUZqi0k#5Q9n3c9H^SOrs\g%mU*n2a@<@2ueK,rlad0l9"n)hgCdm2YH]\p<Ue"5Q:AgHE-60iFoRTYq.a*,e-GkVnud.$08hR%FM/Z&/tFA"f=@;4Z#e=l3/,SYJ.DhqV'@7J,A6n3q,KGJCW%[UUAE64<fqrB>T#ZqYEqYQ^S5#Lk+R6Os.*]EgPR8VZIrefWf%E5%fX&_fj&!*l(/@O\j=+"t.aSUAP'A?aL&k<fK\']um7@Z.(ECep]YR@rO1nR)Zb755)8OdK*X:jP(iPp"AttfOH8IGD_N`._IM=T:%Wq8#"`Ypq!C,;>q^Jdus*BH,5G#CtUH9mr@).Ql,R1ccY6qbEHPLMJBL,(VBA^$Vuo9\8oef2RLa`j+.:r7Su<^#Z27#Y^aQ%Ku7%+OY6^D71ZlK,I][?_<CO0^SDu^Z5oD)a2Almqt$%_4,:Y`[ekbNmKE`K_D11)^a"*5,E'0;la`Cj%elbJT%C;.NmqR@58ucTtF_6%oD3^bEW^Me,u/'X[Q+30CJrR:P5.m3c.P/]B")s;=dh'<oBtn6,ng;WBc^f=_pB"S=g$-5E<#\B$K0ZL*er,s!!h3ik5mH_SsMll%,QQkq&l#?EP;8a56oKutc'.u-'X`qfdFk-^>0fo+1UcZSAt;-E^]_n\)/4M.b4HlO[N&RcR*n-%b"f(.*ONC)SRmEBq-[m!)`3S\%G;?3`VS-,g>nF;S$WH"sLSC5mCKb8_&F;^FDj]t1V9m[0DFho=T@'!iSIAD^I0;,VebjU.gPN1J#(?IOCrd=S@7Pm.iQ-Pj4eQgr%)hu(uk"$LiS3<uF(\'uU'OVitX[]/i0#seOH97ut0JC^(<RI:,VL8K=cBQ-L]4Q*AEJmB2en.O:oehG#D17+LWRd0T]h0MMID:&P%]f#XR.f/oJ&K#Klm#R#58L2d=OBog5nZZImXO@9nPg<SInBpBTff]dIn6CHIe!t1nH3Ihm>%9@!;p`cRdm!%T1Nr.rYmjBp$jk2f%KJu%'."*fZX#-nQ-EnBcnRtihCR\[e=P:>`S#%1t*pGp9d.c:Bljn%75KiQ'L^CtNfn.ip\0D0W4A?>,==AHCS%Xd6GIh@ITgHdP%$bJ%X*45AqRS[(,g2.o'0[,\hldiXdLiXb-BUKF5c%?IB%]ZY1%:T]TJn)r&!o2ppgS'Fdan4oYV/1AK[JH+e;e$T?$AZ9PFgToM%p2cdo%HV=oOkh2C;#c,FA,H,Rm>uA;9GtHdCcnd)oVj50])<YKQ\2(MZ7EjUG\3q$#?%1+2f,;[NW$s`g.[Z8W$mX73aoNj65Pb5%H0kG?UT83_.4!Y6+`f&8^JS3G@I24l/PgM!3VB$(,.,Jecp"be,r/mUe^7VbqK7eqrAWtXoR-H/YBR9WBb]MJSCO7=a$\(Z0%$OU%bAqiniYuT/;@+LY4,s,$*4?>W*?aN]&N8r8^q-mb1boH\DJe.WCQgP3d'7O]Y8+up.)<#[)/=!qA('fcm5&qom:li+a=,`,&Jb<H%\r-178*WO#A;%'>8g_"B1_-hY$Wrqr'VU[KTIq1t"sU:C"6q1m1f"haY\bVP!\OB@Be^5@$`S!FCW>8*Hkutn<-P5$C^\o^CK"B'%ZL5/lWRWj8Weh/6"ZG-0[eIs+j&iFNF2Y<F[POtIMANTZ__gL*X(2Pbe*27[-Be\46bG!&NFJC6/5A866T,;+<rfct+snr8%4.fP%X]f"+)aNl:Bs$agWPIl[aM?69:5eM79Ei"Q>$MqD`;W]2+[N)R+jPY+7u>K/2&PV#L<]<p8scq>1T&O2Fq"Rg+(X2>Ki\^o7_@nd%_NjuK,a(dSm<0*(S8VF*-^f7Q$@EPP5hkP)2^8cC;%o9r>#-BhR46dg(i<MOdGER5&%c;16W+t=SCr,Pp8W:_@fJfi+4aucaRu"D%r+R;N1@oV"?._YOpZ]%?m<mE\l]f(%;:]pMj38&G)80l^]8Cp!@7dQ9G.HimiWWI0<@G*V$(!AjO^bgu;eDcD.Dp&1PAU2?>pm'5%B#>rQ(L%Dc6GAX^1jaQi,K^O6%03SGTLKV[i)s)p#YlTPe-LDV)]@gD^If(J[_%]H[QAV,;PRb-ANlst&,QWH@gjn&h1X6&DA[YU%;]477:10trPIBZ%HjU99']k]['EH`m)b\H^.q3]O:51?9DH$@^R'K*7nm#3WLE/mhJ5i!N2Q-8PPm$:(+.37#-Vp]F65Kl#$/=fY%:JL.E8=82[c6^$tqWjUMp+H.d`Ei$Ns)<h(g9j8\PaR#uF6qCEm28GmbV_`-A2M;%^/Tj)e$O&WV@Tq2Ls=\FR%WOY1,*-I0q4B4%h@`s9\4V\DLQ#SSC159;&dB8JfotMcFkQ\)3@-c):"p3,<AWFsBBI6EhpRP'(<h6]bfm*16'ACV;\N&s13NpX/onF4>8MF8Ck6dc%j'Y$p%'1jJ"^R@Z?Y?9m-B,Y+LRCI>m(]eX6VLk!k7YT7M9rZP<!-H)?Y52_40GZ;f3Ze_"f[P<[5iYs85hQja<Flo)T_W0I1e%H%Qf2IZ,heg,7FQ-B.]JUss.@"ilW)$?JR`>jD*?$J0(g+cH^TX=l^ELe$L=Sl[P:btD8sfZ>%dH2J&ULsWjJBe+Ti/.Y[,IoScMAm%p,g+2://"XAc$&Z0&-6>Nejfsr@ZpJ?rIP>**qIZJ*0G30*%<3mVSh*1m/=&9[25U#AoOAhBQZ&Meap_hV,CBq@RSV4<f,K,roia%f=>G@C;b&I*mqorF`M.q,@rDY.fIH$XfL+jbt]H["c:l][g+cOaregWZ-T^M'*1_OM8]A8U<X3<=h]n1T,g#"$!FY+7<=uU=>(2e%cje6)$2]RM50;F`+=7[%B&)skpjjjsgI9Ss[M*Jl)r(Nc=:[2<(H8tkMUD5'Eb!/C[RJsM)6%ijR5VcbVjP]:M,R]"TdL_LQ)J#p%O^XOd-+P6hY`8m:"W5opDiJ1YDT$2c"Ur[u.`1&IR9`V+mEMTp\3(Ic"*6'd6!Ksn-BYjbYha%YW`rNe,"R7MVi8L9OanJl`#QI,%$\(tc=kiq_TMSZJo1@7h5e`M@Kib.$Jl`6nIuSWGfq7nqU5soZ`HE?EG/5fPWpR6!aBfFpXWqh.O@kd8r[_OiCK..a#MGY=)mjcE%&f")b&==J`]=E*]AaVO\*B:O=JF&&7\GLGj9q:+.`h#ulYUaht$bZFAI^=,(71D5K+38QJT0Vlle\,P=Yg8\4)(":cW#jSJ]\+95%4mb[1<*W^RNPPJ`7^gRd*K<+Bl_)odg6CN`bjU>Ccs0L2r]+k#g5I]?>dL[/9U`[`J_6d#o11iU)HaEsp.XI*f_nY;55@mQ9k9Ab%J=<h-<$3?'?99q6@<T%(;oN?ijR)0GN+A5B^t4A;1u>kVpsPbu86_.E:I@E(6'SaF%PHT`+bKi3lM5g^-U(85-hFoc^(fOK6A?WV%o\R#$buG)0%,0kV:aqrhO#4Tn44`a..U0C(D'pE+?TWmKIiHUUI)[93iCIsom8]<qjn?!fT,HbK#7i!dP+gS8<,54+_\I,;$_u7X%oEaAXdr3U-NAX@@38-D+$R1<n=Mo:gW$-Q02%kIUqq%o<lCrC*a$f@BBhgV7D@Hfm3NZ(%k^h;5>9Pj=K2pc+@@]"jWP,_<f']>^%opGkXOSlU#EUHY)$58%'\X=CXrU%>BEXC\VR()pCa)=-kOVN;XBT?L+cfnOjJ"_&3baH,&DItuXf?tGN[b-HfOh*9R!H2t\a@JlG%,hNS'Zo%.C`fWEYb\dJHk3SND!,jr/6)K+16(j[_5#P0$"T[]fJYfG](nV0\U0Ssd9ig(RjqX;1BUl!-C`hFuZVu2N2WNV0cSG)-%2;^-O.-gRSmRRKoJ4-A3-#>VRWjkT=Wqqr'/B/^G7D?[gB$ZQq1$b\iCF"G6_Pb<i>Vfdfg!7"]3H:LC*'=%Wfq*V?^?qjEQ;FP&%7jPl>OpI*%VVPkZX,mU,L/qhKlKDb^D(TW)LFH_+<k'I"m*5A\9P%C4L:PcHIE46e@[$D`l&#f"%1W0s-n?W5r.CEHLSd(i0XaK3%bnsdX&/d`-AfW25k[+7&=sKFhAE<bRg.dljP`uL-oakslF)mlh^1c\n?tX>CN4DZ+8:$`U(cak9%lTI\kjamG7A5WsBT[Qa/'`aW%#E[!/OmJ/FVuZ4P(S++/0`]T/?+.C7@S]R!2",e05!K,d?EP`=E'%1;`d6:h?]qO/(Dlpa9%e3$"Rufk:Eq"u._^^(DeCX0!apMD%X5qAb\W?'^I?eRBcZY68f2bM=g"ue=+bC"pJ-o3(19V:2(BUM%ij^sZC8*K"mdf#=6"X1-eR@SLVlGl8PaG3s[B5Ceg-Da'MuaPs%VMlrA_UGAC'V5eDIN</kH-B*",@V*&!33X^AOAf<?H>kf<kP4X0!5))mH/-8g?u32#?,CAbSpj%JdE=lG:Fj>7qS=#1=J&*1/ljG%7/3b$l_A]&;Fl<gD)ZK*7JDcK0dtdW+;Sh'gjGTj,Rb2]IC:YY4%g;l;5cVD4I#3Y2OBtTntXJEMS!a-I?IF8WQZN142?nXI+h-K%&CC4OS&-4ZjILKP""+BS=mK@L`0K?52<1?`[bX?WD`.pqc?Xl4MWKss,Sm5WBF(b4mV@li=FcDt:p-',O2lYmo41H.Zaieb^!W.W%m.aIlD],*j]V]Q\6qb+Y1+*E>8#1"URWDl(G&S@+n_/+:SiOdGm[.MOW'g2XAmadSd2l:R?1TN2N.9c`RurpC9`o;-pa;JPIFI/s%Cfd$>c8ZCh.)J&FJ3Z6Ra6llQF5i_F0p02QQs_/rI9H=h"l/H>[A0/F3J&3t:(>V@0[kblXrFu8`i5=EB+QstRK_QL)PC.!JOG58%\]YL+)09.k:+4sOE^a:m\0I:+W.N7%@>_,dRdT-/F:A2ZU3bab#Ee/$4>qA6/Hgo)h/`+](sF1jEN*^lRiUO(hdpTO2ei=*-MpY=%Ng)umX.^^r)eVT,D+//i0uOI]hTJ\MF7[0%nP<%I8rAR_]K=mKpN]3#B06F70O'9FE15`WN#)aOJ=O!rQ392bZdS4H`Z>)*0nU+(%A%IHs:!H44-dpBB61;?2g].Radp/+-W?Bkf9dkn;I2a&hjc/"E.kif&?']13<CT6![q!DMSlJYeU6B<2DjK)O%8-$bDc2"^aW"13%:1>Rs>B)$?d`FBfO]btmKA]9D@s>Pq@@bi0\6O_3@"\9aXk^uW/rh1,eEH-N=0PEJD"d87UI[eeVXqg9"WV-$A_u:/_"rUH]9@W!%]7[PFI3KR(1uMQNdib^[&-r14ll\/j'r(4Vs2tl(l*:Tc_]7ALLZ:s:q&9Q$"=`=53'oYKa\6DRkn:no>r(+41aVW])GP&7[$@,A%ZK"6n#@tk0o,t6CKAk[o44>nb6a*i_a>iMI8nG@&MKqgfc.=ii'naJaP2'+C(atP]@?<kiTs7]*AfhX\ReqjJ'mp!O?p0F3>0Z.8%a1O^,BGi3[;.=4a&Hi-CjX</p,B4JYB1WR=a(dG_3(2Y)>3Z)p<s/jLI[h/7Ck%"5-4&#:3QKRD-o3gV>^ZL'IK*%)n4WnOA^f#J%&Pm_Scjf[E"DujYO\Xlb2@A[M=UXgA@U6G5^`J$$(ISgG.s=72Xa&YK?ki+,BeY`)';Es:]T<=\eocptN:V.+__njl,R>kAB3f@"%`(c5(DL<B0oGOJ_J-.0(PPq*+8<#`g7#:].WW<2Vm?MM>iOhV<b1+=bAXP1Z1Vq@*,sY\sg&\W*.%pcjVbkCq0-&.a6`7_\HH8`'%+G?qf,EBQ34$I:e'^d3@9;XSEV>:<_,tpSu9k6et@ddnj]Q%jL1OLB$mhC2<N\=o&<^j1BdpAggN42nCVTCOtS2VW?A_2QOk=fF7%rO+%ZTa52ON^-`CH_.#kq+hMt3IS'O(h.0dqeq]6\$k,Dkh?aGN>@L/Tgm/8DH_@)^^qoT+RDNQ6e+qAV$#c-ZOor!@bF++EU4n(%;<AHYC/5Y;(U/b`@G$4\gl?35L53K0UsOA=^RCR%/#R#+Q#4Bq`EI#2aH(I1cVZq>*=enUYter5WR<gPN/=B-o^h1/<H7<WUY&,\%+npX49!M6mNm&ChZ_2IQ8lB=k1?>+q>hY@[.?b80q#CPo3AU27GfLDgeP;)_dZ9P8b`\Yl>1k=mGsUp)nf(^i$Si`WAf>GpAg4#6%'TqaJp&p%,J3lSi\DBe&+I.C]WNV^8,EbW2="YH7m(+/HL%<BL)$8f?f'Z9['0qNS4f%a-:C?b['Y!hIDPZ&#Y5:'@-?W*3g,X8a%nBs"7<r5/Zht:\p!c788?"ts#*g>Ys[nV)gOW<rqaKEH<<@HNTduNMmMB)9-",@YToI_.l%nL6tV;On3]@M'=aL'$>>Y6h@d$-"g%YNq!46@49:,aP;gf"c8<)oVPdap_!n`X/8MUlgFbrS)dhk(-LEe-lj!Ea*+!R0]\H-`0eT:R>P222-]"XqY$MD.bEeMBpZ7kqjM#%i"k7u`+Q?Z9r\d_f5JN(Ae*;X)%\K9/EGA*$kclOS_&L26eZn]9"O&VqD+bf?CEP-.+)*F>Z28.[[WbjR-9Y6q84@_@pNjT;aIm&%?&%\XRo*!K+si_f/8-+?rS*R,gYYc<]k@SsZ_UFT^f%O.SP>$d-tM$t6FJrno>mbe_K)>fU]?ZH0@@Ylrdd`N&Z_)H$NW_TRC\s&%rQQrB,Lb'r%86t=2KEVTfq68Q$u'l(I@1s<#n+teD9S2<Nso5u89^>W7ttnooDY4,qcR\tbKQkICVXS^WS="eWV=&,l_jr_7,p\'%J),Wq<Vs+aHmnEBE@>a;l]AQQ9otb;2lHO#=,ItC*R]aHf\YTYHn!g>e6Ls;g?0WCYX31Z8NJF@Wk8=Q.$Y5j\38[73:,76P'iGg%?;JI(`Zp1[`06YYAD]ZOc"r'EP<^eI,A.>S:N&#hJ./Xd>8gU&,m3:B5eJ)[:.q"/B+*DoP1B5#G37"VNTRgRU)"=JgP-*SLsd9"%W#'_Wl=$!;rP209bDN1RaB[nT4mbg5+X$l\qM_Z0:0PeX:G\M6/IQiYYmr&uE$NJX]G%dGb/Hf'iY\g?]B8am`fq20a%1?.>A040%q[=kb,CsT=eHeEVN,f."K'gu_B;3War!0$E)ib=;;u[*Qr1hi;4-El0`,\Rnnmrb_*9kRsouJFY+m%h"a14:KHJ6aLBWZe"oJ@aW%`)[S5CE%"W-lL=kPibMu-5>-Oj37%$:>&q,"O4(<GSQBiU>]8e4qcDp\X]!fV<B<Wgh05sK#hV-AuCp2GejGp)dojYLB`Kd^/A2]%)lY!bO"S-T$!,3T9RG@trpln%1c+S[?=U]n"m6@nUn'ckK+K2;?4e<HacPjGm>6NO,8)i2igM!11ue__!4c$>`_0N).R:fg=0Z]n%&240L!a/Ur`c.A+E<AHP;l7pG&*#Z&n4N^YWAs7OURu^TKt)ZF;rH!-4EGQ_D+V#U`,h8QnHCUpBrn354&r1[ne,asWa((Kk>G@i%!5h^JG2kCol&("V&nfhaPm&i%HrHV+pQ(K36j[bF9F,l3-7C1U?L?NoG2<QV;Q4i=BgI!ce;3gd+479R?$n%SY^mF?RI)IZf6!X7%]1<8<c"r],"TgGJ;X&':i`'bJ.bQAS"C@(dC^[t99e;)Jje:sgQm7<?(<q)WQXhT6$%k)cZd8<#YZZU@Y^*<CO*8Cc'Ht_>LW1OU%+%,C>lVT_qbRp[tD:tF^2#r?!dQD0I_2aGMhPQ;qi9'EGKk,`pkY_Fl"BVQReFc,Nk!j;AVQr'`(=pJ`JF2hP`BIpAcWe:D)ql/7%b_BluC#Ji\]9$<U9OQK)V$,5t&Xf*4>WGuj!aqW^qdgnMO)TZlI0:j"g<@%Dg(NP^L:@gR,-ICRGA/JABm`[_cTI7FT1\&?bZ7pm%!R)lg"W=U(X_]<4Hs'`mp,ciJ@=Un>g*R*sSB1g)i4aC<s%$B<PK`^6NHZ#@'Ms</`TE3Qj-0lNj"M4/lHLY2*E8jQiOV7?%)sG=%$mc+?+d,R4DIYF4JX/U@.(VV"#p`0;=<a=M@(*J[M+=*I"28YoAkGr"]QT-+D!.CiDe)6>h5J*rlX;GE=aa,0EXO(n\rd&X21+OZ%:"X5/e6#Nr_jE1]->*DZ?1s"/h+of`Y:Ul3c9Uft3)Xgm&/:!%o(+n`0@,Pg-dW+*ff0Z+p[[%0aJ\L!DtGNDM:6XsM+qbY.CuMX%^`"6ZlOT0S#<IFc(>#/bA#/%,QDq;BTj4+?;YRMr]Jfd&5kp"`:!>Lqc<YuE2:&*0Z>H_Ti2r+,1_Jp'r`]SW*F)F(.cFJ:Y`e8;%3N\5[VM&[I">/hn@7`cY".IhBT^$cS27(i@0<De0*97)C5,"Y5e/Mg@+t6iARCV.9fO%%.g<qoW(steji3('`^]`>9%g&\>P>V$i%8t!WQ3g"UVb^W/u0QX#E5)Jb_0Zm?FRB(K^#coi/W0DO#*o&Uc!9C#]Q^!J8R98j-'&YrS9fon>9MjQXr2$kgPM&B;00V0R<5)jX%j47#<]ml_t>:r*M?Ybf71lL$P*RD6)&$S@`k+)06%anV_>)m/>Oqn<[:<b81RB&d`CV[5KENGYcVE5=R,UZJhE#Pig4P%tfAABY3%PA9ed?f$bmA\4O9eZ_CpDnncECC&kI1"OIdJ>a`/[#Onu<LG>0FmR!V_.!SJf&FCD\Md06=Ckjt>tF72ZA'@^<>oSE">kqOL+1#>%:p1)&Wg4D=-^6n:`uaES>Y90$iGUgB,OOJI[#0Cek$q!5n?jD,PQcug8GZ<'`#4-$OSDjM]/ECB"cN`kS@oSM=#g:j"V4@6;k^WT%NDDT\'dt(*+u%)Lm7I%p`PqrgZBo-HOHZR4.nt_.;f*n<@pBe:P2%E63q-YVXtb9Zl8:nE9+"<"2r`1UVR78k?$9f@A(P^akT4Pk%Bok]B+\Foh#jPQ[#cjupp16ApkUj=Tpct.W*T=^Okc?a^a=&06,cJ;TcTr`TA'f4CO\i#VV)XkIo(uI7'd@I-Ij,[cT9Q&$,,r-[%4Ta7ggT.VV`k4W@SM$JDEGL+$5bF1n>76/m;qk/j7TW.hd4`K+KaC3@ZSfjCfq^6=1e\sL3Z/dqeX<gq;Aj,T'GeaI@q'=K@?]e0%WtI??/h+R[p0)=aMUA)V4F0]\O4^H*$00!>]((3@A9]"]GH`[Y*\>6a1D1%if[c&sT1p1;h*E):a?QcU;'_$Ug9HQV@H<?HOe31U%kiX[bU;@RPnL=rp5GcSGd5:LU[%CCi(SHJA6!m4S;Ne#pr$_'(&7nRH`UZPf17+S`1rf0Vc$md(_u[dXV9lO+:hg::n=\3T@g)>I%D&6dK80l+?77GH52C-`m:>n&Fo4>st!++kkcT54+#_$:63ib>sU^$2@2WOMrX+&8d$K@,DaB!\E@P]3pFDC42JddnE#FIm4FBH5Q%I>r&+9<C2-;iJqIhFlXaY9ONunFFtnH&D"bNnq%+,)*CL4OeOP#j]0rT'/?F:gj>`VT@4u&G]S-?KROu1i:tH/9[pTNZqhR;eb$p%`.1_`HT)8TS`(ZXfQGn6&fjT%jHU`9\%>1UEg!*::m=Y)rilF769B?=3o0PAr-s#^'(VsLOmUH=p0m!M@7>3>CKH>#Fd`H#*E0kY%D1d0S]L=*-@PWZ(7\gZ.o'D1V*tA\dese/k#QPNpi*Mi(*`!.)DON*X-VkX/.B8)N:LW9\)J'$\GX.a*7e@!4IuA`OA-le0[)Da.%dn$7/QDskPi'.f?:s;5jm$Il@-PS8;><N'$T84f#BUt]2DUqr`n\e7t`G[SFTeG:=qFl&%\qaT/1Ru_RE,V!=7E$i!hk](ePc1f=%KVrdjGI\Fp`u)qd7*,G:m2\!hDR1Zt$XbWhrIGDT`.gUHb_"R@8KhlaAR@`2bPnlh;`(ukG5th$p8*=E]osW>`OQajE'EYXWen48%PU((E;'RBcfIO5GAKSD77&>F5"Huc':HC(+i.(&#8V;a-TZcB.gJ,hfDa5.V%XD1RaG`/0q>hLGN<H7)Zdl%Y=>Bt.ZAN?ZgkgCk%iF.SkR]7,rp:%YbW;!,0c8K&KmL(J""[:%OD:em$QVTE>#q:OuM+eu_0hEX)$>9O(]:!5]SRD;BdkX$[[Njf`Rk&&?O77jO8XL39%#@S(/p<@L.eQqt=)"o0PK)^n&:Il-tF'6Q3Q:+TJUWEoai^s1t'6](C+;[;&<g\6g*/[%jD3VWX[1It@nE)h[P-bobf!Jji+CEVN%@&3`L1<A)a.I:LoE[<X"Ak'b].[]l6J:eeS7cVlgB`V.>J59)':iSpJ&_0nBHX0&#4?>$!k/B>IBTS1$$Lhk?a>o.riZ(c@lPaL?%$Q90dl>eSgS\\L^m3hdeVSp_#7-:0o:UI-9'RjaqGq+]tVUO=B1Lt!&Rk]^"dWCH9<0OT1X2@g:&948m7LZTQ*V(m-gUc_]&itFQ%M3us`>PCIe>m#5Lfr8]mO6ATic9^FhNJMYp]Lo0OK*fE;(ips$9&4l!ZPW3c%t]KRXF([q$XZAsef\hcg+qs<0dDnlT>=W*UZ<6s%MI:7m;J$c=^,+FiNH@F6J`B*XfZ29)iQDl`Dd##sOug&G.fH)L"ZMPJ.q'2Ed;E,G>s?pN"F;!Q(R/K^O@"e:ql44`4Yn4JN87(&%aiO;%`4s3?^nr_Nl4?s4r^`DA!JGhI>'[hZ'r)L3"d5R&b^9`g>@kQr7Vs;oA`gWZ7_:S"PWZY8Z:\V(eTC^48!7K/o1LMs<u"jQ%EH7&MZ:b=;'n?Y3^1&'2a9oJ]\m/XGO%+=ub+`ZY>Wbh@MOo)37?QYYAJa#Z+Z_CE63BB<-H,.;j@>'Rig&.[GP\gp(c`M>G0qC\%af'_#DN-XE7H2BBMqL.u2+?R8Bu1<=ID$2?Bo/7GS!!CiM2Pg5%r*A!<eP1.b`BG5P>;J76GAZ*d%%<X9%sktKSmttOF_`[W0XU9%61\9$rFn+3mmIgcPfgo4U.Ntn,+hf%gqjcf62ihaF"pXUb6'"0-4UiO:*cr>*$*$kSMm]q\BMfA@pfI[Hn&7Z>5MZN)nu>!kMd0L%@"B__"pfbUNsQC/!mTcEfoD:MiX2*q$mlOKaiT<23Mp'j%DKSW[g33R,iFmiIJb:ALIA[M.Mas?'XehP083[)"duS%1po/K4#V$o%E[?'\g6L<6ahUm>nj;0\%`ToD?U+Xu>;I$%2@YWh=%nC\PUt7YGl_OP4=Ir3U(,b;+*3'*iFJWZkn!m#0O]p.$<.(l>-!0+k:\.q%3j=f;]Pr3/T4E28,=TK[[*0ZiW3,;WA[7Y9mfKjb*@)B7U>12K1F`sQTpQDL%Pmb:.Ut>aQ.N,h&6DrP9N^a_J3]lOi5D*_T:)`R%VUIc#%GQ%H4]Ne)GRW8J[&Ya"!E7K!/W5;!9@ZbFM-Dg9N%&9Q.n8bYD<urX"df!W[+ZWpJ&(T\/@K0mW3#,H"h]^1hSTra;1r]u%1`q:k)h4Np9!=^\jNAJscNTC>d"nD:X$UgYKDGr+^-ZKh]ESMV$?gI^UlZadfL11sW%Y*1M[>%AV=g"&Fs#X8mHrsu5XjYMVR2tM%GsKNC(,hY+0Sh6UJPXZa[Y(M?Ad@Z(q2VmriJMf\,6RC,LV0mT,$n&dV!K<s1D"_s`t@UEW]j^"".&=`i"2ZOe,2+UNo7k8G-dX-%H2C5rp;<iG3%.TqTrlR(\4bA'V9MRM39J^FPa8ejDYp8lRL=Nr)n$P@FOo*J1/lZcVC#t[Hh=+qBbY]BorZ8Xl^lsH5U8i=Y/70^%rjS;Ij9dB,U,\9P09]@+W02^c\#k>K9su_H]PO/R>SDsWq+)U7q;0VZdt/%IlT2FD+RR]I2lE';WY\"TSs4'$C6TstbcGq3G#$b`%"OZrAEu)ekOs*.B>#YCXdkNYk&;#89T48JD$K@7KKm8R;%TLi1]T&Qi3tDF,ch,p&F.-(#B_rEY1n0DTs3(oodT2IJ>X2o?\-ZpN%35[u$RC%N#PqQanFKp%mf*6uY<OK]30q!iQ=4G3<.oF)mD3ed."Y")K*#Gbb4]OBdA7PgZdP;YG1Ht$+P#a`0H-g)jD1.;o4+.u;%ZQiF.@n$\C.Jd<'*i"B"2?I/SY#L^<%K!)9dU_Q&KeZM,kq<eBAcq$/M39OP*HQm+h1Q6"CSbP3_rA45WJHO;\\Yq;(P7[,b[?]*%:-o/BaXsp)AB^>CP#"&Z81(;5PO-(oo6QSYBs["R_\6(F5>]9:;!!&ZS-:Q!`2@(G*&'XdHLki#H6isHi?Be53Pngt;iP8Do.V;g%H'==e]Imq+-JoX8ZtT&>02duC,[nC?:=di[S6$$2OlJOo[nAa9`0L2c:a+;e>).oP<BX:Y6/P<">4S28T\a'7PhctAn\38:[=(^m%BQO&8!:BX.IRMuB8r7AOo7X.ZR"MhMY#.[u2'J<I`Qc=sJpbOKFIP99bc.+fq(QPj%_tkQBl'[;#XX%qG8o).SIB\FH,\DB$%RQ8%>rn#PjZ4j7im?u3XRf6$+mII=Z7!%:M5daV)V".Q##\+X.0<4jOAY_5=0cnQU]-MD^ujB`V07RsO['+5a6.dklKS\5U!8^Si[Ef\%gZr98EmeBUT,-u0'NGS,k;6bkb@Qeq//sG7+slRg>\MlaU7`p63-<l^YZ3".>E0^t+:S[Y'qCdlm0E#&oWbO"@pA:]S,.f0VPYe0%:hFYTmuRX^lUiflL%*SV*K2ufmM;;LZdY1r2F.eg]lECYSt.L89q!n/n3`,TradAAT1gmbC51>*SUR%5pP96`!QLe>aVDLo\eirm%BsRf;NY#m2c$!1h5TU'D_S"IYQYT">9A4Y>)HS3dO"nm[*4E[&hCbmslVUGopa/B66nrD."^R%IGF!?=eIU7hUtGk*-&5Z*q_Fdl%bjW<c&Nq!P*2EG^BD$rIqD3pB;b4s9aTpH(Nc3c,^<"*g8CF&ZAWn@K8E*IXjTU(m1JH[dS0keG_arRp*P9Uec<JX+RnZ,VgCP&7%Cf]0olE!CWBWC3<S(oPoYchm@P716>OJ<3T&_"jmq0=*AUb67fHdkV4/S@G!$)Y$4Tp^#EkW<9k2f$2QmYfBls0q!2+2Gk5DUP0r%k,O/LoA&%ekW/\dH#8cq`)k!bD:9R1:2^mT@),K.XkAFhm@biM8>tZQ''+E/]:+V[g9@`h/V^:,MVt5!ShEHk^D3uVWSMj\j,93s%D6J"d*]ZeW<KWV'rN.FrbpA>6<+Vo1ap`eq6B2OB;Bg9s:fc.>?C4J[)T^rkR@)n\_A49sTI7%P$_V93VeKW"9m`%2^d4g56@TP9%Z1!kMeR`^Z8l@H=hjV8nUptn&[%s4440D.ha%h?3$=,U@h.P7?qIf2:W:9-9nb[5b[+E`<ZPD[*'Lf]`CAH1]G'o^U/isrYEemC%%0Sq$-#^&^l74>cP)uNWa&JI/Id@c=cQsa^-;b7m:6H6a;dE]0'5P7.4bA%UpUUGXB7"&sZj3'Qk?o_+[RiP;i\]kWQ9ofRY43`^d%nA!:dG1%YG"Q*,n=1m!o-a=,=LbQkOi9obd43T!"1,?skj>GBK2EP%Vp>US>r)cD'cY[i!.aO!%g(j%-b0PKZ=F^,68EJOh>i5Rl%c]5>oS3B$+e8(\Ie1%#l_Si8q/U7/6T,gGE@5.;L553_b)%p1dRdb4oQ6XJ<5eCRsGMI#k7XTr</p;X6:4\8Soo`96662G7Q;XQ7%F3R&#VrW['-s,VR#G&%JJ8^X^7(R(?D8mWG%BqZ";.E3E!=-ECV(-`b\=5lZ<XMAQSR97FmBr@=Re.mN`u\pVZ#W#7,.U"0'qBqh%JcaFe,04YuFuK+>K)r00>4^.5SC1H.c@,Z.%P0H5\8W+Y20V>"dE5@hlMb(fXds0^"@5O**o>H4I(=TEU7h>iF/1G[Pl+;4]g6&u%JCA5,i>``5Us>0%B\dc,!B=.<'%'6HeNi7t#54^i^5(P+L.!r$/.K4"@i.1$Ak5j8RasU\[LeKT9s\<bpb]cOlh$ud?QTtP5@u5$%/+=mJHd=MKX$[nS4lB%,b-**&"C\'(53$Ns',BLC6R:9/NUo.uA_XKC`Jg!QUu8-7NCa<DMDQ1ir^_g5Skr4uS$)N"W,2.2m2F_[%OY)R$8o;VR;WI<Y=K$Na*SB%I.KbP#%/.Nm&&OeL*i[/W.*NI3oZ`'f)%dE7O"0Q8hUdKT!,\#lOD!SRHGU=9/-L[U?8^_P;-":s%73mjZ[21O`1]C.4hFr#Q+Csa]jgarmKp;-r"Cua:_5FThk0jsCD9O>&$_Dq\8U%0XT))!E">K7p@Xt#iae/o=IZEUPadCt_"q>aY%e+D^L.=)I9'nX4o,>h3(ra.)-AMdG0#`N(<(;>db&ckg'hb5u$AENRr+R')hBkKr::JsF68R]^!KbEjgO]'(5cu@q>Ug@_]^i%9t%:j,nnPsLd$N)M1A>$496;+1F=m<t]cPb'M7$`[/tW^[:`hhK\>BYdZHVniL)75:@28mglW1GBpPcSeK"]_"2OROm)?JFeMo4O0ED%Ka]RRZlh6Og`!=87/%B;cP41\Bi5*f/f?(F8K8G0(<H&>ek);(DJ.R$RG0(+Sd?[)BlgkgGgMQuMu/ZgL]uP;eopbnW'i5Z>Knr%%W'X#O"\ICr&I67.V`OQ[UkUmff(fTL=%$biR]#4#cN"qZWiV].g*GZda.PP1bSis(=;(04VS(*810]]Ec<=1X!1M;3XlgAjd,=Bs%oT82IB[jQ>kaRR;ADlO'!b;$o84E2oa"`Hu,ZG3B!_B#\-p#i_R0(kI=(&pB/)*Jm+_:]dO^"j8m`<VM4Wh4IW?8nH%^5W>B-f7j%&JYsPMWmUMN)#Oi6W'3C:3MpOl6<=;K<T=,;5>?&#,tPg&Cu'mUdcM&V2@Rf%?e>!=Do\D"G3@9+MBQ#)Mpj^;t%Sj<hP>Q1^uTM%A.kjU$23sf:A"@GNV%@/lhbV+aj-h\!mO5V-E8b[<QUpRPc9:Tq^7p9DLF<qnCU*LUjft?;T/pkfEZRVG9Ktn!u%QPQ1u#c%0fLL%%gO)!Q#0gr;.k`+K9DQ6W-'_,4!^F?K7)N`oQClqQPKpN6D63NP-`7Ej_@%M<fatoKB_e6RK(8:[]*^#U3nht%f?#h9>lf0rl!rj%fRb7eMW0><JU^FSqo6a!OrZ>+<&IpUG01gRWI5M[ThP?UO'fQlWoBc:0HWcQ!k3$ZEC>UsNFfeT61'I(LXiVu/Rj==+Ss:ViU7>(%$E:5PXR#lN-Mm^GG1nfQ&S]-"JaEFBSl*o`/s;hP<No;h>p3Wj\nB$GaCf_V^L.H(@Su)"-:>(t*EVBk+Qc.N4bneoO81W4StQna%ENuoo^e5fDe"Pt91=M:,:n/?t#rt^?%$T9jil"*(-*lK(N/DA)=Ke\?7hekDCk)"5`t")J`ZrG?OcAVH34qGH'U@TE?g5qR#3(W8%8$#\]c%$gG#bZdoEh'I<"A3Q2R>&U\"k4&=K*bnkaG36-kW1U`'NbCi@u(KIR:p+b1!MYHr+3Ud1Sp?iopHdm04ZDO'gG]#P[9tR%[^=F)`Lr()Q?XV>MX%niWP>@9;Yk?G^Y%-2O-)iK,SYa)%s,1n6WY$l0Gfup8[JG[6W]#,)4j98O^1j@A5l).MPAVF<q_A]%1tQn%Js_/U%:*0pO,Y/XBbIg52X-,&baDol:.#/F>)*[HE>SN`O^7=VEY0qW9[n47?1It`'Mbn6&h`Vn9-'6K*6kQL'W31]@b9ohlT%iX%@$e0)VEi_`Sqbi"2f+eLRS9lKe40c[G@)1bJZr>Y):u3n5)1$_*n.JFrt\<AFYd/Ffm47MZfd+LcoOS(Ru"+Ln7A,rkX[j8*_%ko%@D(&go%<"QLF@+U0A7[=DV%!^m)@fJMI6WK5No)tdql@Qq1TGo#>6KFe&`ZB[6\ZXmqC(`E>KH!EE-EnMK@;XS5@qHjB3'g<>\Gh%YrM>+<K'P<d9M=&h=P^2o7kF.)tm\:7DKM2k7d2/Zc!J`3%,cf)VHI3JG2=PNP'Q,bN/E!Ab?Oi-nmI#b[#p>B/+0lJ<Q]_+rhE8%o+=YGU0LjFg7NUPS\=L]=hPlN(LAZU/:*Z5o;Qos]Y<?Fr:(`&roql,mVfjm<J*>uK7"IqNfX5>?2XJeO7;\c+(d!Nr#:E]qTIR;%Z;0a]<lI*&J/k#'0u$8EA+l&%7C.&g$2Sl'ff.?^T$28PQ^BkeX,oEo2np6DGn.?c!D6upl=MlB7ArHb4X4p9rR"rImR@:R!#qnH%!&M7PN:nfF1R`0%H>7'7R6e(RUV04SNCLoE"&8&1hRaZm=mBV+@K%te!B:L=')SH;8DT6uZM*^"ruZDg<'p^*:8otgc2Mr.bLmr?%A%B4h)=)Ed3+I5\j)lncCV5\hmL3a0f8\aJjm@uXZ(,\$3gRB.^-NoeA%?s'r/G(_lIR3Wr=Ar-o>c>8-2>[`p89!]pkM*3p5^;F%3WJJ*5Q1*;5Q(51J%'ogjl;\Wp[]L,oH36<5(:TaJ+\ShJ,bu[J,c!fq>DCaB7Kl\n*HBjo5U/G%&PcjqknrAm<A6`ci3k&+91O(%S&a&tJ)((l,MIYH,Ploh,K>60,LZ+Ss+p0Zq2"(kIlKC]mg*kEp.7*`"Ls0q&g0.Y=DLqAog`[kf^g?$<WPs,8*EHEaGsjZbEg\2%raUhQ[n#@NPZ3I'8I?gmIu6)<J't3YAk48K)g$khBA-6Sd5[.-+k%\FKH(=G1Al<DNWaVcFYQI4M&;\-?IFbENL<b-6NWsm]EC_o%Td2U7l,S3#Z/eIS32IbnO(A!_3VWB_6#U&_STHSO,!jc`5:.I.kcFV]F+6_2L&GRNO7>`#A[i5X*>fHo8;n@a5bC`?>Iiq<j>oT6%T`<S:dbU&(hfLbN`\+>`N$3un*1;XWY@OHSV\MO+5SFhl6],%fE![_CT/)g0[R;f'\@)6&J)J1DSB-n>g.-H-6p8Ed'8lLljH!4h%X-H8S>"rL,[<SOS1^uP0SpXgN:[3)#4A!(FN\tM.JVr)a]rbL1%R?GFa.b&(c2]:t8nLAOa#25m8R_e]K0dS[9V3\!nPHF+0Wf0-%lf!;UqXL%S^pcpAZMnj0g=;MB=.8peQk&3rgrN-l]Ee\h5`'2&ql+(aI7Nd\3Y:C""-=4S+_b18f&@tM(^e4o@EGGO8*D<,^=Hq/%N^aTX_.HY?>'.dJo.SfO"]D?9eYLiF3bfS3,1_NER3C'o@Qg"ce33t8-u+_5Zq@kuK>Y:=.FZDU7hG#m.>UHs*NIkf+jr><5_DBF%V+>$HE)gt&8rq#nLn8.4;9`&`T@07CN\cJ4dbNGdInhhkG16eU"QPYRIG.MWDjrM8C/W-><:qD847EGSBKCRSXVkq*LF@M3JW!9R%!sK*p+\kLO/rl@F-6,d>]+`AjF"o`*m[.j>f'X[2e3H[N*I18.-Q$UeW3HTl[R1Ub0W'#JOHXG#PiI'7i$J"lmNO<O)h\D!E1b(6%>Vi(:BRp0YBWfDG"fsM.7;(R!1,NJcf4S9'9Go>S8cDH"Kd62rp".)fL$0unpJak.NZp_=6I85%mjHlH[e53XZcs3$iTh."/,4:p%XU_pg:O7.shtK6"LEBX*TR5h"0Qr/u8JC0q+JLiKb?rLI&BVkH%k&%@]$b)?]FiB9;^<?F*\Fap>oOkd='EAefI9IN:-7af9nI9,%IGO-i$[nWKGfW./3]L%!)"-71QI4/f%ZrQqdnr6W*?9O@4F:["7p97(ot7kN0*Up@*1.oueJ`Z*f_3L$-$)>i#)B9/h6q0j-[!Cs%5riRQT9*2[HW-VQk98,"!ppDFOBY1Y``9=;^'Gq%@ijs>.H9g279cDK5[L&*MbNDH`,uglWt6^m#SJM6HQ.SH-@]KsD9<,n"7^Ba%lN4KqT(CCiRSBe"3=g8#B4O.*%b3uR-m?eeoBP[c*e!<WQ3.hM36%D-E>8ka4#&BE<Kek`*EoCSRAFa*?80kO@X[`8R_UIpXG:JB%,u\?XJOh=jAjE\tnsVPh>LWJ^6!^sZTa>0bqiMqujnuP4rl;&+4M]\56_m-88q@EBP:7)FlN!LD:)1!:DY,fK2Hs,j![-B8!f@:_%'i]I]pE#3u%Zi,^NeBD]gpjQJD5J\MNiTTa%2e"^4.=mSKI'"73J*qI)u%f8JS6Fgle3S;7%Yt(_KsiG(M\nmHrBi4=<:DbdtU6m%#&5hX1/&Q+Jr[NJ<f%>bVP0\LTb9=Z.EDc)RUf/4%iMc*Zt$+t3AQuE7%5RuXtSf`pEuYRW%/;<m7m79o@a9%%^/?)VGGg(;<OqS%ocdm,<!otU,A=Uo@Yno8lZP?U/D<q$61-X]-Am>/\eg@M1qcTGX[U/8HNABTiU;j.3NkT<P2Ol-<-p2^.[Eg;8e`D@=Ji\c`"rVZ%8m%EuLk=[i93aq%%GA(d+suGP,!uLaoKnB2*WZAu+_.]mh>M<7&B('.c8pmb[LBrFAVggMmZZ\tm\tZ$=k<rW38EFti+R$S]/&Ci%'RuOM.V,L=M4j8,\nVjGWFSKh1m>n;9;Oe+GMa3.RuNG:_lnD.#:(k/!iI?u%e[D>)+N0Z-p2$9@;/OV/slr4c8.)R-9$/_+>)m5%lm;[*X4oV-F9*!\!')%XFWioICGmCCa>04u\2)o(nhm*sK>1=l\l'Zm$']Jm6hL'F&,%$f6kb:@]Mg#9ge(q[fg]jPU%Ub=bf^Kf%`Bp^(9GJVum1C".Qdmj&cmNWo1Ptc]l@2CA:hj%jH2E3RKf.i9L,`.)$T/7PDThDY^YPS97:F>pS!:Xb_MRT]#E$P1#a/qK%.Fu3%aG0/sk7*d4Fur+IH&d!&[>%k'.90E<Z;jaqkP[*e+7Mth$>5J#a(1\ZoH9V-?k=8<`P)(\i=+7+<BgS]TGOIjFJppp2CN^k<7e.N%'/FZh'u,_&FP5sE<t*/uk/!X#f&]Ro<!KOH,_)HkJ?*gT_<(XLC(-CoN\23BltEf69I=]e'O.S%<82UQFgkXmil>4ZBKeouX8LU"%K2VlNUo_lI;HmN0:3F*61hsF892/0&A<nk/Ia`WJ3UX'qR7rA+/?1r4R`O%_4>]3.V[/8=P[.Ok8Q*k8/G!JrD/4F/)Bt/BC%8f9%NQaDZD.D;_0^?LW6@,r@Ol2_+NVOhWPt,CDFUqrb%!*USmAWYO/lG\T:?:ho=0GDP-n-qq?n.Le69eS`:RTh]V@;g9oHp!Q/S+?(%ZS'+//-JsAOA2R"k^FEVB2%2+9mc@QnFW3Kg>#E[9P#r$9W[j%IDnDu9W$akclKi`Da".:5.nP/PhjM")<uE,<(=(C#,T>m(./?_%<8!3/5j38pc=Q^pQipZ;m_?PZ##Q$g[>-&)liM_tIQe2Z&Irft.p1[5a>Csn)1BXI"@,5):6j(.;ai\(k/F=)';KCCJ]ZUBq)#%A%J-[4=B-Th[W<s.42ILY$^qm/IWO+/d$D,6SHjRGBgR\F@Nr>bd)/*eRKfknGh?CnY!0)$VOFa0q%_PAuLg#&%FDTFQHu3G_!$f97%#@#/nQ3qWM$eSLsW^Rc/CkJ$j!topRUUfY+&>>^Xp<V.3SPMsn(/2f5=m$4nG=8.'a5'9k5n2^S#/=^8aoNi)kA3g0b%bWi_)@l?%5[$uQ@8X>Ri'&9Q05:s/-@j;TV1./)KOK]A77l<:ju`hR1MG#nmUWQ<'!*`HT%<k@<2*kN1gYT2&A5^gQn?do:fk+XoDE;Nq/iS)%nL1<PHCcCEC=&&V8)'QUL+T=nq#jH2QL.7U4cKFpI:G7ir^cN+AB7VO(DK\a<$p0i$kh9/:`_lq=Q4WDQ0@9W0^R'oq':Z@-[!h'%$BnO8BT_,Cgu$1<GliIr8iu*#1)5]'-=0:n#CAu?>'JV>#iX#;!=H=goe8I!pT9>sncb/t3@X9&i8&tNP^O4mHSm(=agtfI/k0qE%a$=m&pL[-@gM^@.[<F_KhO/-i[tZf_U..DFW#p*ar6r:doL3@ppjj=oEB<agO@iAAULh0?*l*`KU1,:Z;-2R%I`K%JE<&_rVF,L:%a8jheJr(P#gVg"N#,En3&T]!:?NiuqiY]eai>@>#c92QL]nio>N;C&c("O*$)>-\]DBNa^ZQ!(&DmMruZpAgn;[B$CUo!eF2!lY?%VhP.JkidQ1&rfXVfQ8M3EhU/RfnL@O8&2%ZQKQ,UFGLoEbcCSJ*iL[H"r:%H&9N=O]7>]L;>+\6m!Loq%(?"L.Kcc-K?aJ^'#!YK%c4?k_cMM#WD/ij^e#ag72C4Te:dFHim(a)B[PB#dr^`nd0cee*\8D,3O9-iIZ-D8HeHh*I>*_#JWfJE0%B!J?JqR`4UQ5"(\kjB%%e5Q;7njuM#4D&14=-^RJ1,Q)=Br)j'ihc1@PbEf>I8SG+b-6ee4;.JqXbW;jVZNP`J=mnjiDZJ]p\oQFiT%T%R(!-J>)WXpb>Q0i%:qq6a&3\?,`07Dak@mc6%KnQJ>pAs-ooPkJl7pT]$;;NB*HU_^!o*#FTs0McRkro'7<D;BiH<Dt,1F.Jc"JJi4`nQ7KNUa`dl+/e%b,,K^IJ"PO7J&"9(kUI`>XoBAlQJW!Kf6AeoM@(8L(UC98GkH<7S5RI.j0bSmmZp3%;_^Q5;OaX+&[bJm)Baf\o7;l:f%<R!7g:A%D2'@37Kc!cX)Z8b&_97)\(+;QnNUPSEU8Ic1dfEi/H\t>QU01fH5M*_8A$;B2*o$[iP2cj<lGE<7C3Ro*_>@=f"AU]jtO\Q-pjpE%kB3SU#[IEB(V/\oL["T,4<Y*VHZM;FO]2oN1O\^b>grI^VWA5eGcQf`J+U$WEkS3GO_X,hmgdo4M>hJ*n<r]n0EJ)SQKr;kOb@JU%"6N7$i`e_dhg\Rtit?!SPr5b4Ri"meLiIp5n#q!\24o(li00C9<(@.K<_S*c$Yd=\.7]M%TJA8['rQ5#WQ6\I(<DKpH'Sq/cqWWG%)S#seVZo55J?3hG]>11bX-R)#MR4*u!WA<-h[Z!9Gq)HU(,@(%Bi;-]*tX&K^-[Cgo(aaFDAn_q$lP/4!"?l+;fP6hrDVm7SF0oo%[ePapB*I.b6'4j@CEu?f)Ri2Xb:dBCf]V!d]Plh4MXi.bjpR[X1.sAl)E#$dGKo3ho5)UM'DcV=[1cou9dZ*-LU;Y00>Ou5T6C95%A;TOF'%8\3Sp-?>HP_OkR*AAgL&3.%PWQ8?i((e5n(3[7bV?%?.!;s):#R*=Gblu0/?F@ihW?!L$LuGGe+khhUZ*2H*0tlOjR9>R%gK[;T4gma==I1n"&STJU:kOL(Of.Mih2or<:D`nh^6I'n=WK"r>TlWMN_teHCc8fR)GZP8^MSkd>U6\/>3a7B8^IQJN3kBZ#IcW@%8QptCek[#*=C1efmL:q[4lp7\6154lA/KaN[Ern70SJ#a,$@3;E$K(K]![lnS:Yig_,[mMVg.;S]d*YFr<eD0ib>N5d;1bQnjuGZ%?"CI.lQcQh2:/[lr0&KSK,h31Dg3/&jKZr!T]gjn&o\=H*D9?(rL,+%dtn-hg<0mQ3?sq#%(R6K7*85A7&O`t<c?mWBU:iNf=/Cl%'&D8TiYO3Y#qjl)r5+=k;/]+06P3VFF@IXQ8]f`>49P_;]WBnFGep_!.=qR;G'G*S3VB"O8B1j_#pLbiBR'J2A;3c:a9(?]O.YT+%a+U)i[GIm$9Z!^<QIQKD.&KNa`ET_dRH9FRejc&efC2;q?b5Nj<$&G"5h!(FV.6jDH;n#PI]d-,qf&%hD2R=h2Q"_'.pn,?(f)T'%6<0=j&f#p=<.l&3g:CmQ//;a3AR7<-4dLJOT"_TiPN5n@OUrBnrAMf`Bi!A_(?-XYl5ZT".jWYjBWpF=GTQ*NV*5W7^-KjC$Vreb%,.CRmkm2trl;h6q's(Vr6Pn;Kco>V#-,mjM93a6VH,EFH6h4c2*_THgUp-b$7IZ8!8Z^Tj@?TrnCo."t$VL[N3$N0e"(%Zj+\ndj%bYok8o7R<k/&4`2/gUoXi[T5')le]Td@EeM>b2XB\#I/R%+/OEp5/*p:`b]\N#q[P0`J,mBS81n1_fU=+)#!Q#@3'ak1jSfobh'a%&XY8oZ]<W)7*IAeHcmDTB>"Q_+sh`n-f>`%.Ms)?65J,^@St_adF5:5KJ1]<)L@?)A^$dB7&%P3FaC9&HKbG`NCnSTS;*TQPk1=e%?r9KM[jW-(#R>US7&ec.h]"FVF@GXs"?'s*\Zcog8?c9[5c1>FV\roM+:0`;NRQc48/;%M<Zjg(Vc3fCEJRHW6SbI-]-8i\[)dp%%*jmNc:Gc.DFRA.5:Lmse]@%@#I-]TR)7$sdn%=T*ADkQ0#WJNj.R9h[%n&HO`-rD7c(%SrL+7HRI9EmIXc]W9@+mnNme5VTI08FQ%P'dM)bphGiQm\7lL\/)"%\=BRG7"^!8"Lr&Zq?7oT'(G&S7X@1LqKVoDE%uoIThcUHC?i27D/`?1j_"k*S89r)"uFW!&Vk`KY=ZY%]jXIANO7O\r!!U^CdC#8)<_F'@'hgs;NR#=>FQuoKe<I,/X,L$^_rP6ZR@n=o4gMp:B[`0.ccCZ!1-0(17[!3Qnu6bU)Y$+0saoc%9aC4mIk@&k.$m'V9Hna;[%'*`oM)A7p/S+ARZ-[>M_N,0jF3B2RK]!m(3iq'=($S>('mts!<C]5a40IZe,:i(//\7se@<1?O[l4Y%qG'?=IE]Q!Ue$:B#acRm=\:I7hSm`DF9E^EU@0&s^,)D._1&^jea,d]H%topI(WA[k!],r\hNEI)GQ,WS:'\!>Z9W1G1@3.EH[`_%#=_VgX[lB#>'kmLjp5=jYh$p7(8).%hFT$70u6AgYWn/L"HYq.Y_-&I!2=Iqc<MQ`D*bEcoqcr!d5qB2+A6sDaU"`@$$u`MiWR0I%*gB!J/oA%-!`"p:*+R-iV/4QlBTC<bh#Qu*Y./?<7tRQYb^F)%YGY7R#>ClR=fP?KeBO"/fZj(GYaNG,@lm[lgsP)\%04U2$8GGF%Q@Qm=!#IgcT+ZudX1@Y&-Vo1_Yusj?GYEoKfYp!K/P/`B_%W).lU%-W!7Oq&>u-Y*?O6OmopM*2SkSn\k><Ur(Np#X<Jnf&^eHk0%jfra>=/d@[7IBJJ('8"MSiIOlKWYg.U_W).I*TMUpcW4Z`@6Ga9o4""?'$q1'F(MrJ>0Cf?s&sD"PbdeZPVc"bZpQ0/#DLoDp[(X%.M.;FOOb@"3[J6ko'fC>PLC8Bl!Ydn'71>(;KDnGV6\PJ[OqknmnO4m0/9oUg#u6f=j;LhFnIWN#KX&5T@G5Ce=D?nlsko@Z+iU1%<R^XYBt?iridAs-6/=g_1t:gdA*&Tu6'bX:QnfC1#b;eCL#7S"L$BU-?)]i3p*Rsl*#i$N*]S3\E34h3kVLe@;:]Jg,FLb2@.I%W%\rM`lR/jma[.&okBA+A>->9H$=5m(6;'+4#k%QFh?-[/_\tj"h5^oef%2^Z3S#;_<-"I'n>]_#)e-F2VHI5s8d*1StEX`(hlRd/s%i5UV[X?ogP?nb,>`Rdi(hN,g\W!YI(-Mr`KDMT'H6o#I-jKLO1bS(%0S43!&GEF,eDP=1/RNOBB35AOIbHT;N4A+'N*?X,Iq'<9%%f0mNsN]u=#C9JT7oHW8nj-2Uo44ro:Jg(Bh^4?)#/"K9r(j`)*!iRg-gB*GA$W8-n=!g9POi8YG[b(=)"XKHr1"tL0=7W.*!1?4@%9e-cc-46mJ@/O+^^`Dd4BPb1&!HE7\K.t0)=js1Y83ATlU]DgF@#9d5^SlmO)md.u>1.D6&;P[FV8.p@Ef+p&,sWRY%((oa8<hkM%Gi`*r>#Iio?qmGDKdL3!_9bei2=M_3KI+Ji-"NZH59UTDA8!S*$?;DraK\)!G*:nO]\3NJLi4>mL<_n<$n.VT6-*Au6Sc/&K?/_%%87,oYdm,j]ImP,c\0D#H395GlAb,"P_t[ia2=IQ@E/8BNZu2;S;;A!Ej2FFlA5`'!XE::?Dbd+68/S?!gPEPa?")$!NH7DL.6uWg%!`@uI`q2H3('bQAq1Ms7923G^dBj'1HKB^gd>3FDAhDKcL2=dj_E\4,,m6QXp*69ejWeFr.L^+!Llq8C8Gn,fY01XB^fY2OaiAl^%2]?@0VM!36KVgu:[ZWPq6j`+3<(_gX=+-\]n,TTFD-9W$mI^D*RG]*`+5+a2ORsC-$T%hkT[jEj1l^p\O;8)f&*71[UF\&b#JD&B%/;@Z$U_F(U8(=@q(N!-f;[W25/#;bCd/,#n*bMlO+sbf?2kd-XpNHZJI76u2$gO`i$-RiYJ7XnVWQ,)=67EA<RP;UA5rmDnW:rf]%&0P2/NlpNVMP,Q8#Y70E]Drk6"9EdUg[(I-Wsj\mSX;b$VuLQ&3k&Gf<TmU=9&DfD)Pi@YRoH\lTW']g$3AEViW.,;[>s@56*o8o%CRE(Z@S<GX%36h)H^A.YKuS/!<Oafmm)6Vg)GFA`Q%HQ)^jm<HlY3rcm.=?"_bET4#(fus,.Aj#3Jgm6H/^!?fo,(TZM=UEY91-Q%mBdjrr<I`bSI!T#LCTPP/U!ef<<Rc,J<d@nUDGr^EI&,)^ELpO5d*7I9IcZa,Qg=`cj2I(f1t-%'6OdQM<F^=FJCl'7bZC..)$G_%1'*W#RD_LS6r4jYmHC$N.]J*6+W@O.YaMP=kiASog!CNa/B33=dUmGWJ9jn.Z8[n'ib^,\d:X-3.7<bR"[]P!#oU()'GI<eeXcb[%5C1GI+:)a'5jlKdqT)Nr81TDnfM`"NIW3,G;&(L?7[,T-[A8,2=f8(rUaMfP4JA`*fOJ4SHIp'G!^<0E@24/K@Dp9gm;]?Q%k9+#%!WWVG"FC-Ms8/([<?,E.`?[DT;[LD6Emb]W&2AR,B9V2.D.AS7\>,d3ZZeeCq8%.[8%KU8C\n3,";j1*=3t?*g*"Bb!["[absW]M%3GQ9j.9%A[[Bm:6HJ5E!JHh'5C+!>jiugZtS#-H*[]IiCfEY_$Y&T]_KE8sV%0HZ7oY)I4`'!!I!t*CeN.A?2`$=QifCX?qW;Ab*%0%33RD,Qc`gXW>oJqQ"T%&I-i;(j%1'(PaVF#sX]S*>+?Z^0_+<>KWAf;:L(*=oBYl\3Oa^u7BkjdT(h!;(!,1IEFUL+0"o+='1s%H#.St!s;cj,iNN^JZi["^GFF$i[aF@9+p](8-Au@e`Yg@)YG1+O.$;#eo8`=8qS<JArnS&O`U6UhB7JOble_Yk=&jZ:]f>.I0$(g%F]Ce+/n3SG;JR[Xo.\.d<+fHk,6RiN=$l.DPVEaX@NnAd=NQr6ae;_e>VbMBS=-17r3OVY6\rIT/q,"ISWR7I)49Q]!0hIY*]Pq/%+Q`Y8o1jKG<[Mc]BfL3tHQ^I#ou1q<1k'sVE(n,1AB\:p!;]Y8/K#Mt:b4>k&#21:.(-S_ZlSBd9_s5e[a0BHD+1osH.A'l1kR\V%ZAgFLLPQ==@-^DFqe[;]r9:;kF7Y+0,/HrK9%lfR;GU'^K<U@@qM[QXB?>W:@D+,;Z%0`TYrV5oAf@r@LOgEkOjJ1&;q1%'JIa-+%'cHpU)s/Pk4g!(f$&29eK>($5$Nqm;W99m<9*%?HlD"D]DXL\(W^)YsUY`mJ^Q-[1g'ThueCUh(n%Z[O]-,UTCjqL?k`S8u8l^J;%:s<a/g9[$7pPL.X`!J-dD07OcP<Br0r$f!ibfn&u'r_q`I3>&iN=Eq:kpfZ28nlPf7&Rjg#bec2p-SidqJ3H\F;raUK2ft:[aP2\%B=YA6a#`Z-]*kR;W#MC1.)i''\,^5aM<W+aa!Eb&m?i`2RuE.!O6J-fT\8u5,Z__Fj1m+Z]bS$TT%7qEo^UF^,bXLp9e#aXD\6h(%C71P5pD0DCZGpJA2[Zj,[VS<t2%j(2GCCj@q7$F%L\@c+hoV7rK^D']o6f8uPSe<?]tWm4Y,>,3!V=?j0us@!_`ND(p9=0NnQt/,%TuQ0Ja@m6F.u?$\6^K\DW):&N-@I@7Dclu&@A")b1>5#U*C/q7HC&kU#A'*c(SM5K;F?O@Xr+Yje,`b&)`j=mM!Jds^V!r6#:RtM%Wl3Ll)>'qq-ao+CE%;)!.+Ai.Q>KL>(tpmDD'PKm;oA*ji_BISc64u+lNS(=)H<@NP7h%SPf/)Wd+I3`I?IaSWc4mH*Md!77fr:.%,e+JtWL"%8J"SHi/^,UtEI<A'ETGjY?UbV+a="i*4cBp&DTre3kmjjJ$aSc,&eO11]n"hV-[nM=I/co%klO#9KVi?m%[nraaD?5#%j%uobDLXF9>TLiidA;J5AIrWb("cmWo`aE5P=>9Fpk"J9d"5.A56(CU5Q:1SVChi$h@*"[]a35CGb$'.`=hN8K;fYu)5'"pL<dKc%GI2pbCUR$,S^m(PPb\R53C=1KH)rj/,D%R1Ve4EY'Oc%I"F7l+6_cON&8S3t1:p]iZ_C[1P'Vg>d2&A:;a5_$CKSlFm1bF'=[5#X%F?@,\A?.\s7T")G6CkX#p?&\t/#+k.[$a%B#N52I:KLj:F=nlHKuOhRn138s7%@j!*LkE'e2dJa3A/r8Re%'$j[&SULa@0njq"J"%k!(6l2l?Rdg(PusWX#iqcb%UY>T+W@qL7F\BFU6\c&@uRo-=K.l8HSNGr,%o0;<E?k3d-L+dK88,V>GPAtIRHPrq9EN&C2<40Zik%("0Kq#<gDk!X'sr?Sp6c]4pWFXM;1/9UciH2mX@loNHqCJ)o@P[=^m/=O&AP9l-Q71Dl7QYi*dEB%7NHR\ILch8E>tk[Ench!nuc%l,]5),]&(Tge98A/:90[a1*J)6a%EH3/"WZAd'tUjq-9X0\+q`d(p84M.R):?PMj7kKn&iC%B%":NOiZ!4qdsT6CspJIsIMXD.[P%K/*H*,Q,ZQRAZT0[QdXYqjAi/"+D7GNr,6"j23ba;2Y7=#8o&'6dG_Vb\+2ZB<Yl[D/!^!Bb.Q#W?@M,pcoRIk=tlNL9#JG[kk"t%>6%_rS_PY!f\R,EU^j5DDJ#&pm3*")o^^g3-6ac>H_<D*pG7)VA51R+X0%UNP8R7\RV(6lE]92<'Dq'Z#+oWj6<0U+mib4.9!:h4%TRgrM:#3$RlV[q#L//K-?cFIUHoo^nR$ZKckk&+u-5s%\b*g3DXEP=PVcrG$9YB%Ah4J?f=<f,cFtE)/RSlEor?.QLrKa:^!%H,K%c\O[1!E^KSA<i^W'9.DLq`WcH\6#V+@S^%0>6%Qi1Yj.BQc(KLa7EZ\k8Wp86m'QDc-X\Z7&p];Z_Kp^lg9_P\AGThCOE[^kXaA8%:.eP^lZT">\\o+K#k;N$S#@b[R1.M'2\V/W5sI4T-2)Hd-VpX90.FF]NCtp^U68V6\'4(Z#AZC+%]7[@%R,j\hG7ARqBpAVJ$T"?%AtBou7dQQ*>;n@A%`4Ud&ac4ZAtH&r1bl.frat:'?,(pN[,p)2LS9_C9Rm,smE>rAVP<Z=r0c_PBPTtQ\8;Tael^@NAq8?25h6$P%KJgo0Z5dYSY=8]8Er7cCdO!daG5rD0>;3"(jip1l*-nL4)t<OF7+8V($\kEWPBRZ\.)Qn/+J\nnrBu9,!G*Tuhn+`*YSF-o:qW?4%L_-sgC/U7!B%jBsom?-M\[A-iYWWJ"g$:IKb7nYK"^K;,A<Mk0H]fcgdq[SY2Y4aN8Y>ntrm3msptK?[I:S[D<jhM.=b]Dh:fsgY%1$REJAY<]#^r.o/.AXReTEF?[n^S\!<B<!8K*;0Md?qZW<2`)o<0`ZW=Tu'J_uc[poOt0bUO28*e(_M.lB,=QR_OCQiHu4[buh'W%?S'EVdWE)E6\$,]K[D`R5Z)P.XJ/Oc`n%onrN%#ZaRa#>aR1+/\o"KMS!j(A7deoq[F`P89=+>=%a7dGL*g*\*^,1sF\W`S1EXoo%RtZk.7pF!L/F`U)'D?U#Qt[Pq/[RJ[!nCm>bg-[A7+$N`MJ00fE;FjR;.hOE;n+tPRu!R_m?CIdJeXUAH;mlpUq'QqNYJd.\<Wc4%X?f?krfn)QXNb#'kV+Y*7eQun)8:2B2Xl$!r.iHXKIk&/?^+/LW(j%HiZW\Jk8-u-@0#_*=j_*+P?A]Zh!jO`3-^FF<CEaP#tk$]%4X:>eGH1EJHTJos>U=\jiAKH)#?jq1^1tL'Qf!?&gg!7R4$e&-_!U3uOX)ln=l8aNJ,WP*M73jC`N?9shX5HkYTSOC"R./U]7m?q%3jC_5<WAPR*DfHa(^+I4es.p693W=[_7M,N6?VKJ2=5_)YRHgh.ko8_(Y2=ipm/gl7So%6H.cL9PO:lr3YGShIuS\noO.24[p_o)%0i2d!mcSKH$grrJaStsP6_cle>c=[4[k>>gN-W2Pk*u"`M0#PE]J0*;YIhkI!h<NUXu6>o*C]ZCRE2pAGPbGnlLV1)5ri,5'U;\;%Sp^P^`#jOrPa]8kil.%8FhQ\JTOk)UBaXWI*C4"1VXNT\GKZ@!IL5PsW:;2VGP\FZ-Rs2Pj#/%=Vp6`bfGX-Q6CJh7U1-TtmK4+!%+X)YD0:';$!Ug)[6k,LqDR'srehd*I\_5Wa<#<q6U^%F\-M-f?B$-ZG/``UkHFM0,,iPhBOS>@`\l%7>n?P@$F*eTf"jt_MLVa#A%"l!L"A=lCTQi!$Pl")rBRFchude;rV=Jk/5WU!0o'$Ta^bu`'5DE+t2N<#.i%nqD9[Yt*dLaM>G3A*n`V2dUm)=Kf%>A-QV60(t]%m,]R^Bqi0K0FtYiEci#n/"$LiZ'uTbP%U#._<)2i`1)I`o6%IjO26,MG4$-W5e.`ZnJseQIU$QB&dp]soX%UN)=DiRZ:'8EZ`[Ll%?U.RGFT8W,<%d^sGW>`k<ji'ZJA;J2NI8(<'ih2h#iKRHN&EH?&/e@"GjBA.f!H.oSec6-DWR&omsX,Q]j4]m9KQ1dZ^bMc^q1^L%+_QQEFfd/d1r)>k[5%t#e34+ZR2Ua0l2s;N<pYY[`DrQ8OU`(0SG-=0iH9pBa$45JM<<W0aKORu72q=Al/jig8d&c04CWN.*+a*4%Jp8+-Y"B<MI:U@9Z3MT+qq$r&-d8LD'hKNQK'u$Hnn3_0:4C40"ut!N;(L"Yc63l-`NH]J`f&iUf(kN6NBODF5(;cWDO2)/*qCYN%60Crfa8%pKZXkuWXpBUn,N5St(M1/Ie&!kY!gb_H)t>PDX5lDE77l6`\"OcMr-$#O3s6,YAnBZ+'VHSWh]W.KXGo>5E<[S?'D=j(%3Wc6b*r8;sFm-X=oJB6s)XD[F'@]cBS&()7]fWC(q+Hk71PC/5"COk_TcER`>>Gl<X2t]r\sHVsdPY?L;)<'_qiu&^"_ML>7`UdK%N/^R[%@Ff7_LYl&IUoHX!3m"o@L!a+dLE+L(8a.-=AQ[!@,j=[`E3it^Y&2O<!R\"=l$asWg6OdM)sP>04N;,N`.4YA)+a'7P)q*%Ac0$me3TIC7q`VKm!s`Vk!bA1=jdbVNBuU:(QfjAN.C*_3JqE`K3#R;0$qo4UCm`\bWlAG;q4Gii,%6X1C'MPW-\;3YbuqQH$OGe%"k=O["7aF!W;X/oKl*:Q@d49:pUc-51`o`'UtLg@Ka$AY6n&5fp"#Hdc&)tm@.2!J&aI/e((e$e>?Cn',--IRFY><8$B+l@$E<<Y%-`6X23u'QJc:S9j/P=,fqLr,:Foa"u:KP7Bc1Dgghu/kLn:Mea9a(qPkEW6SV>Qkcjak#j6D@-k"L$U'WUn7GpJ#nFCV20/=*"0r%?+-]fjb4+%Jt)15nS[=QLk9K=6gjO#'dN#KCBQq"kR-nag&b'Ml'nX`"KoWd4f#5LXY5T&,YObqYuPgj5VLop4"O4FX&=&PM7P4u%nXOe8_Pt0>-;G/P%f:Dd/%o/2Z%kaR4DVR2oMqT[83uV7b]cp.!cS41)'A85Nb9k=<2JpS>Z53\bT^rjR_/qoBai"g%La!=*"Z5W%Hl^Kj<DR>;!/c_o[oIi(Q\P@EKDB(1p-j5^T[="lIIeeQJ4@J7\^K7-0S4R=4^))M[pK-n2OLjJj3"i<5g_DO4PLV3hVFZ_p(_B]%SerI(KOep4!'AVum<]+[mHGLJY!eq!DW#G=Lfc-l.q60PQ&e$)lM0gK3\j,Ug6BbDs*:H/D$9&2BjeK0(_L/G(7c-Op&'f7AoOsu%:5&,hbt9d%`LEt`;;<1aYX'H0N?V?:M8eG8lH8&P=jo0cUr#qc.'Qc\f;r%Xgq+=lN4NC+ZrYEn0I)<bTo.9_VP-8!N$#6Q;ST$=%X_I?dW4R_CmZ-&sRdm9^Q0Wjf+X4\NWYl4W3:C/V$CX9Z?B+p@^5,)o"+Od\pJ)esM+"'RDO`m_67<Ch0do1$@:<7\'qJ@r@MAp,%G=-gn_@NohR-Ucd9Tm-"T;*i3jRL#4Uq7VG![rSeQtB:,odrnep'_(4Ge_UE+2Vn/lFh,X9Ht15X1rhacnLUdL>qR[8N/ZX5W":*%<T#BU8++.oWQ5f/r+a7_4*1ZV7.=0ubJSU)Ki1RD[X`jse648h6$pRn5#"JrjLc2F^T<.2W%jK'q@?aHk;O!kBgE![T'ib#)o5/\%#^;8?hS"aiSp$VVZANjE+p!H$1GXLIh7a1"<s@sto;3GDO>msfNo]t?NF<q?,oI*H`2lKe$fXUD`sp#+[HAX,`D_^U^8TGP6$#]4%3!7Pi4Kijp+:R1SbrOTlX1$G1eRZb<l5e5D/0DZRa(-gs[[r;.#u#IWG,9K!d`g;LT:51Wq*FV,&%3**pj)_*=$QPjYJ1"p_ghLU%c%g5pJ,db(Isq/`q]e5_=20(Yc+BkqJ,P<$oS`2;o_sUV:Hs@/Qg]FukGM\%s3jc8rkY[bqR<PTrr0fjpYWMi!=sQrqQ"Q7nF%Im%-3'k(0AlbX)?*_<B`$+O:n[dgS`q6rr9%G%H1RBkIeE]X2uFLOr0dN0X8+;.rUnoHJ!'SLI/8Koh`nhIN=ijm7$"$-Z<W43OgOGC%^U'KX$LJ8PH()5L0/i:%2J'ZM!'s=q$_;RVfbYMHme6NR'WZ\*OOF,HYL:la>CQ'3Ne+,.q#Bbprp,pKLr6&!5P0&s_c%S71@1hN%-E<*oK<E2ND"_F`"=D&,GIZ5?k]EqY%/Am\c.CEA4C.8\FM&A/:iP`f8".Aoa(nt?:=lKd7gRBF0#hqEeCE]'V9cpAdrm]Vl&3!f%eHipU#"8mER2g/%iSdsAUZ8bbYNKl,X3p`HQe-;if#?itXipT%>j>d>][GuXZ,8Xc?KqLbc)\%^r^Dd\If#`Zli7;e?iAFaDr:QV%qqo(G+0'hek.A+;q#5JUs3pu#&peW0msk,ure'k8'n>c>mlu3sc+@o/q(p=k+("p4Q2SsW[T!$`k(`kfgA]Q>J+os+HfBN8Gca3_%$Xl.mZQ+eHn?EK.h%2H&KSW!6m:oU,lW<[&X()El4HUWd*.#!.!o][sXuWAl0Hh_RCC0D'&g9WL>LDZ_fTf-tqc?]sI!HRFM@R6e%Pa3dg,i+Q0J[j0OMK$%XXph(;%;XW9B!df-j0M;a$+V=+%b@0lCc\lT+CN%WW4I43Jpk2YM[.`SP<pF7TUIXl6o84XK'7+;7hpd,%V^)W),b^)!o46O8A&\\3X$CVW)\MFI3*oe_"m#DL8"3(*Mo/jo(83S-"B2L4TPA<_^4OLO'>"jag__;kX`qb15p8MY)]6DCb36Y5%2/Y%.$#cI^6tLt36>#",o=HXpkL&A8Bm5u-GlJ-R'LGLP3/55]8Y\*ZU%h%%=3.Ob2L9VEG;edr5a,rR@knXul@&1`*;13@Zg;S&%`9Cm':=O)M7G_%?Jqr`R"u&GE39bbcAeOsT"2kd>+RNQGG<-R(I)PKfj@fM>UQ;ZV@9Pua_pmof*lhNe5n'N"%CHq^n+IVqRWQrG%M\.:%!b0O@Nk0+$(-@<6^s+,LZX,[j=B&F7&t(Xe8--"0(4ma$L,@l!g)c!EEs;gH=MU"J]ee<BA79h;U0W=gdS(5Gj%O?CYr#,c%/$Mg;k=*[a4%2&%CJ<38>:Dr>AR@Sj5m3$p$.)l:m8<@mPDGYWMU+uRT1g@s%n#&,<9X9]O%/&PkT"@0-0[I0S-8KE96Q4!H<]ap%70W_rdJ4a!^K!ha.h2iTHsS`MHn<XlG'>STJ>aEOUcP=5'=DE:h&1o&KD12K_RmrC0.JmN@X2YeS/IZTAp%)9dpEg(cQ$5XbEI)'%'C`@9mZI1ZTa>/iSaqXh"Q.91EfpU5-'HIbOUWZ,h8'@ZS/70eAZK5M>nIKUD#hQWr.g#X4;ega0FEJ:b625\YgVNA5&Bj]'5duY%8Pa.Lh\+PaE4e%66UQs.'./nu!MJZuMG,..6gCn1\UG6gQ?a6[7<#"f>m,nni5>TI!2Y3O%.680(gphN.!jYX`@7"e[aAsJq:3jJ%BBIm`:UTl(&U;BqOSFg^8DrU`3sth+c%Z_FO=3\V\dV!`O97=hPDH#"M&7+'TCZ`:f]?20bLaV[TZA&aEh:<ic@-H4De'-aa.%!k%T[ISHUFg3;K+AeqLI?rf6JfPp91L0@]%j)`&F5<?l<lpJ80#>7frrr)(3\V2[V9-`c%r4HHM!5ios/MM`"d4ML9kRsOI\6Zd,_V!%(?Z#(JGIrE0]L^;JOg[+hS?J,mD>lCC#@/<'b.STE@k^@oI!3]6mi\dLad8Xof,p#Bn26&pjabtmfVFsd?(9R=!8bZ'WFnhXS$6>%Gp0Ot+<AYkeNXrUak<GTB$lim3oXpfn@us(.]9X\)[*!d.gsL_R=k-;T+9(,B^H-j]RLY]i't45[l5<BZ!;TU=rem:#2>iqjXT"Q%P)Z1"ct-+e3X(H_bk3-3;On)=cG"0b`=8@XL>/$;V.j':>Qk$Mi,5.-[$AA\l%DfcM3tFLm#i<n,C%N#B*=a]aNG\Q-\a(Y"]>Qa%P/uD@im/gIg*+KGFb_Q>AEhnDcr;h,R,H`AHd=K_L:ZfYJ6JP%55O.%:'"s21iAdQI)nq<3RPpqB/)dnb]1Ar4cY-i<XD*_]_6u7%IlNrnbkcPRruA2Z[a+1,]0`hF`J"Mr1-\IVRmh=?bd;6k5(_X'E@tLM3L,n]*FR<teI!*TE)>c#1Q;\FF#;h*MndCG^inp4o4&<a%4qoB^oNuan&t.Vg&AkZ-I;Ofn"_kF"n;%F$L#Nj/>Ml(cbnAMYD/7<_;k[ZY9']\hiWqB0?$Dq&p>7j:+c'IViA>%l5!m46'DUB7%[7`ZYF\#U_D(cDZ?TX\r52VRO@$TD,F$F\3+9`tN'\u^'rX0&:[%dTi,)1M-,jGa+/;0D=0T-QWd/nKQMa`d1DU`>`gNc=GaBq>)%78rYn-**01:TBJ??P.mKUi-fNXE+O4)+F[].I_2jBj\fg]@2:5q=9u)NnRh3`$^[8g5!pGBDbo1IWn>q0R@?Of[W_Y06/3,UV*12%n3dI^dGW&Dl^m_-?mH($d28A=[uHlN&S@UGV9W&qK_](VE>*."R#ppUHp0s_Qc5q`(8GQ4jB4:=>=/b^1P]NE=WITH[(,KaY,0SQ%.AXe4$)Hl-k%UuN$%$3=QSGS;8Sm+Rp0F+,,IEgT#7bmZ*0+B#=NV!ISL34qrL(*X`U'iGYZ782D%2kR@bW=Z!iZS?4&7ss6NmV_%o_UAb,ZS7pR(q45L+<sd3pE0?+#T`$h%7^<B+n*FI*<#?n&9W-Jgn/XgBA5ScV&4@d4=hTQE3Yc%X?`UnW<!hPc\!d3[0N2M=;OY%b.<eh?W#n+l[s@35nbRX$i6)]0#S?GltC1Q9Jj+O-PMm9)8<QR7'O;kF>_M:<s6aK\dmJbi<R!f3_(?FL<O"N!d\28.kRR%6ThO#%30N6q>1E8,RNS]!`5M\t-kV)`oTT_r7oYe\8<n$4[H?`mbirhY)Mm&p7%gQc:/T,r68Q8t*[Fc%W'E#@%U(kcR-gZWK]n=s#e5K,%3k5m%&P,rZc83.S6Kiq$k;p.m,KpUIm*MlUUC&PgF.ED--)1[TUA_W.VBCj5i(]f;eaauCOsYhPSGHjG!2<:#bt?q:9t6C8VpHEV%5;^no\6c'^r"9U>`$1Jr-.!+:)_%%,.Q=?5:pPBW0_Ao]M6Z>H9nGh'Bb^r$qQXqYSb$ULAI)Z-f/8[aY-kMV*<=mI=!a%7S%bhP%7TiC%+APQJ!RRCal9N:G&\&`\hC%U:<[G7khi2[]=$(tZ=XFTW#`'C\2TA.+FU;X"SYs1UiE"=D1/Ur'^-5j.g23CJdbNY]."ch"%_J#^jf._5IoZ%eAhH=Nr^Hf6"j15sb2m=q(Yc[ZHLlBGTj<r0)j-WP=G;rNoS.S/]8FL6?TKe-A,>%CtCrAS@V/B?,,,eOURPFNC%pG(b/W+m+3E%uq<5>`3!lN8NG"TJKEgU`UEH8,YZ\8)asZVkE]5[E]2MA6tl\4lrS1!*I=E[X_D""77\-PLAD,'=aO[Aq:5=<:(#%-I\t4kGL$F"=lh@Go?1tY8VSa=4,lI&V1u=a/KTc#kOl5QhY*3GuZ4:J04P93oIRZV:8fd`pU@,H$VlnaKX=^.+XM-9;#KnCERHu%Tgk%-:@P5-3T:+>(F)++.!<Va>qsk'T1Jh[D,-K%VJ7OOGTP3"QD->rke',fjKXi,ZGa-;77K_(+F!Vg<MKX<oT$K@[SN]kXYkTs%!S9$aEa0r)#spl0)/JhJ;,i9-$[C]($L&$T:1n@:lZAETm:^Eq:-678;*G"oLc6ZI6h+VB"Fh[9Tobi$]p14r:f^:*r.Z=Y`#\h6%)4BF."Gbb4$u>R'3^D9YeN?mC</.3a-Flj71^hcuE]K6L_VIgAdA*Lj/*gL]E2O1;Scu[3:0*+AH5,2#@V7ni\/o06G,!M-gbTg\%M/OLHc=26H'u6\"#-e/k2i9\lc-oP_B]=dk]_0`PW,fN\lDIp5@`r?=WfTFi'Q")*%XN`m8]E.J&cHSo_1tsQY+m&2A"Xsoet(%T%_Sn'`DN>SNLs35K_@#!n3?IDJWKhEZRHPb()GPA1kg@D!![E88c<%]6oNI_&B&0t<UC&Ko&n$j\kr7;I%0Wk,V_Ykb/JD\2?ah%8%F!aKNZ)l@ba2sF+St]3t/G,,UrNoRYqm9LY"[rSVbq+S&/]EJT*O"3=%;M[_nZYC(a)%\-+V^,04kTQ',`guJTC2p33G]S3.(b[N%?k0W*rO@fO:DFYcq@5']6,c=r$7jlkQt6ZMiIScU##Z>WasRf?X:1GSYtkP=9b<JKQ+AB`P=38i#?g'R6dI@l9oMoL<)#@JM2>nh%YiK1?\:HoV+_4lo)NL$#6WUZ+bX\.[9I$P=6(S\=>(fRHVpF)1&fn:Y%jAaI-]:I"WOTPj8+QlZ(35@7p;rK=^@P$@>m5r+JU@N0%s)M.6mhCHG4>iA9A!1Y>GkUiAF-*XA\"HGc/TQ$<SS.I69PUp\b]T>jn6>1^\TbRq6pl^-7@$B%BM"tn'Seaf9f8[22GY[T8NN=T%=O;Tba6R8HhM;RJ1R,q8J[Po*jr.MFlhI4f1Xl^S)PViDg;".c2q^r)M7"@)(mXSWH_@(PFRu)c'P_):M8B/VjaEcd"V86-ZR(;a%?W))m/nnr11Lu%J-$45[;4NT@QACp4qBjA@/7>Epi*IPjcokMge^3Z(7r(D_Jhic;^&[Bq;Dgg0CqUCI#r<!8X6r,!&@te9EOe;9%^X,ZFl_Df<kCf6n8TputBZZ%:h:F0`5RMs_9cL9A`guW\?3Sm'daXX8LV&SY%^"":_iNQ*pB>jikfmK/o7P.GHpMNtA2r6jGI*Ku%dNFP=Nt6kIihXPfU8nqE<PA8uaD<\T^<jG^a-DcP,[KYk7)m:/KsUh$H't==aA>I/GAdf9%nY@'k.T]rbGMR;jt+r4EniDtPKR"@%)UU*Hgm-?*Gha:c.-l8fIJ&IEMN]8R#/^:NVZH"<_U9o]6"J=&091NB3:^UU[p@>+>PQb>apDG@nFqT0CkBl\Y3Hj6H`?M&d^V<-%Wt-Nu,<[*p%n?"o\HAV0'&gJUa.%WhJWu).AG;O;_:$($4KAuB:pbh%ZRh:E4sm?&;Ka2U&A4Y\!EgG5Ub/de<MGcbfC/S#]Zrfn%"4K4Vn.'Z^cQjC%UQ`CuU(MYk^k?])XdL^SEgC/;"Nm.hLR5.bh+a(Y'(-j1Y+s*ImsN[l2gC?tUNE=T!ikPNAMK_\aHCihm9mlp%8<@Z:O]\M='(7euZ(d5AaXR6L)20^*kFlLi6@Lm3m@tMDj^",\"YO&VH9sOp'k.iqWgf[<.&uY-*!:fZd\LJ*/'1/`%&!dK%p]G,%:/jN"=#11c*dZ1te5$7L#8?j?jMF_][+XX43oUa5\4_oAfm4RJ!gF+A^Lq,\!!RGSq,Jj9;+@:B&]Sg51@/&#N7P60;NFIuZFIQH%MilpBk[oFK9'ZlH)clPYX\9=,3D5+os0#N/L+n;$6hU$OITBS=!t&+Dh27Ple@LF+:3)2Jie+65RQuTTH74Q38JQdb?/+LSB*6dY%)A>&G`_L'@kfm,XY>n:P0AujGg+]Jl<R!cB#]C=;nRM@\8+l";^:[6$a%IQp&KLqT(n@JUTVNcb94ek>,BarN5IKPed#fVnH7!&-%Mqo-E<:<kP*V0;'i(tSbK:\NJ@%c$3q&Y5\<]@ntX]JEQYM^Xe6s;mB`HN"*bQoj*,qqd._IQ>HNbm@o<["Kl&MN>f%mK_O\')."%Q;Dt+<Mk?Y2aUupd)RqOU8r'3WS6Sl\-#pGW0FAGC^P5<TTm?G!^]f"?8]&VNrq^NNY;\Rnk-KA]8LUW?@AMaaJ/oljMp%eW&`Mq%aYt;8!oa9]^"R5pFf,HhE)h^);.3p9m.rE!7BmX6<c?Um++BCVRIGN^iQnf1mpToYg*.#[+tZo3?f8$%)t[t%KXl&$>042N4V_XJ%W0)=+J\Ds)EBr2eD$Yej_=1.?ULm*0n7i!9:o&l<4(QG;Ns-]7>sr`uJ]Eeb4\:s'Qsm?bJUX'^U,OjIg3Z86GG`ABgrIf;CJZZ_%)<*MQlIc0533Qm[[g/b6&1+f0pnATNih*(0m%pJ`&XT_g"]_=)#Od@oDK]+`,AA0X4?uF7.`gF6OUOqX@)8Ci(-5/UauQBC]Q5=U%7RQ9kH?68XK#_$SYCQq5FtH86>o&iec_>!h@?sKYFcu+4978s`L!FA6-!,JZ&P*JQc57%QM7qT$(81C(ibKB8dpN`E:>O;!!(c:0%HJ1<([#%2EQFkM%dY$1r7ebcE=W#Ke"h=ug;C3(ml)fmJnr3c]"4?"*er)r$@DM#)"ISIOR'b/W)Z:(<U)N;a[1M`*d`FTh,U<=?%+?C-6g/RXLDd]T3kS;X5n<d&gkH;fHf.NufL#u?5n6^i\P.\3GAFQ]$'r(^4af`@ChP:b1A+4W?0StT1;imd9KHkQL[[:BO6JMdM%D^&$[9MC8ZUg1R%IJ0'roktoVk?6b_<IS@,Y^7YFY<Xg1mpCt/SSn+r'!u+#4#q#c_]n10*],7;0'[T*5)n/PaF-f1-f9/+662t9%;4^0_4e[aaW/VhN:-g`hPTo>=NX4pPS,ZC%"o"O?Ve2L#.tJ9f>F?U?>mZJB,6O*cR1C5R2:sHK+"9gS/P+,C8m>mfDK0JPE07`)%XmD)MXYKl8KcQPBlmfj-RiFIRW-l;D5#muJ!Pjh#[hH"uCtGJ#3L19="$-p+IC8^0!XogOY$VXn2kh6NLHj%9.sa&B>J9ZCO#HH5%*F.Xt?H9QFKh]NQjj)r9d-'Vk+,uNQP_"c5*Y#Q^N@ME6C1>sK*_'Fp,0-6C5U2).o5)8FUOZYBNGE,4R9&mn"Zeu.^g%]+Kd)]j%'eNFP)!8ZqNUB2f)nW=n-R4*\RK]X2>"i(Z2kp[qhi=8Z+?#P-6pRufoTr6&#I]*^n5]1Cb)k7%n#mIW&LH[B4\`bg6N5qP$c-?c%7^M9f&0@h_0s2L7$pIfu^W3)Ui:&a4*&TTZ"du2R[PTqeMIls<:)*&eCkn2t&H!dOZte`l&##3<-,jbKN-q-F1OQ4GfaP,\!W\mM%;A1(,7\43`b5so]=)"hGnj)n*28dTuJDUN#G<D=5X3;EE->piY<LAR-J1#6Y.DQP%EE3[kFZ^b2,tM7UMHZa1N;@j.R"$%Q<(AEr%B8&6-&;IKP6R\k#`?\p!lR5[3+OsmU=WoTl.V"Q.aT>4!bJGi.F`:1^9a3UVDQDS(GE7JV]L]Ed6_lY?p_om0@f]\C4PD*qeR9*b%:+>JA*A',JJgMi`(k/B`;<6c3(fgXMnh:cWFn"fM&WmKdP&,ITR8h6J1_DFm7qi2CKeS`[qmod>T#<7?Gk_&42#'HHV"f'\)eNWr%UMgK$aT/!\%g%a29;'6tTmV)e%;$HOH#SP6m5KaC-To_O4Qk):-:pI'F<*>YL7NQcp%Z'Y,smjCi[if54>#cem\"Uip@_qL<D`Op%CTHbN[$=Np3INBO6Q&^#i^^$$Ma/,ZV6rntAkki=d%o^NUIIrsM&stm0L37P8k*r)_hPO8")71@T2Q(hUo1%B^BX@[OtLb38.jMC%,f1p9EH/;*)Zt"pA@%/:Y9m7/@Yg"eAob:.b]9XN<Ms3#9?SJ&/QggqR_F_iQ0`sX?6&#Kd2OQolVSG[KIL6*i.hgeW=E*N`J:mf%QDHu5-?kQ1YOH\eG?-lLD!J3>S8?>hnHkU&l[:CD`/kgeWVnE^:"U4QDmD3P4IjrVKoI/13F94@OY"nsmb(X:LkA/ZEjTk(-jYnk%1!OdIE4<g#@gk&;YN^(m!dbONZoEi+ZDgVLZl95X?PJ4\7VO]]`T%q(8e9omh5QOS+j.];XJ\pJR$L-\aqfr7n/'#gj*mL./0`Oc%j284e-(ndcVcnqt-WV!/R/L:]1tUX@Ga2D3l<FfWr\-lY1.%>6A+d$LZ6QkO,"fFerj]gt;fZ"fYi%cO?JF+h$+#%W&ajr`oC5sU%nMRL3%A7KUbR*irM&jKW0TWG-3$V0@X1kBqcI$/LI401;lb:o%;0+mV!LLdXYMj4q8NcW"a;aGhM&IB<?8mFJEXM9'rHTI9pq^KX%$Veh:Z:_>32Z>\[.jQeBQ/fP-&X!Z7`,^7`K>ic+m75(5-47Z;JPE9DpcnHMRlIr.SkVUU19m<l'g\`^D3]%BoEndZG7n)V:^;pH%OXAqLZiUGGSRhet9,HEoS)E9&#g.Jdfmt^XU`OpM:5=Zc1[?N8Eg-U>kX_LeT/C:X9Sk"i(N-\lFEX*c("@(=(hdO4^_Tq]L$HW2%VRo?`=bGY<ip3s=NEJY4h2`\//j\Sh>J7&3N,CG"]AgnG1U/`C$FWch+2-6XM4\rYpU-cE3!/MgSbSY-UX$KlR8H(:Z^)8##3N0?%"TQ-7osg<u":1O7>!=?"Ri&;.8!FSh2T?+)h7>f]8I`W>rNFelip0!r_&gEuIZt\NrO9.L#*dm+4B.Y&jli(h[cg#:<Ae/N(19u`%;=h[CV1Hid==-IbBaTd#hO"]XaB!U:IGO29aML76CBD,^ibNNb$1OLP#q+*XIkcq88HpHbkqVo,@qJ3MI$sBUZ51e&M@o,Q2uY`l%rIc;u^P,3f-?6?j4KbZI"kfV$'7/=<[Qe[@*!USBUWa!c0O9rDk7I#?+,@kT/&cLB!DoRud)q\b1jfZHPN#^\p^Pa1E"YlIW/dL@%!"g!@;6^HiEb:8`i<$`52ZiUT,a(aj-hhBRTE,#FWi5D%63iGXS"F3nO_m.EHd\(t!3/Q<C3t%t%EPVu9Rq"U,kp=^&Ca^EdMig/%p20L\i$P9]p_-SHIr=Q_Lj7/r&h:bLVBe7,)^2W7nVm3],Fr]$?p+MYPa40J@l`D'XdP,6KaFRPNQH_@Ul[;*8C,*Xq%CVjTp*Rs%^`r9T5I++#jX*ZF1mYdK%i&o)%VG&($GR20SWKP?Y-nj/JB;P.V7'3,7F5]beVG=/d3\\3;6f8+-FdR>8@2M^iL1?R#1R?M\'&O^%%?TOYm8;+/jl5pL?Cd`??^oD*g4+;F81U`p4Vl?`,'1oRptqmB02/kj0L*aOP2=JD?AJ)!#snZP]M.NhOmFl_lH+#aJ<&6O!7*_`%Q:M2kQRauWK5*>TKH#";5s3ZnAUi_\=bd#;AqLW8?L;O-Jq2c+88j)b8_WJHiVm_'JJdm`#nG;jFm:`><#8D&<\"9]26oZq0L3oH%2.aV!i'KfM_l:2[XB['JSNa(X"g_gpAJs339Xpq/E#6aRYb]7GG[psS=(G4./.f^0W_@O)9ULnG0d_kuf/UJK/C50:9-bT53P<X)%.I"Z^'s/NL;MU`IlXRjok"[)/]/+_069F=7O%(V>29nf4MbPFcbNscd_Mk4;fhE,nj()[L!t'Em$4khA)HCP1;.ORQ`u=l[@#+QS%cV+n5R=Qm-#IbVjgW15ZFJm>^Q?jT[5B+-lba(@?A41;9&C4g`k`At(&HY'>-KR2/baF#[VEX5CM_QE&(50#B(km78TrI5?3-@$^%HSQ3:BR3Z@!^hK/9N+_O=@<Oh.W/irRU(,`1fBJIW)@F)j:>0+mbm-^^i2]l45]m>5Die_eQcEN&HeSdTC2CE9"eRUhNkine4!CI%#8@O5++Y+&16HF^6[nb\5G]K9dRcj!PprXp2#EHW5]9l$,q)RWVWJ7MK^55?YUWoPhLV0t'fZo`mIWk1lZaGW[[I.`)1=%L$S!Nk%oVOA.7aTKeSL*mKHapo?gn\gTdO1!.B[gF;AgZ)g@"MhDQ!!be'0p0FVV7IoOT[b62AilC1dNQ,`o)f7@U$=Q)PM0QoKT$=N![J;%7Y':k)ED31-n-nK+VWV2a9(q1X"m+@EG35A2gPRh7;Wkp4dJrVd&9K4E9]Ij[X-,F1u[Gb,>0V*3T(E3Y2;k[DH%IB+C\nCpZ<q>%s3PD^4.LVA'#\8aW"[]mDgkOarb$[iUpQmG(8er")_$'$"X"h4rT5VV4>-*EjRSa77OX6>+.Q>=i*dc,Y`LoLbr=RaVDo2rI?b-1%d%'*s`<pA16O%'uijr+j>X[%gr@6Q)'^b^Hcjn%5X5IA*qq0f/q8N_F.NR$Y]Q%O?gg"Ap-68/NTI0(C,r#4h,-l"l.%Emp9m+4u%qb1gR>N$Un$_]gXV]k=PHE&g!VBY0=jGaWZ,^DuN@ZT^<JAgYB?NTe$h]/Aj'XXkZ'EW/VK<gVDb[&oTO1&>$rWphPR(s&G"oL3Z%/Z,siN)X&[:Ih`"nskEi!]t(b:$IC+!.uCf9lT#0$ciA`rH2+Q)R=u)^4X]fr=7=o%lC0-KDX:f?'Q.0A5#:QEf"e5&E;*uH>jj`%-JK,Q%GT+<:5..J1N$-_/,)^;Wu7O?JrH9Ij0<lu3'aEVW"im9^2?AJ&?K!'3t@#PJAnba,3qC*1)i?f3*00CV_LAsgrlF"c[-*L%MlbC^;APW"bd-Ru5mrs^EMP`t9l3A4*!k:7#pEJ+L$&6!jZ/4rA8GS(4qqDl>AujO@;MNPXAT+eSM?2W.1!//hCAukbJU7pB),[%%:We8+%Ts?1jW'5RMHm,\+_`h-+A.UbnBpCDEjCKO>6&Q]`I8=N#JnXf_Jj%C`o>F?mE[U#dN@57?Ys2++=BnKnoHA/MJE:./pnYK%-+XFLj'dqK``<TRO1n,W?C7f]MNpFj@^aa./>P_n*"?ooe!sP$H8FL@:b/2/g"5.Z#Z(OU1.G/q$%R?F=`U$js!KMmcp/.e)kg-o%lVK1cs3(;;PHGGKmRYAQZ'V;iIXL#<YQk7OV##,=&GUYRk\p>fO#H22ftAg]lXpm?UQFKOW8#sOJQ?\eRIdmj8O3s!++($O72(bm%($HgPb:0M8>lXu*RtBg&i^=9F,uG"&ULI"dRlq-W^da+&LO?3GRG'hHkJ-hUADdWL>dIoBN=2$<p3Uq*!O1D!F,-e.b(r*Tln4!/%cOg?2*2E>AYmB<KGr/X>bX1g>Ja>_rpmB&F*"`XG`NCZuC4Z;NSZ=mBnu53j.ptenK*97\XR'A]?QRFT;C)L^DRoIVkkl_rdGsL0%3\M5('E83I<%S.BapkjX6-uI'5A;1HL^B3+8XS9k#grWE;)(ge];eae8@Vmlq..@E/k1Lf[`NKQR]([ZA&MR(M@G?bK&IAY<hMsm%MHrmk6s.B`*AQeto[!glEA>cn]Z/O($]RZ52QLnoaUgCWa]R%=V1>qV3.Ftn6Ma+s%??8h$:qQsFY:32]SJ%nFbdGJAl1o"T1t`!%k97d1Q"TBnNki(;[%Cuj?W$kaAhF(-lmk31<[N04eraDPhp0iYSPt>Zc$<7e><u0meOq><\-["`FqZR)otqm0TOq`6'nprtep&n>%>H'rI:E)CT5q6IPU#u53B@'::7@o@2eC78fp8hKWNMr&qH*_OMb\R_/B2oQ_?"uhU6=,d)S8p5q36LLCGHiR?,&F^FjFmb3g*'K?%q5*mjT2nH'+fsH$cn/'pD#C16YQho7G>_6e,X]F'`cW(q%tqs&J%;:>Uim8G=7GN$597h32e"s@VV1A###Kl'W8\R!]9)u!ia)`h%<N&sHaQ_hJKjR:.P3;XTCo%4K<H?;!DgiFb9`kDi91rkWXq$D%?#<be.h4(W2)r7EP7\KS?q/']UBf*:<"]@hogQa>_-sqt"ZW'd%,D*JN[fm!_&kjtkqMSg:Ksb]52%.YJ-V!33XkTac>8#dTM\bk1h0>(-+$S@n=TC/Gm-5jpR<6$#"e([i,2^U#ZcN1Qf3lX>\&df.%=iUGc[l,Y!-DlUSj^iEr#'_cK`uKg`12(:j=u1`g,)TZ8Y,,iCA9MS#E.Gp3Ge5=p&ZlHQMR:N/j2Lmj>)P5H-7=#C.C9A%a>C1&%F;I!8=VA\(YGF,"/2K>K-PLhS=Y2im)Q[.+(_OGHi](>'Om9d)LaQ.D=D\G\f`\YreA-0iJtuZf/BAp$E]sZ2jEr4PoI/5mV@@rq%&F_9pR2H(_]Y#"+2%AE,ikGj.?7l:aB1;)*6W*@=/sAj;&6b]K/jG_BX83aqS6a6GXH8IoTm`0<?J]E[4q5G1OL-?K:uD2N$7s4]%0Cltb5->AU8VCj\',YGV:L+Vr^;P^3H_nJYMha7Q2gV\o`Hn9=_%A!O3dl%;20S26SGcol_nNW!4m"em"E\;jqKBJ\"+(bMUlBJZ%?6rhZoXR?E,a<IP46=u7>sF;)%+7jqG7t&,L'Zc'"QQCI`/JJl)]OUs#fB=qC[^UGd/`@kMOq.$C[=`#+a0aph-ia><'K+Dd3q'Y%QrrkV#JQfm,LkmB`i*7sP%Z$'rmUAQ1\B6/-L3/eI:%f;H9#;%c2nJ"lAFmg"]o3W7l+$iA4DtX\+U81lk('`aIMA%nEi'9k^BUN%bc@V3<PXFlSl`+WS\?!.aKEn;$+0A9_SE[]>Pfn4nhE+Yl3!l9QT]+Z/rnblC#W?k-osK'V"PiHeo<r7h]86gn=cY3EnFbrVdAmc%f7?Y#I[6W^=H:-?75Z<,Vql%MTQuVqf(oEJm6HRLp3oPfM";MCL:;Kc;6tF,<F?.PDsBm`Wp%D;#&ntF\'bZno/$$&0VQa'.g=\d%hHQUMF8H8\4p$6VFPCS4j9h9mngUaa^fP-o9;up^FXtRl(?/*nWQYh809+ZZCNq*FDrSdB9X\YmH$u1S8i,QNA^T,"X\e%u_Oe&R%[a4#`Dn[J_HmSp)#1'2PnnM.B?t229[2=s,$#^]r%/%/4SA^4f7>RcWKo3E0H'3)icf9WcjJC1BXb>VH;spW&WY&f7d(OZP@il$R%NPXk_fWIn+"2kmj8-`<qnND[2[tBP+kidmlQ=\Tg]FN>LL!`fuh9H7bH@gG)b%60Z.p-TA!h4-M<$$"mm,8gr.G\g'K\4jGfMqSI%8iAgXJs_fd7$#bj_!N7L$AMA(W8n0XF5eg@"`jk^[*`F</toLIYU-IK8-;Kui/OP:G"@-PbejE2WB`V8,UCI!)<qntc8dXo^$Te/%C-aiH3HB:f,ihte@)NDHa@E3u$(Xa:r-MiJ27T^'-`.Kp^pV#OE.S9bF-k>U5RH6b@A]Mj"OBu-%3>TV.$@#mdhfa85#8F>3<Br1%JfGaCe`h>d[])Q!,sJhZa\6QbcF?VP!=#i.?B'9R8[$[Tc[L.X^?"n`FB!FGmI?M-F"d;SS)e=*PpR[$/pr:j^lO\8![_4$NpnfA%HCpO5%:me<?q&5`lRIsi%lA.7$B?Dlp@Y.#5r;?X@kYDUa29R<8WG,.bXYa(K/Uj!kbU1o3ZM!ZSRG(l4DL(9ifZ&D,&<d]>dR)D%"Ihdmg%cR)r'Hm+>U=Ck8>50CRm`5a3Y;"f]UjMt-;fn\Th*4G]$X/f'&GV(Ih;Koc'?#--FrK4K/1Qjk#%M!XIe8[/=S7]EtB\/%)I6LGN]&PE8XL<%Xp=C?On3:.Bl^u_,"VDs`B8$9b)B$tJTQXiBsZjMkTa)8=6]?_'rn"QLWQ5*3CaA\UT<\$B>=$kZh^Dm$lMRA%m/S9]Mgbmj$6`H*A!"3Me!I_+b=':-eoLg\ZB\F/p-e(Y3H2&c4'H>Cm;Rq<HP/K1Y6#P;-GSo(gSR>RJA)'_0qj:-oEbTG4s,Nl%2*2;IYLmInYQSE(+E!*g-c6]gZsPb12;E290rYu8c*Z*!KK+K<2-gI`=,JnamKjlS#O.Df!H>>hSF&A)W-E0nKJFQr:`cGfXZ3(g%?#4LMGW<l4LZoUXd"=FrJe;l5.#&oXgqD**F2lKY)!FoT,HJtSD3"_LeDf"(q=VbLpN/j!BJCC/TI0A;"F^A@;=nIOa3\elXuX/q%UQ@]O93Q9ajU<>adb8^Y-=>eR)V;"<clYPs$AZf%EF_m+[\+14o=g@V'U38dFM1/.6LYJH#Aa[+f^]\MD\"(#4fZA`Jlm8$`AZus%^h%4j+]JdH,D->?$a%)*SAW`B>i2(HGc`UHQ38GS$dpGKo-\o*l'W6N@"e#e5[OY6)-XlGD5=J;btVFc']Xh8BXX8QlI_r`L^+&V%(%T)(\KqGuR%@[X:0TX'H03GQ?`/01>,J@@i#')G@%l'72^X2GG_6dEb&]D6*%I;t-jC2<..>XAT6mS:RNG4ej0nb\,^'t$jW2IV%YjbAi!mfNsU5q5$c8ON:&A?p[gEa&LU/dj.<Kr)dYRYoUKk_:a/1l\YKr^A\@e)8NDFm0UY>XH6*t.?GQB"e9gIDN8$nR\i&pRK`%.E%Fjo*j]<VR_*ZPU[<Enkr52Fm]C3+)GQYa.@uU#0K3T-G//>8QK?B@DFZ\:*5DV6]idk46Y^j0\J1`$u8F1+!\ENb^Wr+94jc(%WlhX/_pm$FD:e7fb"gtfQTm\NisOu>@(`J?>63+R(kVmR0/<epC>PcKg,;'o<9&S*J$WN.ZkO_?!1=*Leu5dTE12n$Z#"ZogK@tO%Vi/c@\&:A$(+OsUmmJj"ZRn89"d=nV]%Gd9K0n7ATPG^<e9gqh3h5`O'eC#(S<UWD86fpXAXk5#&#g&TSjj0*D,C#3e59*3*>=#U%$8ZtGK8JLNiL>.tH2$UrBcc^8pjMbWD.3&Gh7/VAl*lS8]K<;MO(2%JTU&>F_)GlW-\I08q-D*$_qs6O9FjX2"8iF%4IZC347qPe%!N^]ck7,L4<NH(F:k%3JBR?p!WO,K@Mn[df\J^*rEg@F9I!kSK97j,*Z4"D_?0I)<9)U1-_%?`LXXi7[!1R=oi#lb>UN\Xd!Qh78%;OgdE6AU%;YVg>r'$;Rb:f_S"!.0;#S_@s0_M(SZ1)t!;f7YK0Tm^4KD"8Ni1bDOkmPKFp"GSt("^D8"i<?3H^]k(k*FXN/WN7tc%"d1AqKGk@jr_IC9Zn6LnJi"EB3"UUJjtNt`p1<F^&6N1!d-LqPi?RgNfR['`Vhq?b%A$o@I+Xh]5c.iM7[8k)!d;3Bo27P*aq*dk%p)Ub"7GCZP?X_X*Y##Xn=^kSi+XoUiESc)bmeX;*0EiUQ<8<:NSuu<5hoR8k@UgR%EZi8RcsfI=Ye`!&Ji*">bTRJ[`"+u!4HbF=%NH?:1KN\*jGoD^2"LW2S*#t'dikuQLbCgIMBG2CY$-107+I]h<FXuHZ8@^]q2OW/bM5`iKb)W"oIjQFD;KruE6@;Y\H>9&WP:O8g%eVGZt.I$X\JnH-Z8]^tG?eg>=33H]O"3%/[-28e5l*;X`Kofb#A9tJ=;1_1T=i\%,>pD'5PURe;].S(>9eBO7O<`j+P=GtTZdB.-%,b@KiM1+l-ZSK4%;ps6c;)D<;AoqEl_T3]T,`GD:/u'6L:@)Hulc;=NB\_Yp7FZI\+8Dc]CA!djq_PhCb"%/J3P#],^mQNE2ku<3%gkKOArQ(TdBOPAN6`=>C7-BhlCF2(]?&*ITF4,TAX/['PB-uCIp4e8WC9(58`uDD]74IMt<"-r2);\KEY0=<ZW/-Wr1te[0J;SRC%=(-TQ"D#sN[ki6^$-NGTJf.30MohkL/JbUd@Znj(OU.H&.Ni\=;Jbf^I%:rbZ7A^re?"P[^n4$Y]QG5Vd2G1,>deGgXQi[R<Ur-d%PLHFR20pOORg^U#DnkCn\-06?Ucl8;<5m<0W\O,1WPFH%Dgtos<0LJ4ahU_UT,r,*&0k$Om2lN3G?&+EpS8SDW6BLmH^pe8Q<a*S%N#IA!UtT-iS"q$3Y8Mrap*sR0Q&):s/rDRt[n?oDP8?/6@6(qO!>1O=):J6:>[$4<RT#2>(OA5Q!lPp"Yg:%E$#Z^p3l`!40/;Sq%b$$!cDXrs>n[d6]>Xm=@k/)ssrU<PedDH3:?uc&@WV>i(N.1e`pt)\ZU>c.><I4N)Vtfo)-TcsQro9Y/J'bY(!nI.B`;8FjT9j!L%8mh9k1g.oS+AA=U\igtf>UqK30Vlk.#lFF$O%/;J-0DcWOr?0>HTb^$@WZ[n80#`3<7S68?gH,'I'&4*PZgRdiZoVLFYUJ<Q6\)_%9,HRGO4S\73a^'R/Dt7=Fr%68o<g2?kA+A3cKSO4)`ncY!ob%RJ*Y5?I&ZH"3aCsW].TF2Cp**#Ngo?\WU&D%>jA]*/seV8Xm;gD%>O-U7lcqOrlEmlMQTAral_TU\lglanFK+<7Z6\S5YC@/EYM]?BLSoVY(];fJrUBOJDnc8-qknr5J,8<>\%h_;GAmN1rn1'-YQ"44%q]GgKruaIQ`F&Q>q[_S5oBt@Orqu0XJ$;09fdlrhs83STAOggo_>`2-J+os+rV.a9^\rZ]B5TZBr-&+@\!V[>>GUc_^IA(th]i$t%Dit(f\&e5lnJ:*J?OidO+)G*TW$Z&ocp\@*P/Z(IC>>pN$[tEPS['2bX@<No@eB)%1dK\L`BXrB5%+NS2>f94mU-'L$^C$4=NLPT%BGGjK57U<ZA5oqK$0O#U4W1d-(3H=s<%n0rU;#&uJER#(KFQR.3b;^aPel?j9G$']E#LH)Fu?O/fcQo*aEXkAW:=8+59(J7;.N5+%]UWkO-5JAbSO0if\d=>.8>5"fA-*+30oecLlb<e\8#YU?8g>1h7c_^_@JK\P%&f,aEf5u5&N'Z$4uKFn5\D+sdp=W)[c\hRM[5Oo%&Mdes`Kmmce+B8=_6ecAR[I,J7SD^1L5B7adHa_@BtnVaEr_[2NB!=gC`L2gK$LYF&D>C!.l*^(MS\:N>t[5g%l!4T"!:n7dHGRc%4;aVI(qaST1ni/ej1%t.d4Eb!42BhTL[>TMLX9L-YOD,.5T#hV=c@=Nd=d*^Us2.TamX?MMB@f6IEADdKgm.?*mEk;ff&s<R_9di%_u*=g6O`_FaWs1\'e"&1#(N3uTf\Z>p(eI-V9>/<'-'Oi.EdAM&8BNkbB+E9m&@@Q\fCnK4Ge,VhId>7],lnsJHPNr_?;FgYWCPB%hUJ4tJ0hiWfleckcC.e\f0L8aY#9VuXtc(P2%KmJHHI._`5o@th)hdZX_=\rB=AeWJ'e#!'NjT"TdQ3=ZA-J_(9fc00.,J3J`)P>%-+^JRGT?pu'/V2_BOs,2KG*':UYoTsD,E?=g6gCb_Lg#5c&>P)mZbZ^Qskina_f+I47*];Al=Mi)(0sbXk0j2',g.%cCCMW#qq-,%[FkFj"'V@f5NUaD-h*O`(C.*h]`obT3a`2=:RGZ^F=M0M-@auh7g+0?n=a>)nV!j6-2/AnIIWA`L:;Mr$*>e$r2<CkhgWX*+;Rie%>JpXK$WY$!G%C^[c<slWV9sq;bC/e;_B`&-JVM9?L0+L*'f4"5X$Cf0WIt^D9;(eVBWtQmoDN;45g/lpeBkZNTV`E2AR]t&/K]DP%%*_Y7>7J@kpkFY_4S0OKLMU<*oNQ3rW/:b(HJ]@D+q]snUgkpjir`=L"&s,SM(Uu"]G<;C(]h?&?s2a`ZMA`mkg?_-[P4u:AMsbT%id0>AO!ait4a\p7lWh.b4Ui+!i\;:JYErT"bM/[0-p#(p(LV5$95!SYroW35=CU?)Bk(([5.DkE<MdV@dt*s"gU3_l'."I3/!#d5%AEN1>GWPXsgGhV?ER_;?-BHpMF!eNlW5hB]YmDO0DHun1#u%fVSk/Q!X\]N"SVZ"O4p=N?R9D$pBs/C9a3+V51h&ehI!!aJqYJR8%@haGF(5a&"RP^b/D=0rY'Up!4b%mP8KH3lcUSJ?2:Bm46IjZ71gl^#VLWq]4iqIC4:sLKK2Ghs$<[.O9Br'*2]p:=[9d//?5B'":%8mDAnZVeVEr.Ch1s!mfE=ehu-'F'>iccaq-nM[1^gLOF6^L=.g+<I<eX9EF]V!'c4H]LoO!RW5h7ReE0P0Pa^G#ui%I$41t?V`Hq%#_GGXCq^lEW"!eZ$q9T$g;.sM_-WG^!AgGd"_XZj/>e,a)j!VBFdQs=Wh2*hW1>`l+\-?I+#0[CVN9K^pKH;lEZHS&g@fJJ0la[%%(YGL%SVb1q.=R'6SA?StLq<iS`XX??A$gm-_`.1#&YXB$XN%\blMc-lFf20$S"E#05'3E)b+mk6i`9H,Fr:h^=Nh'>Ba=RK%m4T?%b/!.#Wh<:n6(Ud=#]V0o;A&A_5uB]bi'`U'm1@r<$qpl$]@Lk-^(,HL1#'l`6?[q&Pf9lpp5u]C`QfJ*8ZrsKnhrU2YT63jOgE4_%:t//_KH+Q?EVRF<K0E.>[i%cM).n[j.`)FGfFkOFdBf`=W"7$28rE60iBE]LX(%YZ68CCnk)S$oBF'eA\l/E>5h3ZX6Wtd[`6c"b%UZ)bWBS;39e-@fb_W*HH2DqM9on0jbi-&BdC9Xn+ScFFulSY=]Rj2R+-P152G$qst.q9e"<;U%,;QN6!f\JQO!@[fYR:+/tN_p*D%pgGu;"6<9h2!ean3Z7poaYO]?G;2'&-9U7#XkL&6oQMS["Xt+H"[==6+$,s)';FGpKLsNqi=OYh9`i2P9[/3me\ME_+<8&@^R5DX%@jI4s4Zdh=K*"A1&>(O!$ZJ@+!20&Oct&?k)ahVW!a6WH6)]O8+6lcEl]]@n-5DKQmD"``'\m'=LG1TOh%_8.^l\V?pYD?L&J?Dp%PkV:0.^)cVGV!gU;M$:Zf(7T^0p-=HH7s'?dEe<;X13q:Vir<IQa!YO/PnX@,3X5&PGq,\dap%6jJ.cZ"N5R>n_f:K&C>&c^'?:B%5mWuJK^lO^DC)J;)Pc93/<J4@Kh'fh@o$<7o00:['sTuP6<=r=Ru03>[Tadgh(RFT@[l&`?g-g86e;fqMNq#nM#mbRa]-<s`*Ep@%3PufDa32EQ6:"^EPh5UBie'F97Vok=RMdEo3qeI5FjuLlA+&-c.SX/q7G*M''3[nX"r]Kd@bHP#+m$B^P.IMEWqe+!]!TJWe"gC"%U8BJ3pR*KONl2P17AP-e&UT^P!0V[nee3uPNY)4I,ND[Yfb7IqAJ0Z!C6I4g'*R:HOj.$WP`/T*?1#EDY<PKR/-Etk6r/c/!gRMl%6pq\_'GuT.ZmBZNRM>`=H,BKLK"\Cn2[a&Z8GloXnPg">$Coc.(UjXS<sPB*2Y6!L6_tN9S'%GXQt0'eE/_6rI%h.+$(/?.D?Mei%5RJL.hoadUj"UtJ%8?,HB.eRH2Rn"'`d>Z.P[*#I-l$iLFeqRgHRN6H"226B8A\d?#fUnV7Tr<*!lDfJ,b-L"),+X$-4*j60ir_9%E\Kh5<Q(>L\qZKfi^EpKir7"Cd&i"3T%SSk.M-a,p[IT]6=usDP9YDG,2dU_bmkrL-o;06=E#"9]E1&Aa.UV[Y*0\\JIfoK@,L:f%d3^*GK>gGl/\Y(%-()U?14n:ZlVK@7LT,Gb!mo3@A)tF-ZKV2NHJUu.!U5.tT>+`teI&)/Tr_VHBFr7g&A;l\Ir%Nt6+m2#5Nn9T%1XL]c0c:Jq'^B,_l+s5O^'ZG/C9[NuoIuR5BsJB>X&b9G$4X'r@G8mgUOQGeEaO()`0oVWbi9<pLc#biWQUVj]VcSGIQ=2t^.'<n%lgYSoU<pc6S^VlngUk.THd"DW!f;H$&ZK)`*$MrXm#?AP?&Z]G!c#!YZ8Q$Cb:sI8k_rsr_>I8Njp*\#6ti9(=._]j=?Nc-oBRD?%:4rD[5b?RJ5bn0hc_@V+:`DE.Bss7S.o#:EMU;>@H`Vb2(.U2."\qT],rLgl.r+d@L^mEu^dnU>;]&rH_GHa(EU'9u1-suW)Z%\>%E#;nT4M+<Q)`&o3P`OFi6qO/!!4,k<6Akr#cG6*I%W<8eK47bTDUP=[T[C6_:3_mj8HpRp,NeDFL9Rm3H"@Xk,Pjs>ak)Hl:(kes%DtJ:lp'fVZWrAt_$ji%AB]\D<CFSCnd+oVFqU(GiOAs5IX-X'kAuK)TD<l9]"+!<)TNi!SLI:?76Oar_N=</%5B6*2k!dM9DSjC[%&NpX&.#?tUF<debD4TQjCkR.^XBTD#OTFu1G8OL/>oC`)rJ@N/FgggFYl]IZl1!2Z=[cA"#qp8"EA1PG'l'q8/h$O?*C/q]r#OIg%\fM'4iMNcD/4@r3>/RQq1,@D.+UC/LZ:KT<iEVXBP"MD9&>Y8,C:LNp5hD^kX5V?W8c7![L\k2cqp\*=]1OjeY+pC2"CW!@#[s$C%%$0ABF9n=cnnX"9!c&i7H`#"`/<s@!;u:'T7E)uQn>g[p:LSbn.655g0qtI?,XtTm*CPr?8Sk9k0E;-"42tHgj+9bEEb/Y8\NQPk%_-VRbAaUlU"4n2$N`"E-$Fr"sVj)%`DBTh=#OA09I`/!F`TYp0:Y3hY@UcghTJeh6SZ.GQl?]!0:pn]Ve9K+s%J`]bhp[E9'@=Q/%Pn$MF0#%qk/+C41a&o3n@I`LpEUN\fn,X*E9QD1J-B*WI"/)aXI`q`@A-NtgaHVeiDG:!uYsH"^-`;S\,tUQ/,J&-^m2C@=DU\rd%(mh+&OX,.sm)3N3PeVd80Sj'2`WEe(URP43f:?4dal-2K"AQ6k:Y1A1Y6S`NW^^R>iCE-jTnSFBJCdTKg.X@EdRqUuX_=FTICcSb%1)#J>aF?gcL\F2c;]NKoP^$M=K(j*e"7!tNL_7[([7U8EFk7W!!M?>A]_R`M_oH6[ePs1A:qHdMNmoNE\M?MV5/#AT7[UQ65Y`\.%/8LM%e$)W+.X^gs&)RN/XPsUqNfqf[VY9]>c-0s8-KF8o7^QSlk=AY`',4'\*2HB@r#dj/BIE<K]JCTG@@THH+/FN%,fo$9F+uRt%dZ+PPQ[OqRJSCH^1.+b!gFuqiRTF!uX#e`I1r-rg\=HDb[)WF[BHTKET10,le*mUR_l$jq#oOHs06jtoZ8`1C88ciJAWa/hXOo(^%mRCXJiDmuIK/6pSHc9T`=,u=gp4fBJ%):*2N?cL"(n5AFI!mAdqI&;%)H\n)'1K(aFU!p>Af62!DCGDdO>1E#,]<bSo/(9GoD[]9%)J1^hh/6[7]J-nQQ\U4m,jB/GY:3@U$rD/5de8TNjcL*3\"h'_&aOXeC%QXN^O*Do'bs[?G$rZR74.2umR;]_K!<0irX'W9LM@K<%SpiS<M%NU;Z!nk9X._QW;80YLL%mc'O**rI33]KXE*[,?er3X_kMk#[=q8hq036M7"99&"qKN7qKW#YO>OPHfTUO#<X1ebR'Ti:W%E?aMp8P,ME>Yb:\o7$#l#9SooK5-q1nfe1m]>n52UYG5I2EKI:@f`@nXW)p8#Nu-q./F;(3tbc_;hf?;nmJbE*b\sr5j%*LTN-kg%>*cAo"2nU*GcM*>H3R'2N.Ad/.n1#EK9Vrh.`rJDb(dRaIh=(3Nk)_D">jE;K!>!Z$%dJ%XA91j*_fCt_:9m\'P'*d0i[sjI2IA@%p<TaNaSS.",(0f[,Vs[+o$0p9Y)>o!<KlX>MS)=PEcjOl[^X*$7-,QCg?F6HVi-W@d\7^+f&Lm$PsTN<6<`,>U.5;c8q[pj6EiJ<%Mco.UifU0a$<=<q/uGTC7C=T##Up`UU5$iG5r(/^e'YV!J@W2##,Z$t2!["@(WP80-IFdYm-SpG8d8f]'Icg8c/[CWo*B6J.1#k<%#PI3e5.XN:/?b_H3%8H_`&sfnC;.;76=!\:@pP*T'@g+)b[i^F&S?X932`$4TJ.ZQnU<03D](i8,Vlm@Y9T9]acK/@?O8TO/oLHi%9UJ0-o4l`1.&R!g`BlC"QO/*2_)W."]3J;:(u)0()hAMfW2hN^*+2A7rCpO[qV`GS4@;5JAPi*!6Zc:A4Ul?I03klTM4&"P5"=dQ%?O(kh,e:2oQqf:9RS?)t9>31oC22no'%4aTGpc.k#:r_$3^<c3Em%R^MPSN'5bV@T%,ODkTF]DBJiu:aEWCTn?%u+u#.k53fV"_5%DUcJM_ar4Fh[-t7_&:d8`<>!/q^fQrN7G8AOO&OAWX3lCm,*n;jIt6W0TIQ'Zlj6J_D;>!.#<Mf/=K;K-o1iN!Du:;;R_8+"sTZ'%3*)305QrUtAH;lUNPHSUU8iKC#.2n9^R4fVKUG4^?A:,<N5jA["HafR&XAK[;>9b%<:u1?n*C&(kp40GWNS#N999ic3mW(=>p\!5%4$Yr]6$X)UhCO7Y6f8QsM?sl,nCJV?-=+ujT^kR!#1[%=Ui4F%a[Xej\F]m@Lrs6_OfBC3fTa@+O[9<s%RLm3*_lQ5NG<GHVX@uJ%$,7@*EV6H1*GN,"(GkttJ@30=jB>)0Ts.t>A3,n`7S$H*5/a0k*$Z:c5t&2)*L'X)md[\:'6tZF26sDmeqYuL-oA>Z3&*t?b=A@I%"'rj=-,5.rI$U5gI]!ui@Tf)%CKX>/j(nbf\"/mTkj\a#3PlJ06%;`dp>GXZ6bSrfMcfG2s!1KN!%BCf78X[Tq;(>OnB1ktRX"^"%_kIUF-p$*[9\@.#Tc"2tOIkrXg%#1e;N^%f81#aU;T/4K$kk=6M5)5@`sTsCiJ'uubClO[/3ik,4KtLZ`^tS3:ViYj:l[km9W1oF%KH&r0J\f;8!rG4B`h]njkj[*`PYO]pg<fADNG\XdWtBT$S3"">rk!KSmkTu(FqYu45l;1.Q3f6an:q1MMQ7'01SB"4Y\&.-O?4a"%#FWYoQTeCF62sUi<12*BV$G*rl'$Yr6HV$T?gGPH7h7?h(aJRKnY6[4*`QP:Ig@XRbCG1_4gD\rl67_GC8"^_Fst]G1D;kIOdh$c%1sEI7/Ip8M4nQg5K*mD$)a;V+<%rto69h3S#q[]$UhnYbq$#\g'F0Ogee(gY.T*8obl70_cpgC>SJ:,"7)d9>!FrReaFJ\W4<E-#%_X"N7X91"&C1#sN4rJpeY[7M^#`$X9)^A1='bHQu;KOku:o[7.qH+ltJH@4;-0lDB,p?YkFq_`?I5A:udhVe5rN.4ASLB).W-sii%Pl+LfdhheD/ZRS\MPp.Y;A<;Yo$ahIPI$aW$r9Jl<X4u8"+V]lG6\AV3iZEs=VQ9>#GV^P8^C>BC:?+L5Xq!32b+`%k?rt!Fo<jj%/s&Ee.L]`PB-.*_0o_T_G,*^,eB06fJ6%D!M.g7fM>;LW-Mha5ItA9f:5BZK-'VSm&Bpo'i4"TjE*;`F,a-$Y5k5O/#uhjef<gJd%@FX/h#53%/4A=9b()#a^Bp?m1-4N0&6%ZBbN739.g&`\u:6+kAEpX&T^odlC\'X%M_=]2.?0L\V3W*PXVW9*f3"o.qYad)-"RW=n%$_:frNL,Ps.cb>2@+bNQ?q.j_n2bAV6Nsd&Sd"+>Mg++NmRIp%/Hm.b]$T1L?]C_,l:Me_c_7D%S\>];5Aj=W"5G?(i"/pt#hqXg%9mZ4te\dODBX/7D%Php&fD9X4i/%ac%p0KS$@J9X=3e1=B9<*_0j?*3KGbeF#Z@=,!Du#HN2+?2P=[",,QEl"dl\NpGf"=h6ZeUa%I[l<.YpP\aH"389klDh8cGrZKR._;oLj>sHefm_6qdAU'`1JF($?%=AXrB[s#g*k:/]g*@Q*UY_B!+X\@QJAJk=YLg!L>f3b:it:%>FBA%F3gap:$>Gkh:H)FJs<UF1')9OOb"F!Vo+82>WE'4FU']PD$1bJmqia-<79<G^/Y6')^oV1S:V@B(3Aj#]Uld=Oi;^9"d6R3%"\dEj;_c,Kh?O^t@_n6ofc0bVj)l"4gih,_SD2U>-`o"],C.*V_20=-_S4Tu&ajEOV=%PV=KSJJo[Y6_TcNI#MG5c:h7=Wh&mW<"%P1ru6HHOR*9T\1m,fufu`8%+"oW/TEg<V$6?-UhBjt/pQSa:H+Z41H]N=mi(DQXb:\VqYL+idl"A;ajZ(XfqdT1+/k3\(fjQ%/Jp%.4']SaBSb^UQI<>qL3r_6ema?":o<5H-MU<B$u[Y*\a\&a%J&\GQ[-LGtRj[bl"/FUs<SO+PuBsJkRqFWb.oAC'08H,$n-FVtnL)%5uhM`\e$9!&-I\]Mg/5O?:%XF-EE./clZ,oZpP%nQKaFfj1LZg'ER]Hn8kP@Q5C+nfWkLe)-$_YdmEOp6pgJ]b_GM*5Igo#S)&Wi%U/L,2[2O68s(2.$A<?Mtp'(*=j1&8HDFW:arP%;?j/#e"RSl6bI57Xd1V>[)SZ>;p4BI/p[tZ>s_s_-3Z7;E%\FV^!0PHg,NLmAq%Uc_PS%kCePO=l*WSSG'n9ZW)P^iYp[3?(uk]0R-^e\e12>8`lIPR4]`P@0;3K*gODV87HAWEKsF,,B<tc.6>l=J&6+IJJ]+$gB_f%gZh!QU2(,;Ih2em5,SUg59cDo%h8H?^c4"!N!31sk0c,*\@ZGqP$amYd>dMQK2Y?<-XL#;&eF)6=qsD8A/Op=o^^Z[1]WBOnX3__%5guSa!T!RA`f1;2OjLk:1:8'X%n=@..]meRDgi]H#]Qo"'pX*0<'I*FV$8'b$5F\7VD=BE1%Gl@5WNGC/g7BTY'oXea+EN7bRkDY%[sR>f'jE8)St9DB5!^X%GOLJh"K_[H\pB?s-N7uj0*TU&e!YWt%b':Yi,H?Q]Ui^Zfk\3qYL3):gde2AC)!%k>S#08(D<.lT8DkN%k#i)E61G;#Y:uccVU/L+T>rkK,llYq"t^KD"e?#i)9^uc!1Zfk,B4Y;ON^5t+[j$r433>:6aW7<Zf$2Wd]Z3>]>luH;LqN?4NfA3%58qp)TYF!\UH,Q9l5(<S!*;*F8.3,8g)UF<J<aRq9m:$^,W"9h$INuDO<#>q`6*iC?SKu5C2^;p;)-NT]"Uk"Hg-c&*2URs"e`3.%IC-JF4,lS#jgm`aM=rFS2QLd?nL,So1>B)%;uk[>.DfFc&>hhOWB((e4;f8@IY2rnBH9\(\;5!L^F9V*;Qad#<_LmFrPF#2%88.%%1`s\"f?j`hB$/H!XE3<76rYFoR8,3Vhc+4C3WcODb63rNcMeFSAN%-RoRQPL^p,qZFu>Q?pPXW?SCH$5kU=bGm/Yi?;H.iCL%045%,6CAX7qteV#rFj*A`C(@n9b#r+B^H2inh"h1g-_Di;);3X#HAj4?jN!bh0lg3fYQ@';/Jn(u1ZLY[L<1D/G?1FlX]3V@QdG+A<,'%dM<&i1tT8UC&.)58BV//R46#+Z#57_U5A<,=PA;(;"^slCCCF/=/PBYSq'k'<dSdB$iNW9'r6c=%OQWL7W6c>dY?IO;j`$.oVfsc%'nAF$k'(a-22MJlTRga@M1@,tNq@`3dEN3ETOlqNB,Q?$Bg4<_As"R,pJ'6_*X:+V2'Aa)!&5ko>r5DR-<,DT%KOE5?hhGCZ9K(7%nM#B.dAmj$N4^)_DuD<"/1AHf6QG_%U!fD`M5QpG=rC-UGtj<-4d3BR,TKi*SolmkG%hbfF1:'ikba1iC*+Yh>S6#9%6]@5SBn2r%d/"`W8:)<'LuH<LF#'u]1PJhO'`_@ufMO>)=,@WCVPZN2!cB[oY5Zd35Fb!k%fC`q=tVo3#/iKO9n\1i3@Y"Zmpor8$o2<9lm"n@%*CdrqRUg%9!Y"Om/V:NlP4q6&<uj[:NN-TA=fZ[E<GDn?!Z]sWijXU1gP8IX-HqM<*j^KYq*NGkn'AbJ8:6Vida<Z7m"SP!"&/SU%(E3_/bk<3HUoQ2t"7S=+^6Y)hR7Y6uN\uhf^Y(80eF"=+&pH$NL3QHeCE(aS!iSUIl'Q&4!aCn.UkdS+)JARBYF]F)8!OdK\4K2;%X$_m8X[-u0kb6+P]YGsJduJ+G`C8U0dgub7MdkcABf1f6A=3h).jh$oOdW8<1%/M7R>N0Yr.XhN_MDopG;jKP_QT)Y?SEX$LR<V3%J=@7o3.T4+#h-]bHthMG!T9b94_-Z[K^ZiJBrFBO$Sk>mO[G.hQ_Z#4#K>%@]m^P6KRu<XlPhTohiU;P*0#p".r_jHjliVkVp>W3%fO0<mUVR?4n`KEajqAkl'6Ng'*'3_Z+DD#3.e"&.*>P2ur>@Fp8@R"UAHj^4j9,V(j=^U):H/^l1gYSAYfUpYVr)r?Npi%4m+[!6%1c=fDFktPP1s9%O]oes_J?G\8S4`$!M_0u&\98iJIrLKMfNsYSM<()5gSme9H3g<c'+2qns48H.9aILm=/<poTh=IsU;Uh:'a+U7%;7(j6Z,C$3/2mk6247;TXcDQ893`:m8(6[t6K#M5:d-X>7fE^%.C3D]T^;sp*b"Ue;'R7TK9iY7Z;O(uL1dXM'7LnFQH12""T\C_%rSOs\*D:]b:AD/IH+HHfEjMA2&Mj=e#,Ln'ogHR5EYp.9`KbOM:N^.5LhT,gDO/aV-b5B$ISFU,>##VZd"$sFI4])aKcm'4R92oO%,\=;2MD."e=?Hk"fk>[!NMf#,T.ZbT!k6>f&Zs6Vpn,%Q!;\cK=;iA4m;BJ]FJWhMD.;?R(B_!?jYh@qcg+$\NTripn6e8Z=(EY6%EB/(677@O32Y)Cl8dQXkhluC=0IS`d5?U;L9gf+XPS/eX+^lh]B'-k%>%[HMM^;rhiqkq=kB9"p$^*d*9mgreSq+$V#9kRtkOk&p%bY2IM6^n!d4jb!WSkaP-]CkN"J%"68W#MA\e,BQi91\Wpk$K8>KW:jUm=Xo.qnORC`q[((^p\^_IFe;gU!6WV-8jN5qU!^?phnS.%3A-A%0*PH7;if*8/]Q`[EYjN0h=?(L5n!lk[[YfuT%`3h8;O^\;bR2/7,tYoX'"`,4FI<r^HTs1Yh%FIVtjflplkNjUtdVp3$oaJ%J].JrGWm\q.:BQ.o;to2!-E,!+ihRXi\cUNFsuOFbDgF5<$mDGRK(RQ`R>6CK'aXSi9f6sd*R7GCIU#eU(d6\67=fbf'86US'4bu%S\U;9;I?"1GDheoC[R8q(0Zrl`@Kr^Qd3X]q(g&3)25M7%k!l1Y$R9+FAab;SlZFZ.o:N6E&F-r>-a?cF3(8afA;/(f7MWUntX<b%(%OI*4)2a@;Nh+p]J:[WA,3Oq6Pc[7D8oBOLbF$96o6jg8["=:cnu)T?;CP[Sa!4,m`E*6bk,I4qG[#IY:"!g7,Ob4@GS%5iTaf9%$lQ4sH6W=oTh(h=Q0M[O95642T`)H`'W/\*5]2.['eSFLf'h'tQ.R_&=?q;Y?ZtuA5pd75\msU"*t)T!F"GLc*S(b[p^ZAn7qZBs%/mi5!LVp<LG]Q\H=i>P@iJ)D^T9^"pG(A[=`3BhZA.(YP_R7k#q,"UhZCG;5@0?eSLQoeT!ZG6&&LU]901!XY[JUm!"ZCLP&PM^#%j2LH!>?eopMR6d3\2f9-S7M8HWN2Oj<[9nkC-^b2cV'03:QYJqV1<[ER1el.il[cbX<!WC9f.0a6N6F@7W"\G2C_>aCeR=_(s5:c%/8m`j_W0@HbGRNG:87@>=]u0)@4:-f]NMm>n[;?^eqEO<q<X-c%^PIuH9<k<5Zt!GU2?E]B^$I2dV(ZbolrqVFb]$+#_]S"l\$Z=%P"QqP[-OZ[5buOh6nP@)&I(*u<]FeJRF7$lT'^Q]q8Iinbeo933:J6i$2"H)1+!]fURYDPJm?m.':bBOcec)E;liF4ma?#S(CK5s%l>L-0s1H"8dP=a!$)m8S/h\N=&GWhLbkht?nFkNO$4>T569b:^@$:K5`$X:`d+(WMB$Kj`\I'XQ/db'oK?*'tH%M]MI5^Eee>=Gp%#gls\(<s[8\_:hMHVak/Z(+U,$<Xa?3E-*GOQ1?r-U"6U8-ln]*qd[RH=-#K@M`6gC'q=3MgV1OGBCiem=>^D6-qu8c02uR:tZm0%^j/(/]WrYG_k8sYGL.I<;nFZ@S*ai]<DYr9rRaDBL\7_eas>3;;rQm!"t0Un*5kAWa7L4*qnsk@9i@(Um0?[odbp[jfHsRl;(46=%RQV8V"SlK:m^=&CLp4Xe21qjUBmJ34Kl<3rS,2Uab6)T1BH9RQ_VOe8:BtN.[?bU!f8%a+\3sbBD;uHY,54NiUenX^cg-doo765j%YP4p4bsMCf.ITMFe(B6Qcl$a%MSl/fm^[R2W4`i'LSE@>rF/mhKCF^P#'jH<iH-EB2@L>WCp,C3@$3E.UoDE-96P$mjXX&q<6j$q%%Kp3*%2'i(3Cbr!BUSX^U>EqhL0[("65*joW@B,ERS#'U8+.`K\WjFt41bB'/74"Q!Ld:X,"]O()$#NRTH:%mo=Dl'&2XoOk&R?B%o'Wm'Pro7'D&Q`/SsL;:dPSdSg&C1o*\iQIW=aXRF1nGF$CDGhZktVAA",s?W7`b+a`VKNBKd2DNBqj'lhh=)(:+Y_OF=2hPY66W%*mU#AM@r2-)ls=comC(C"SZkj[`)raT3#"T&.&HWEr"jV5sL<'VSWlZ71Uo+[(J!.";a2tfdSiA^*bb!]^'Q"A(hL[[T'7adHPG(%Q33p<0UL0@#\(5P31OGVoF`_F]q0eN>\.*)4EX)a?0BRW=-prlBFi53nJ)2OnaY*q:7bfY71+31MiA%<iu<MF)QqIq::5ju`89H6%W+t^NJNCPs2FZ`JJ1?2Q[r3CpV]hGKGO#cnP\iVmXun3,RMe/bKopb(-E-UKQZu@\dgCR;!3q`QF2h#S`6Em7i[tAd@4X"n"f8:n%BcC^c%+rT89pCP+"J^X;jP>\;r^^E&/'[l4CTpJ;=N;cK/`XL<+?!6sX&CG0e!_JR?u(N'E1dZJp9\#*@r=mrhD,=J"Md;,DL:@Z%[C2dhmaJKn*K"du27E8hJcul9C-Ab?L(,21Ada7(#(9`d[<u[6KbhtM6:51,`9oH\ok'0ijYL'Sp->u_Dq5a@9A#+n]5Eq%&MhP)%5c(:D2A2.YkRO$Q`?brR'G1`q!/4EHYG+mPT]Sa?^>RM`(h'Z_5[il7I9o]0r*p2tr!)ARpmjfLI!c#f_dbBF&5AD$2ZU(^B[4#?%F7ZIVh$jgmIE*VtGAk:BLCdj!<I=`?"t[?ZOhdSDjDfPNbuNZ;W6gRZiE@MsaG`g..>rt[i'H^h^c:JeJEh3J6tbe*Pa@/8]NN\D%Ck9jcA*5.tY5oP<iL,M#T9g6QBjET:38H-b?+MF$KV.L64(5BDYXr(nb3+/Q+iM5kJGF7ulYfg'?SgX%'V:41:_]@bX<NBt4#/[l%$6\`[U+de\A&NP@f4TV'/)2a?h=g)r2^4Od,+uR&`Fr"iAt$'?L79JZ<2)6CA9e*c-&5p"R9YX>kD6:7.R<J4+k$eM:2?F>\f1cK%o;3d@7^Rf8I\k)./F;t7.``Y`?hPhL,dMHH+SWI!\'Q"!@o/'An#>6^()5+#^i:r=I9A\+HMqOi<@*ueQLN^f7t%*C[&HQ9=E1&\%kRAuGKR2[h`U4[RF+Jr-*,cB7'LqG'BSW'$9ERWgl!.\:/_ibAOG5O(%gQK*pRuhS&7V%,(QZHd&OI*jR0p(3')[]@c%`I:2>&r&%&Ah;^@Ph$mZkXcA#Y]]?_a)'-Z0-CL>ogMLLNc#H\r-"ZT]Y&lJ4r+Ye"!H=H[5nt<naVunp6<m3#IdF[7j*Ggir2e7<cbtlqGUc%DH6jZ/=D#bDIU<a@mX&ScrP%&H6C)aHF/(N:.oG:L8@E`768"i^e8#/\>QOerGI=QL"!D,K/X=$.kH\gk!5%Z40L?;WB'L7R4`==%6>l*qii\Fk\B/N&nR,$dfmsks;)O!nE-a3_):$20I0n,l#Gd'so.Ge:#-.No_M_G%I"_HrLerSDV;Z#]oJi#H#ZV>2p]J+[r>6,Q%s.isN\X-B*M6lNPM/t,:2n=VW9ERbkLre]G?9nf;c=@h3@!Afi,JOZ-9>!8[$X?_tMg+QlRo]TW#Y9hTY\mc5kI;gue7A;Gf4"Cb%hRI=%:;BGo',,;K=?6shXpb(]f/`RLNbdFg]+mkFcOig&@Kh$*RY.Ts3-.i6LaN07`cgCd]0r0c]b/-;2D;8-[0K#eWd<u%&<AL]%32oWDSN3?gLeA)"Q07eQE,dZd!92L9AE^BsFV%QOS2l]+.Mtu[Oi2,Jl4-K<>)-$1QVVZo[G*<&j?k`jp^RXPOW:81L>TWGoFdNU%JSXX"h5&baQXjF,KNhMFbmu/(/2=f,G@2RPh#+sXDbt8Y^//LAJ*(7LVcNl#?rRRq4bMDVQdcP-Iu??*$iLM,0>We;D>k@QT&Rb0%Xi_`P3$MKql([$ZF,C_GS?+tN*AhkA@V2r3*]\;Xbn@p!7nO-5r_9Nt2E?P`#i)p&5gK)A7<=1S=B]QN).;Y`CUR&Tr0pbPqR<ZB%ro(bEq=`'gDr6'Ebn#;PqFCE-aMYage_>$!4oP0A?d,ETI.sQ55C@_Pq>7pSs1:K[rVHJbIe*+AB(aWfAbGZh+$R@;c400.IU2D:%J+`1Nrr'aKjPR?BjkJZG_]K6eCB+)9MQ8t7X8:kKs8;1ADuT=`YMOd(L*,H15I:B82?2j)>T^po=XErL^\toR`M]p>AG1M#oi$4N%6kYSPfGDEgdHId%7YUV<LkG0?#X\5S#Dl@lmC,T\?QP03=O7F4(FWR$)*QjEMi8.Tqu5,as3Fb2Hi!%-IfKB8^]!$?m_=8CiSXZ!%K"0oc)6Zj4e(dB6!h,W-1*2eNC3<^pT5)@Laf9ru8;kNrq,49Z*WLUo_FJ1uO%X.Pb(K'GM^MMk<d_fh_G0lHb_/.5r:4Cil+56)%puUaP?Y"8hg]-]irUT-TIe<:dlG*;Lmsk)TDuTV,LS+S<eW51OhnT!)gL(!Mc+!/urp]1`J,\U1IJ`Z]pYY!:hYtXrc-mb`Gl),X%_m`EkrqH0e_4T@eg#bNqd=;+]IsUcP!930<_Z~>%AI9_PrivateDataEnd