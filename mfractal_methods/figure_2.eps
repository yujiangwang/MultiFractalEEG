%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: figure_2.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: Lucas França
%%CreationDate: 25/01/2018
%%BoundingBox: 0 0 1121 881
%%HiResBoundingBox: 0 0 1120.8975 880.7120
%%CropBox: 0 0 1120.8975 880.7120
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.1 x249 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="Ôªø" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2018-01-25T00:56:21Z</xmp:CreateDate>
         <xmp:ModifyDate>2018-01-25T00:56:21Z</xmp:ModifyDate>
         <xmp:MetadataDate>2018-01-25T00:56:21Z</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>204</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAzAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8Am+q+YvO9zomjX2jfpK7u&#xA;bC+TWfMywrfGp+vJBLplusEEsdwsMfqxyW4ZePEO1WBxV6b5KvZriTXYBPNc2NpqJWwmuefqiOa2&#xA;guZImMgD/uZp3QBt1A4HdDirJcVQkmsaTHLJDJe26TQh2mjaVAyCNFkcsCajijqxr0BB74qvt9S0&#xA;65nlgtrqGeeEAzRRyK7oGqFLKpJFeJpXFVRbq2ab0VlQzEMwjDAtxVuLGnWgbY++Kry6gqpIBbZQ&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1120.897461</stDim:w>
            <stDim:h>880.711914</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>TimesNewRomanPSMT</stFnt:fontName>
                  <stFnt:fontFamily>Times New Roman</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.01.3x</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Times New Roman.ttf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>TimesNewRomanPS-BoldMT</stFnt:fontName>
                  <stFnt:fontFamily>Times New Roman</stFnt:fontFamily>
                  <stFnt:fontFace>Bold</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.01.3x</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Times New Roman Bold.ttf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>AdobeArabic-Regular</stFnt:fontName>
                  <stFnt:fontFamily>Adobe Arabic</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 3.005;PS 3.0;hotconv 1.0.72;makeotf.lib2.5.5900</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>AdobeArabic-Regular.otf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">figure_4</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DocumentID>xmp.did:4ce07a58-5477-45d2-b95e-ce22648cc46a</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:4ce07a58-5477-45d2-b95e-ce22648cc46a</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>uuid:70311968-0015-8248-b311-fbb1da67765a</xmpMM:OriginalDocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:5aeb80f2-fe34-9f4b-beb3-dc7afbee62da</stRef:instanceID>
            <stRef:documentID>uuid:70311968-0015-8248-b311-fbb1da67765a</stRef:documentID>
            <stRef:originalDocumentID>uuid:70311968-0015-8248-b311-fbb1da67765a</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4ce07a58-5477-45d2-b95e-ce22648cc46a</stEvt:instanceID>
                  <stEvt:when>2018-01-25T00:56:21Z</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -880.712 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 880.712 li
1120.9 880.712 li
1120.9 0 li
cp
clp
.452148 19.5449 mo
560.452 19.5449 li
560.452 439.545 li
.452148 439.545 li
.452148 19.5449 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
560.452 19.5449 mo
560.452 439.545 li
.452148 439.545 li
.452148 19.5449 li
f
73.4521 385.045 mo
507.452 385.045 li
507.452 51.0449 li
73.4521 51.0449 li
73.4521 385.045 li
cp
f
1.5 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
479.896 51.0449 mo
479.896 55.3848 li
411.008 51.0449 mo
411.008 55.3848 li
342.119 51.0449 mo
342.119 55.3848 li
273.23 51.0449 mo
273.23 55.3848 li
204.341 51.0449 mo
204.341 55.3848 li
135.452 51.0449 mo
135.452 55.3848 li
479.896 385.045 mo
479.896 380.705 li
411.008 385.045 mo
411.008 380.705 li
342.119 385.045 mo
342.119 380.705 li
273.23 385.045 mo
273.23 380.705 li
204.341 385.045 mo
204.341 380.705 li
135.452 385.045 mo
135.452 380.705 li
73.4521 51.0449 mo
507.452 51.0449 li
73.4521 385.045 mo
507.452 385.045 li
.149 .149 .149 rgb
@
.301961 .301961 .309804 rgb
%ADOBeginSubsetFont: TimesNewRomanPSMT Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /TimesNewRomanPSMT def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 40 /parenleft putdup 41 /parenright putdup 48 /zero putdup 49 /one putdup 50 /two putdup 52 /four putdup 54 /six putdup 56 /eight putdup 84 /T putdup 101 /e putdup 105 /i putdup 109 /m putdup 115 /s putdef/FontBBox {-568 -307 2000 1007} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings15 dict dup begin/.notdef <1C60D8A8C9B6FF86FBD66B095379F45880CA28D0F0C4629F99B72EFEDBB222483BD74F8B> |-/space <1C60D8A8C9B8707C25> |-/parenleft <1C60D8A8C9B81F2C3AC09B674C4ECE2BEF4D70AD3508D915EA9AE12419376F6EEF231ECE8179CA4531F29291ACACE060AEF98AD6F2FFF2BEA533946FFA1C8BC3953D72A31BB8ABD9782D71B2146F964D99646263E2D414F84FA049D36B9B13B7F6C8AA7A4A5EB0> |-/parenright <1C60D8A8C9B81F2C3CA029BC286E27661FD7F18B990CFF4A0AF58404A2F35E11D14FBA406192D392AD203A879E34B8FA3132863211808E5BD63BDAA607B8E04E23E92C61AAA8B57E5E7609689020D20EB927A1EC6CC0BC06B540A016D558248DC4A3E8183F5F> |-/zero <1C60D8A8C9B7A73DAAFDCA97EBBC8D8E35A41D9404C5638B059E1CA50B5366543C3D584AD9E19987218AC5999BB0F2477597AB6F8DD868788C8440CBF4A338EF64ACD9BF2268656755741DB71FD86387D4A7AA1CFD19937BFD209E4FBCD1952717C8CF8C0555CB2D0238DC43B2A6A2DE4D7366DB210D2673870D0B0C58344E6AEF91B916BAAEAEF37B22F065E870AFE6638E56D0B4AE01785D59EE23402242D396440157FC51> |-/one <1C60D8A8C9B7A73DB92A3F8C4B412A6756A4F8D8439622AB29A83C93F589D112DBEAB54F9ACF0D9BFA06C28638F8F8CA9EE7AFD734575522301B5C02720FA00A934493EC3D856AF45EEE1D7462FF2375B7250579D34D9C249B6BEBF8EF41DB28C0847307B8DCBC66> |-/two <1C60D8A8C9B7A73DB6F198797B24E7DF20E340C763AB9A17095FFDDA6B4B0E4D4AC4BE83AF302018AACAF29AB5FCEB98A93FCCD2C9A968B7CB1B433E25003CA8A63287F6BD1729C8188A209A7171C9BFB11D2FACEF2FADF63141D976A0F90EDDE709834FFBF963952A5213F00F39F098C30D0F91D40A57CAEF920CE11EC41D90433CE0F55F0A42A96AF852FD50FA> |-/four <1C60D8A8C9B7A73DB6B62B7A95EE6C20B94EAC94CA9AB50BFD020369D6A63C8EA15A0D9A89B2ED9293078F8D3EE629592E255C65B246> |-/six <1C60D8A8C9B7A73DB682174C160AB8115D90A4524BD5B352C23110F23EE4E20266716093AE0643A076F6C57BA527F49BB819243E28C4CA7F711F41FA01318856C15674E51D546E83D25FE9DB7A4B9EDFDDE57E488CC507C2304526D6E80E07D1EEFCA86373B2F664DD3DA4646061C700F112AB44ED3896FA596FE814436AD1F1DC5FEDB207A575A17735F66E79BF0D0E423C92F1E9255D38F15B49459F3693E95DCE92EBF25C243713EDA9138A49C42AA83683249878EEA825672AC6D99C32B9109B3D5797A7> |-/eight <1C60D8A8C9B7A73DAB2BA6B835CAFB4C9A41096F555C470FE6294A707AE711C017C95446B200870C2B6A47FB931BCEBEB5BBC6B53605850C75701306FD83F9DC906687C2B3A2C9C0DB9DB68E95D3478DEA01153491C8534F5AD899980F04C195BFB522EDEF282420AA1F12E08397ECA941D5934294BD451B3952E6229D3E7987DD36FC8E43559904E0205D3416EDD1402AB05184D2018B2C7B816330FD0C2740A24C74F80E34F93317BBB1D6B8C4D916C15B7FF1D533D7762324A1017022A27246D93B9768262BFCC673CAD6781894C98679A5889F9338F377D1995AEDF5695FBA7A65628522691535557B2045419DD63F87D7A64B6A962B> |-/T <1C60D8A8C9B7D8BE514ED6977CE9F9E5860FEBB6D8EBF5879FDED6C1E48F6AFEEE7B65DB6C9D492058CAA103CB13A7A80B0015E85F272BB9775991CD97556EC3CFB46A4E1606F006216EABEB711074247C72C159202F32CC7F5F403FAE58110685510DDB32C57700D5067C975D7063A496FE85C1E5> |-/e <1C60D8A8C9B77FE2C19119FE019B929F076F8319E8913467AECA41BE2BEAD3EC175346E3F888D3AD76D215AD69034A954DFD661ECBEA3B145468480B6A15F5C865D2083DC0B04744AA76DE4CC9E0C9DBDCC2C59DAA00F28A6A47092C7FFA0397DC47C5CBBA69AD805D3DD20D56411E92B0DE9E3F19C2FDEE1FA501318984A59E1CFFFD06EA629758085868D3F5F7204292> |-/i <1C60D8A8C9B854D0F4318DEB2BF4A8C14C2FAB601E0ED2FF31B9BA2C4F4D9D824A65F9E753CDA6D59F3AE6B969EC176D4AA1F064BFADF6F4B6A5454B78F98C4B41AC403B87C0044C2A2776BF32D7D2C5370D6DB44827DB4719A169BBE365B0C0BED49A30732BB5E35B7101E488713F0203C9161D1F92C48C80A640085090E2C5D79817DC05EB1FC5E4D24EE71772E51241DF9FD4D574115CFC53427DCBCB8CA3E9F85837FAC6> |-/m <1C60D8A8C9B6FF86F5D75501F5946D14C10E01941D6F8F408CE11167932D24264D7EFCAC2AE86125FDD757A8758D869BC4213413CCB2A6A255440BA1816E9DC45844CC319542821B45F7B81EE7391A0EDD08008613940B7EF538F41747A2556BE4D609FA0E86A3720064373B35B3C09F29E00670FDA88D75DD91439C68FD574D15688B76675600DF49F10BE44872E462D2FA9EDC453EEFA6E997D8F249107C6F71C5B180EF91CFB08123DB5F12D5248BB769BCDBF86D09B3C1EE1D61D18CE6632A82186FF826CE8FF5C9F24094455D2446DAB1258D7CEF6AB64018AE955617323D2765A0C9FC9EE9EFC157214A4EF1A088A6CBE09BD12BF0618C85527D987ABAA0F84BBDB3F467CD6D1AFC5F01D6CD6E91196626F968CD9EC222C872FAFEC679ED97966B06F7D45253DA82AACAAC774A43132A3F4B4FB40FD07B5AFDAE82B335C3B8E42DF7C6FCB1E78E5819FAE1E5B06EBADF2F71F0A59372AEE76B517996> |-/s <1C60D8A8C9B7361F027554B74948DF9D509740193A97E4C5A946CCDAC22ACE16A97A38CAF70766C30631C22477718670FA129F481BA880FC6C2A8C233A039A7A46ACD6F3CA0422B1CD13AB9E5980A98B78F274FD5FB0A519013427E3DF40BD973F22C9B236BE3D27B0A78749138244A4ED344575D4F7F677439F8C2359FAAB210EA03D2DAABF38A6B5B4F0819D6E85CC68A9859B12239E01058FD0C7C593B22AC00DE1C2A90508610457C5DFEA41C78C4C677B338B4C0ED41B0474AF509B93D8B3403DD443273DAE4F97B7CDCA81379AB0933639> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/SQPXNX+TimesNewRomanPSMT /TimesNewRomanPSMT findfont ct_VMDictPut/SQPXNX+TimesNewRomanPSMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero /one /two /.notdef /four /.notdef /six /.notdef /eight 27{/.notdef}rp /T 16{/.notdef}rp /e 3{/.notdef}rp /i 3{/.notdef}rp /m 5{/.notdef}rp /s 140{/.notdef}rp]SQPXNX+TimesNewRomanPSMT nfSQPXNX+TimesNewRomanPSMT*1 [20 0 0 -20 0 0 ]msf125.452 409.045 mo(20)[10 0 ]xsh194.343 409.045 mo(40)[10 0 ]xsh263.226 409.045 mo(60)[10 0 ]xsh332.116 409.045 mo(80)[10 0 ]xsh396.007 409.045 mo(100)sh464.897 409.045 mo(120)shSQPXNX+TimesNewRomanPSMT*1 [22 0 0 -22 0 0 ]msf252.452 434.545 mo(Time \(s\))sh507.452 84.4448 mo
503.112 84.4448 li
507.452 151.245 mo
503.112 151.245 li
507.452 218.045 mo
503.112 218.045 li
507.452 284.845 mo
503.112 284.845 li
507.452 351.645 mo
503.112 351.645 li
73.4521 84.4448 mo
77.792 84.4448 li
73.4521 151.245 mo
77.792 151.245 li
73.4521 218.045 mo
77.792 218.045 li
73.4521 284.845 mo
77.792 284.845 li
73.4521 351.645 mo
77.792 351.645 li
507.452 385.045 mo
507.452 51.0449 li
73.4521 385.045 mo
73.4521 51.0449 li
.149 .149 .149 rgb
@
.301961 .301961 .309804 rgb
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.systemdict beginSQPXNX+TimesNewRomanPSMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/period <1C60D8A8C9B8707CC95A9B5DFDE3A4AF8C8BB7D0C82C30C322ED94985BC6C2F162CD480F8280AD954FE8DC511B40B423DB4A6012D9C419E4DF4F375C6ADD098717CA70F621> |-systemdict /gcheck known {setglobal} if end {end} ifendSQPXNX+TimesNewRomanPSMT /Encoding getdup 46 /period putpop%ADOEndSubsetFont
/SQPXNX+TimesNewRomanPSMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /.notdef /zero /one /two /.notdef /four /.notdef /six /.notdef /eight 27{/.notdef}rp /T 16{/.notdef}rp /e 3{/.notdef}rp /i 3{/.notdef}rp /m 5{/.notdef}rp /s 140{/.notdef}rp]SQPXNX+TimesNewRomanPSMT nfSQPXNX+TimesNewRomanPSMT*1 [20 0 0 -20 0 0 ]msf42.4521 358.139 mo(0.2)sh42.4521 291.342 mo(0.4)sh42.4521 224.545 mo(0.6)sh42.4521 157.748 mo(0.8)sh57.4521 90.9434 mo(1)sh32.686 231.904 mo
32.686 220.311 li
21.0142 226.107 li
32.686 231.904 li
32.686 231.904 li
cp
34.4521 233.356 mo
34.4521 233.472 34.395 233.529 34.2803 233.529 cv
34.2695 233.529 34.2593 233.526 34.249 233.521 cv
34.2383 233.517 34.2227 233.514 34.2021 233.514 cv
18.936 225.936 li
18.7803 225.873 18.7021 225.743 18.7021 225.545 cv
18.7021 225.248 li
18.7021 225.04 18.7803 224.905 18.936 224.842 cv
34.2021 217.264 li
34.2227 217.264 34.2383 217.261 34.249 217.256 cv
34.2593 217.25 34.2695 217.248 34.2803 217.248 cv
34.395 217.248 34.4521 217.311 34.4521 217.436 cv
34.4521 233.356 li
34.4521 233.356 li
cp
.149 .149 .149 rgb
f
34.124 211.076 mo
34.124 209.503 33.478 207.998 32.186 206.561 cv
32.103 206.571 31.999 206.584 31.874 206.6 cv
31.749 206.615 31.6758 206.623 31.6553 206.623 cv
29.2803 206.623 li
26.624 206.623 25.2959 207.336 25.2959 208.764 cv
25.2959 209.628 25.6631 210.381 26.397 211.022 cv
27.1318 211.662 28.0093 212.146 29.0303 212.475 cv
30.0508 212.803 30.9829 212.967 31.8271 212.967 cv
32.4624 212.967 33.0039 212.803 33.4521 212.475 cv
33.9004 212.146 34.124 211.68 34.124 211.076 cv
34.124 211.076 li
cp
34.7021 211.123 mo
34.7021 211.81 34.5381 212.425 34.21 212.967 cv
33.8823 213.508 33.437 213.928 32.874 214.225 cv
32.3115 214.521 31.6763 214.67 30.9683 214.67 cv
29.978 214.67 28.9961 214.391 28.022 213.834 cv
27.0483 213.276 26.2563 212.537 25.647 211.615 cv
25.0376 210.693 24.7329 209.727 24.7329 208.717 cv
24.7329 207.977 24.9287 207.323 25.3193 206.756 cv
25.71 206.188 26.228 205.758 26.874 205.467 cv
27.52 205.175 28.2129 205.029 28.9521 205.029 cv
30.4209 205.014 li
29.7231 204.503 29.002 204.076 28.2573 203.732 cv
27.5117 203.389 26.7383 203.123 25.936 202.936 cv
25.8525 202.905 25.811 202.847 25.811 202.764 cv
25.811 202.498 li
25.811 202.363 25.8789 202.295 26.0142 202.295 cv
26.0249 202.295 26.0459 202.305 26.0771 202.326 cv
26.7437 202.493 27.3872 202.706 28.0073 202.967 cv
28.6265 203.227 29.2275 203.529 29.811 203.873 cv
30.3945 204.217 30.9204 204.597 31.3892 205.014 cv
33.2124 205.014 34.124 204.8 34.124 204.373 cv
34.124 204.102 34.0435 203.878 33.8823 203.701 cv
33.7202 203.524 33.5195 203.371 33.2803 203.24 cv
33.041 203.11 32.9209 203.024 32.9209 202.982 cv
32.9209 202.717 li
32.9209 202.602 32.9888 202.545 33.124 202.545 cv
33.4888 202.545 33.8428 202.756 34.186 203.178 cv
34.5303 203.6 34.7021 204.014 34.7021 204.42 cv
34.7021 204.951 34.5303 205.391 34.186 205.74 cv
33.8428 206.089 33.395 206.326 32.8433 206.451 cv
33.4263 207.138 33.8823 207.883 34.21 208.686 cv
34.5381 209.488 34.7021 210.3 34.7021 211.123 cv
34.7021 211.123 li
cp
f
.137255 .121569 .12549 rgb
%ADOBeginSubsetFont: AdobeArabic-Regular Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /AdobeArabic-Regular def/FontInfo 7 dict dup begin/Notice (Adobe is either a registered trademark or a trademark of Adobe Systems Incorporated in the United States and/or other countries.) def/Weight (Regular) def/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.000488281 0 0 0.000488281 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdef/FontBBox {-894 -1122 3717 1792} defendsystemdict begindup /Private17 dict dup begin/|- {def} def/| {put} def/BlueValues [-30 -0 365 395 530 560 638 668 907 937 951 981 1010 1040] def/OtherBlues [-382 -352] def/FamilyBlues [-30 -0 365 395 530 560 638 668 907 937 951 981 1010 1040] def/FamilyOtherBlues [-382 -352] def/BlueScale 0.025 def/BlueShift 10 def/BlueFuzz 0 def/StdHW [97] def/StdVW [119] def/StemSnapH [97] def/StemSnapV [119] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/space <1C60D8A8C9B70B6B43> |-/.notdef <1C60D8A8C9B60D65E43AE38667EF67FA415B9CC592E0D9945C1D8619B2AE18F6C9E661F677A38290326AFAE43B9CF2DD3AD4715AADCB6A0DE39832615759832BB0A2474FB9358BDE9F89DC9A0F7EBE9DCA402800889162789CD0BE0E4298E1F95239A6BE> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/SQPXNY+AdobeArabic-Regular /AdobeArabic-Regular findfont ct_VMDictPut/SQPXNY+AdobeArabic-Regular*1 [32{/.notdef}rp /space 223{/.notdef}rp]SQPXNY+AdobeArabic-Regular nfSQPXNY+AdobeArabic-Regular*1 [16 0 0 -16 0 0 ]msf109.754 42.4194 mo( )sh%ADOBeginSubsetFont: TimesNewRomanPS-BoldMT Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /TimesNewRomanPS-BoldMT def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 45 /hyphen putdup 77 /M putdup 97 /a putdup 99 /c putdup 100 /d putdup 101 /e putdup 102 /f putdup 104 /h putdup 105 /i putdup 108 /l putdup 109 /m putdup 111 /o putdup 112 /p putdup 114 /r putdup 115 /s putdup 116 /t putdup 117 /u putdup 119 /w putdef/FontBBox {-558 -307 2000 1026} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings20 dict dup begin/.notdef <1C60D8A8C9B6FF86FBD66B095379F45880CA28D0F0C4629F99B72EFEDBB222483BD74F8B> |-/space <1C60D8A8C9B8707C25> |-/hyphen <1C60D8A8C9B81F2C3A728CE9B4C36D54571D30223019EB> |-/M <1C60D8A8C9B5D6EF42037EF8CB1D58C3B1520FAE759CBD55AED848DEBF5BC04F5A96DDF9D44AEE96B27030E4665082FD38C1E77B3E625D115F72339BB1049AD297E94CF95F7FA5E93AE64088982F3EAB1FD38BE8ABC4EA9CB45EB33BB1EC97D93513A915DE0561EE6E95F14B8C0ED1B7AA32968B65D98E6B775ED420A3A05912EFAA8732322BB12AE50F3C62A8BD9A3D8A386A6AC22B2C4C5AC1C76F15385D5876D8EB5356450AC8FA23BC4813785E5FFC5E46CFAF7FDC942EA3F2CB35A30512CB7D6039FEFCDD949CFD9F58A96808DF3739CB> |-/a <1C60D8A8C9B7A73DB9E86B7E36429A2884771404E6FF662B8AA7E7384C3659F637EBD399261C63A35B069A69F76ED1A82E238E7EE163D317BE064E3858C7F7730B3F4964EB20955A37792E7E1687D8ADC075DDB7D7FB25258139553D3CB2FA10ED804622949E5930CF99F28E8A477603C46FC4F5A92DC2A1E35DB06F67F3E51B82DE37C2C17EC2E5C923B58246C88B9A4601B0D1A14F5724D07DAB747376B8430740055D15C3763245B66F59402378EFADB8789CFB2CE89C326A037B9EA75216356106F9269249DDBB95B13318EE882CB697F95419AED017DFE8527A8D8EF87BA96F46A6F3C6B37E5DC3CF5F042CB4BC684A4C1AF54058E7FE4B16C2ABDA5E4C6AEB6AC099DB4A66DB29E012598F2F12A231> |-/c <1C60D8A8C9B77FE2CEE96C7945B0435FFDDE211B8F948D1DBC8485861892F6D99960D947D725C2B400D72D2E2033C9690A49A5B9AEDD48C99E1E12194AA92AD9E1221612038A683F14C558C3BE52A1D282380EB81ECDEF9B33E298B18379F2DEE9473052CB47C57B3F66F7E9B2774464DA469F0AEDB78DBA5D5DA222391213D6F7DC6F471B1C2EAA711F193F31D398A5700FBD884113FD59850678DCA0650A6DD9CB70CA> |-/d <1C60D8A8C9B7EF322BB34349F3168A7602BC7BF4226017FE1BF22B84054523B23705583072888EE49ACE6F151BEB11E6C7498E6C09135BDFDB836D2D49BE2EABEE67608F4396105B0DB3E7762F239216C0DD50120AD2B9D413DB01C86A05F67787C78F145B0F86FFE91A800E141AE20ED29E6F68C9A2A75337AC51AED174C1393EBB7530A0D447EFE3403D02A5ABF7A566F9E721F532F6AE8AD6A21AF6AE574484093EF0056C2D7EB4A61B4032F6ABA859D517A62FF24D6F4DCB748055764ED96954395DB4DB> |-/e <1C60D8A8C9B77FE2C1A0FFE616EB00E9CC30AEE6296E704D5E8E6E2A25CD5B841666118E2FAE181ECDCA295C531BAEC8AA2C391851649F7A3F6C1D06B8F53311D73A0F775B337F21892F2D55D51BAAE57B9A38BC3FBC0F8B7058E4F9E704709FA2F144D9397D8E7CC8EE685293C980753BDE3858AD8D5DB11A1F649D597DE968E74B3A3B8C5A39BDCB85B6D8AE6FFD00E4F0A287> |-/f <1C60D8A8C9B81F2C3A7A16DF5F18027D7405F5154A11909C9D43E6CD25A6DC277D5C0D48ABA58AEE1CA72D408CE01901163AA965E83A2C6AAEA910B92B4EF79F353F4FB8A479B6F513D6AC0F4E00F27FD509B6ACD1D2962CF1F34CEA6C3F6B06B3DB2F91E3E30F78B9D3043A400CA83256FC3945A449B29060C9C3F19D5089143FF9136555CA79A07E37AAF575E69BBD63975C591AC7D22CD72FBC808BA3758157C1B9215D9858D17483CA724AA4EDFDB31ABF4F75> |-/h <1C60D8A8C9B7EF3272AF7F25204A2579374FCC2D8DC58257D5328C73837DF5E151F5C4B59935D79D509479A4CF58D2F57CA30B7004F0CECA507A0A14CFFA1C1991F686B3799B13C981FE5F1A5BF53CEC0E9AAEB667BFBDC7A5B4E500A01BF3041032C409B459737BFBB5ED5ED3F0772BAAAB5B9BFF765B3251725E6DE1893256D90156097AA53D4F8FFDCBD851B4E61228F325CAC2820CD2D27D8E9832789A128B427F415B9370CB527F20D87D99F84108664AF4195426E156> |-/i <1C60D8A8C9B854D0E61042376B1E283FB3F4BBB7CB3487BC74EE7E391A93B180B577E22955D0FA3199DCD5C6BBEA2EDAEAAD70CAC2D387D654CFD6D585A60CE5094378FB8BA8FD5D1CAFC6A05D463B8B2BF660BFB6FA4902B50766CB22600DE6B8533451B6F73A6A051EB16DBCEA0EFC6C89350A34CB9DF0A7738E953A8F7AB6ADA51E7F> |-/l <1C60D8A8C9B854D09CC77F32FE56EAFD8F160C72BECE8873AE417AE0D21D5337605639AD1A151DC364880F2C65200EF41B3343ACE730AF8052A8FF79376915451BDA8AAC02C68E> |-/m <1C60D8A8C9B6B41CFC233988897FCBA530F02D147BB7AF85B9F517BBC5781B669435810CBC26041E0605B47BFA77587843C8DEA6872E30E60DD3D438C9BB8D13A068E6A5DF937094A6E524E8ED70D26936C5F28437339B2ED9ED1E128381B71F88ADC4859CF09A4E9326C601E9D02E557D79FA0D35091D0B26C944D8570192EAF995CE2C1A28E65FB43759B59A0ACE7537852DDA0B768658473254AD7FE36D21B03DE50FD99C20BFBFC79E7047873A2A479A6E5438E97C747AF67AF1E9F512A67523095886E0EB0825820E96F6092D3A65884FA0731DE0D706D105190F4ED332E7352597BF7A2CFCF63D8F04FA067E8E861F1051B59BE9483406573D7AF1F5E466CF87BB2E2A90613071400F60D968E12D6DC015950B65998FFE4EF29FD521C9F9EA96F784A5C9> |-/o <1C60D8A8C9B7A73DA75A812B0D9E0D72950C400992B64791CE4BE936E35EC58E93177DA216CA6EA116FD0299C2317BCD42A8DF8FC302833AED60D02FEBA6105DB891946C90338F674D705E1347FE9120F0544578B7DAA3AE7563B3048B2698F9445592B7A6749491B2DE1FE4A1FD150BB3E20FEF7BE4E02D604E63E559C8B95FBFA7494AE1EEF5610DCF16F48AC01BFAB48671FA48799F609CBC8530028A5C8DBEF01BFDEE2A> |-/p <1C60D8A8C9B7EF322B8F3C1339CC0CC7FB87CEAD61AE2C891E70162319DDE1D773CD4C58B5D0C89F873363F696C9E4C6105ECC9F5414989962E4C7357374118FB8D6045447C557B79E23B00D6AED55D3610DB59773C4F03101D9258DBC7B32C1285C0C65052E26A4E5597E87FB915026E59C0C25DE3FDABFFCE1168F7A679C1B11DF8CAEE010E5B1F08558A9CD1ECAE6DAF8F59760015B341E27E7BD65504717C3E0E98D597B37446179E7CBC19C105B8A11F14785E84DD33ED43C7F991A380380592F35D096D19F> |-/r <1C60D8A8C9B77FE2960E00E3A8DCFC480C099B33BBDDEDCBBEDD2A0D472C0A7B73DA6C507A02DE3334237527983B6592EE1B2F262F9019257EF00896B753BA1EE7B97E00D2814390DFE8166E795665E9161989E492FE9CF41E80A3FAC0B9410A0D35E8758FA16A6EBCF6A32D78AB8563CF90B05BC9CE7CBF6CAB662900B3B6694F1FC2BDC482D5EA0481674C5822C4D45FD0EE1F9108A4ECF4F95EA02DB223FEC06EA06FE96C26DCC8DC8D15> |-/s <1C60D8A8C9B7361F0274264DFD1E2F12F4038CC3C2CC64F8E8B1EB247282BBD631FA3240975506A5A512CB2808310E488A51FE18729B6606AFD56EB1722AE1D8ABC20744FDC6CBF3951E8F8BD520E7CF9D93CF33B4900AFA5C5C4D000CCAD0ED41D50E319EB8B858BFAC6C03AFB2E197690568AF5E2BE9F4C558829874D2932ED897622551043851C0CC72FF3440821220BE6AECCD9E27B0282336CF762B277D88192B83BEB39BF3A8D350E4CD0CFD13DA7EB0A8BEB03D5FAECB2BB99C89132A2E8C5DCDE91DE17F55FBEFBDA6CAE805794F42115FBC221DB69DBD3240613F374A> |-/t <1C60D8A8C9B81F2C3AE0D71D60A6D0809ACA0FF6B89A38F7E3BC89850C1DD34D082ECFCC2A4F531E37217E8E3CD02D42FE76F828E185B10A17EE368D50D1536CFAF78DF5C03ED49FE0A24E371BB0887E07856C5D39D6E9C2D58E0CAD3CB98DB35234BA12CF62ED06495FE95A32> |-/u <1C60D8A8C9B7EF322BA0905ED0DC683347CE70FA474511E47D7F16FABA80631D8B81EF4E26BB958E5CD419A29585E75FE6367FE08A7CCFFE45262AE333F224F7158401337079DCB57A01C4153127AD91F464BC7389BDB2B1F912E0435254BC5B90C25CFA9CF36838EB1DC267155E152B4A4C084F64F36BC4A1C665448CADD0DC39A2B4C68518BC7B0B05DE633BA8500EE54DA457E79EC9CBA6> |-/w <1C60D8A8C9B6079F6D1F621B170CB35947B55D052DF392E017902F6F975AC64F077E1FF87E171895F207CF85ABE44D38692537A394CBF81BF5D9ADB660D72C3F66ECCCFB2BF3BC0B4E00C87D5A73FDF948DF300A42969D859A09A97158EA71D4DC1648828FDE6171EF5FDC42A26BD894CE97EF3105467DFFB3EADC01E0D28D0C16187E8AB119B61A02CA08402054436AFEBDF728AAC9C1D014007B8B6FF14979A032B9DCC4FAD23EDAAF332D299B58FE897D391520> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/SQPXNZ+TimesNewRomanPS-BoldMT /TimesNewRomanPS-BoldMT findfont ct_VMDictPut/SQPXNZ+TimesNewRomanPS-BoldMT*1 [32{/.notdef}rp /space 12{/.notdef}rp /hyphen 31{/.notdef}rp /M 19{/.notdef}rp /a /.notdef /c /d /e /f /.notdef /h /i 2{/.notdef}rp /l /m /.notdef /o /p /.notdef /r /s /t /u /.notdef /w 136{/.notdef}rp]SQPXNZ+TimesNewRomanPS-BoldMT nfSQPXNZ+TimesNewRomanPS-BoldMT*1 [16 0 0 -16 0 0 ]msf112.879 42.4194 mo(Multifractal spectral width for )sh326.16 42.4194 mo(raw p-model output)sh3 lw
0 lc
2 lj
[3 3 ] 0 dsh
336.565 385.085 mo
342.119 321.672 li
349.008 335.348 li
355.896 320.661 li
362.785 321.624 li
369.674 300.33 li
376.563 308.153 li
383.452 310.146 li
390.341 211.33 li
397.23 228.67 li
404.119 349.56 li
411.008 274.313 li
417.896 279.386 li
424.785 318.919 li
431.674 160.56 li
438.563 317.687 li
445.452 295.646 li
452.341 377.408 li
459.23 279.515 li
466.119 304.883 li
473.008 192.851 li
479.896 311.116 li
486.785 278.587 li
493.674 332.478 li
500.563 334.476 li
507.452 275.932 li
308.302 385.085 mo
314.563 301.837 li
321.452 350.687 li
328.341 322.7 li
333.877 385.085 li
293.95 385.085 mo
300.785 169.991 li
307.417 385.085 li
191.732 385.085 mo
197.452 380.222 li
204.341 310.93 li
211.23 308.971 li
218.119 358.726 li
225.008 175.42 li
231.896 378.043 li
238.785 315.489 li
245.674 177.665 li
252.563 293.512 li
259.452 187.302 li
266.341 309.679 li
273.23 364.718 li
280.119 349.506 li
287.008 316.325 li
293.732 385.085 li
123.13 385.085 mo
128.563 365.343 li
135.452 286.182 li
142.341 312.706 li
149.23 336.043 li
156.119 320.217 li
163.008 199.238 li
169.896 262.085 li
176.785 360.969 li
183.674 301.702 li
190.482 385.085 li
73.4521 292.143 mo
80.3413 309.991 li
87.23 288.312 li
94.1191 298.812 li
101.008 229.836 li
107.896 279.169 li
114.785 292.768 li
121.301 385.085 li
.792157 0 .12549 rgb
@
73.4521 167.831 mo
80.3413 152.624 li
87.23 176.231 li
94.1191 174.506 li
101.008 179.243 li
107.896 195.3 li
114.785 186.636 li
121.674 159.701 li
128.563 185.204 li
135.452 190.567 li
142.341 195.691 li
149.23 188.742 li
156.119 175.258 li
163.008 175.557 li
169.896 151.179 li
176.785 156.072 li
183.674 129.113 li
190.563 190.018 li
197.452 144.129 li
204.341 178.049 li
211.23 191.579 li
218.119 179.154 li
225.008 196.132 li
231.896 165.943 li
238.785 175.297 li
245.674 146.003 li
252.563 168.524 li
259.452 170.801 li
266.341 140.711 li
273.23 162.106 li
280.119 144.608 li
287.008 172.268 li
293.896 166.943 li
300.785 154.118 li
307.674 170.37 li
314.563 152.697 li
321.452 168.5 li
328.341 178.883 li
335.23 157.114 li
342.119 150.262 li
349.008 177.721 li
355.896 164.133 li
362.785 134.82 li
369.674 166.337 li
376.563 159.063 li
383.452 176.049 li
390.341 165.308 li
397.23 158.455 li
404.119 117.92 li
411.008 176.969 li
417.896 168.933 li
424.785 168.538 li
431.674 176.492 li
438.563 166.264 li
445.452 169.209 li
452.341 168.385 li
459.23 169.382 li
466.119 169.896 li
473.008 176.927 li
479.896 165.102 li
486.785 140.249 li
493.674 163.598 li
500.563 152.133 li
507.452 181.249 li
.572549 .772549 .870588 rgb
@
73.4521 172.53 mo
80.3413 172.53 li
87.23 172.53 li
94.1191 172.53 li
101.008 172.53 li
107.896 172.53 li
114.785 172.53 li
121.674 172.53 li
128.563 172.53 li
135.452 172.53 li
142.341 172.53 li
149.23 172.53 li
156.119 172.53 li
163.008 172.53 li
169.896 172.53 li
176.785 172.53 li
183.674 172.53 li
190.563 172.53 li
197.452 172.53 li
204.341 172.53 li
211.23 172.53 li
218.119 172.53 li
225.008 172.53 li
231.896 172.53 li
238.785 172.53 li
245.674 172.53 li
252.563 172.53 li
259.452 172.53 li
266.341 172.53 li
273.23 172.53 li
280.119 172.53 li
287.008 172.53 li
293.896 172.53 li
300.785 172.53 li
307.674 172.53 li
314.563 172.53 li
321.452 172.53 li
328.341 172.53 li
335.23 172.53 li
342.119 172.53 li
349.008 172.53 li
355.896 172.53 li
362.785 172.53 li
369.674 172.53 li
376.563 172.53 li
383.452 172.53 li
390.341 172.53 li
397.23 172.53 li
404.119 172.53 li
411.008 172.53 li
417.896 172.53 li
424.785 172.53 li
431.674 172.53 li
438.563 172.53 li
445.452 172.53 li
452.341 172.53 li
459.23 172.53 li
466.119 172.53 li
473.008 172.53 li
479.896 172.53 li
486.785 172.53 li
493.674 172.53 li
500.563 172.53 li
507.452 172.53 li
.0196078 .443137 .690196 rgb
@
355.452 111.045 mo
355.452 58.0449 li
224.952 58.0449 li
224.952 111.045 li
355.452 111.045 li
cp
1 1 1 rgb
f
.137255 .121569 .12549 rgb
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.systemdict beginSQPXNX+TimesNewRomanPSMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/hyphen <1C60D8A8C9B81F2C797FA61189B8881D0DB497EEC4F8> |-/A <1C60D8A8C9B6079F6D0C3DD1DA701F2FEF50BE2CCF679467EAB463D54C495B1FC98737C4805A67EB9B211579E256E1BCD120087B7083980EFC748D95F15A9738703A6CB4125517112E8D63595864B93D16C7B325AB1759098D24D8A43A63AEECA533864B64013C499C4207455D5210408E58672A172F78CB14D73985071102DFA93B6532> |-/D <1C60D8A8C9B6079F62679EB6BE171B70F78590F81AB62F69F1BD2EFC86EAE566847745E296D0CF61872DA4D8690C62AB23EE8E1DEB0EAD4BD93A2494CA759A81248BAF55E0D2E2E5FE71261287BF00F8CDF501793AB3272F80F7AE3E407CA730AC3648B3AC2D58C8D1FD60CD7DB1F886A79A4080D8870256B6E127906D500379950803F077453028FB6169> |-/F <1C60D8A8C9B7EF322BE6235043C5A7A6ECCDDDC390BE41D3E01CEDAA91CB335118BB7C10CD87A1A789356A0826D033ECDD0352DC64AE55B383C11F3EB18A6F42CD78A260CB051779A3B4D92350DD65D27B671C1609DC36FBFF44C40F44FB014C0462CFF40EA9650CDFB895B99B69FA8BD3EB8152DF452581818551FCC7745E9E79F62FD5E1668E4EFD8B2F33AB5D5ED30AB06AFD78EF98B1A68AA26FC8B4D7DDC1356637FA048F199EDF19A428> |-/M <1C60D8A8C9B59F85E8A8526E50FEB33438675EDBBD0866093A4555E3EA3A35849B91EFFB88205281CC77395AC14DF328B50F1F179210F0307F50BFB242AA7F76F18203303EF0BF46B76E61FB539D568EF9F434EC657F4C5CDE1BCAA90A83BAFEB02869664DC06CC8CA4FA1E876C39F3F5371AD261F117CDAF8F6A4E96ECA4F5088752E105CDEB8FBEB2F7F82D31A2FEB6DF3C053295A006D723DEE7CEF30A9F16E8C6EE80DDA09053247> |-systemdict /gcheck known {setglobal} if end {end} ifendSQPXNX+TimesNewRomanPSMT /Encoding getdup 45 /hyphen putdup 65 /A putdup 68 /D putdup 70 /F putdup 77 /M putpop%ADOEndSubsetFont
/SQPXNX+TimesNewRomanPSMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period /.notdef /zero /one /two /.notdef /four /.notdef /six /.notdef /eight 8{/.notdef}rp /A 2{/.notdef}rp /D /.notdef /F 6{/.notdef}rp /M 6{/.notdef}rp /T 16{/.notdef}rp /e 3{/.notdef}rp /i 3{/.notdef}rp /m 5{/.notdef}rp /s 140{/.notdef}rp]SQPXNX+TimesNewRomanPSMT nfSQPXNX+TimesNewRomanPSMT*1 [14 0 0 -14 0 0 ]msf261.952 72.5449 mo(MF-DFA)sh228.952 68.0449 mo
258.952 68.0449 li
.792157 0 .12549 rgb
@
.137255 .121569 .12549 rgb
SQPXNX+TimesNewRomanPSMT*1 [14 0 0 -14 0 0 ]msf261.952 89.0449 mo(MF-DMA)sh228.952 84.5449 mo
258.952 84.5449 li
.572549 .772549 .870588 rgb
@
.137255 .121569 .12549 rgb
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.systemdict beginSQPXNX+TimesNewRomanPSMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/C <1C60D8A8C9B64EDFFBA6F0CF8A2CDA79A069460245F5373797A9E71DEA345031885496623E7C65FDB470FC6BFF7BE37B20FF363C43CAB08BA8E918FCBA9DEB0021B12355971EB2945D0594E78D2EE4D593C49790304E106026BC942097158DDBF12F8B83C9752B02212C28957008FA70A685356583CB4C7D6F55B12AC7399ECFE4B69C91B472A6132E65C9F7B697AE783582C9D65C392064A7C49C83B283409DD22AD16B7DD28B54D5FC454C> |-/J <1C60D8A8C9B7361F02BE73C4CFD35D33EC00415B3CA6C152F65E48AE8D6C4B6496036675C5C8F5E597063106A19B1BA3F0EE04532306F107DAD9A65C072D06B9FB644D70E38B84756493EFE51AD825A2D0A3C49BF5AC9839A3D4E170FA5A71858A97C57537B2C6868525AE4970995137FD1FB1D499789D521C401B0622ABE206084830544BAB810C8807A7CEA0D0FD4C6EE8D48ABB> |-/a <1C60D8A8C9B77FE2CEA139CB15A16492F485162FE605BA10F460B6DC550DEC7BA0BCA1B89C8429260417FE96BA758C22F6762386C9F1CAF53456C89D4C6B177AA810FBB608A57F053C4DA17FD8A122DD63CD2EE0563B0FFA48FEF5CBDB333E4EF010579993E238020BE59CA5D3F31F329BD506C436A3A2AAAB6CBD385FDB0E5188BC3D34A31214C941C253FAF1F818F84A3F73340CA7F3B7A85C87022E70BF3FF56918287082AAA1D7B6CDE998BE3D8663592D3F0DEFC69D87A351A29895DE83B0D7478C3C01D85F944C563EFCF85986470E4B8EDEEDC025A0FB3217B737B99EB7B6E2243F66B907475D1C465D1D07EDFEFC5123FE5A4D48A8B15BE3272EF1EF1464C3F0D45D7CBB8749AF571E09> |-/b <1C60D8A8C9B7A73DB90B311171EB67EB8746E2EC8FC994CCA7A632F7C7E8F4A5D28D725796F2BC8526696060F460C892CC5686CD97F757C6EFB11E42DD9AF110BE11F49DAEFA324F62E3046D4E2410C0923EDB87332B0381414594D399924398EF0A71772EF0EFEA72F5940C288418E4FCC7A2DE1E6A1AEA513FBDA0D6603C38C9676D3489A418D7163D5E50FB679144E02901D98844D885CA3AAF379A83F23AED1F56FC130F21> |-/h <1C60D8A8C9B7A73DB904DA2C7A38531EB5E07DB80E9375E00037710435E027FD1F7B471BB2C47AEA703B8CB5C9C005CAA0B77F572194961F7C30413194A0134D3FF9BA81F629AD195D96BD3C1285904670FEB33C334E260F33EE9AB1A2D9C0C66E38CE4D3CA583879DAF16CE988CC2A14E39FED6599F4B0F3F8F061B585E2410824AE8C179E66BD3AD9F6E34CD8CBF79298E3E4553D0E9DCA292805DED8E36C58209B17E38B2DFAFEB881CA5FB9EC7A76A0CF0C4BFE83CE749EBD15B15E97FBEA4E90F2186A54E69C28F4083AB76DBE019E4C57B27760FED872C4483796F735A795EACD82F245D81FB43B5> |-/n <1C60D8A8C9B7A73DB913C38909CDA29FD53BC2807766C389AFB9ED86F7BC81642DEC755C464ECEF36210D9B2C516FEA8C1248DF87B00C42E8B7B13BCCD9D4DADECDD469C646397E88CF560CD28B02CAE7D1B9203699A1DE9CF796CD494DF60582CAFD70B7F17C1569B79CFC1B11937F06CBBF98FB3F8ABA83215B280026130687B8B88299FC622B1B9C743E6B4E2D3E657B3D5566E1938323637D7929F2E277006B7F4C91822AAA6911E494E2AD0998CB1FC1434E1920012738BB988F6A0027198438FE663C2EACF82CEB86F7C727594> |-/r <1C60D8A8C9B81F2C3A9916C4CB28F21023538C2A69D3E08B0A448624D2CE6C19473DC07A6A4C3E0D8D2DFD7B9589F2461E064A251BFFB4F1472DE500E983E2E667F5383BBA338778795701927E45FB048834AFB7FF5E045C79CAD4F90B53A8A93629365ECF1B64B7916DE5DAB65845D9DB9B71D2B7B722597153CE4BA455AAC1333D36087A511839B6E1301E787D03299ED6FB7E787777CDACC74EC37D8C360275B503E4954E912CD342> |-systemdict /gcheck known {setglobal} if end {end} ifendSQPXNX+TimesNewRomanPSMT /Encoding getdup 67 /C putdup 74 /J putdup 97 /a putdup 98 /b putdup 104 /h putdup 110 /n putdup 114 /r putpop%ADOEndSubsetFont
/SQPXNX+TimesNewRomanPSMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period /.notdef /zero /one /two /.notdef /four /.notdef /six /.notdef /eight 8{/.notdef}rp /A /.notdef /C /D /.notdef /F 3{/.notdef}rp /J 2{/.notdef}rp /M 6{/.notdef}rp /T 12{/.notdef}rp /a /b 2{/.notdef}rp /e 2{/.notdef}rp /h /i 3{/.notdef}rp /m /n 3{/.notdef}rp /r /s 140{/.notdef}rp]SQPXNX+TimesNewRomanPSMT nfSQPXNX+TimesNewRomanPSMT*1 [14 0 0 -14 0 0 ]msf261.952 105.545 mo(Chhabra-Jensen)sh228.952 101.045 mo
258.952 101.045 li
.0196078 .443137 .690196 rgb
@
1.5 lw
0 lj
[] 0 dsh
224.952 111.045 mo
224.952 58.0449 li
355.452 58.0449 li
355.452 111.045 li
224.952 111.045 li
cp
.149 .149 .149 rgb
@
560.897 20.5449 mo
1120.9 20.5449 li
1120.9 440.545 li
560.897 440.545 li
560.897 20.5449 li
cp
1 1 1 rgb
f
633.897 386.045 mo
1067.9 386.045 li
1067.9 52.0449 li
633.897 52.0449 li
633.897 386.045 li
cp
f
2 lc
1 lj
1040.34 52.0449 mo
1040.34 56.3848 li
971.453 52.0449 mo
971.453 56.3848 li
902.564 52.0449 mo
902.564 56.3848 li
833.676 52.0449 mo
833.676 56.3848 li
764.786 52.0449 mo
764.786 56.3848 li
695.897 52.0449 mo
695.897 56.3848 li
1040.34 386.045 mo
1040.34 381.705 li
971.453 386.045 mo
971.453 381.705 li
902.564 386.045 mo
902.564 381.705 li
833.676 386.045 mo
833.676 381.705 li
764.786 386.045 mo
764.786 381.705 li
695.897 386.045 mo
695.897 381.705 li
633.897 52.0449 mo
1067.9 52.0449 li
633.897 386.045 mo
1067.9 386.045 li
.149 .149 .149 rgb
@
.301961 .301961 .309804 rgb
SQPXNX+TimesNewRomanPSMT*1 [20 0 0 -20 0 0 ]msf685.897 410.045 mo(20)[10 0 ]xsh754.788 410.045 mo(40)[10 0 ]xsh823.671 410.045 mo(60)[10 0 ]xsh892.562 410.045 mo(80)[10 0 ]xsh956.452 410.045 mo(100)sh1025.34 410.045 mo(120)shSQPXNX+TimesNewRomanPSMT*1 [22 0 0 -22 0 0 ]msf812.897 435.545 mo(Time \(s\))sh1067.9 85.4448 mo
1063.56 85.4448 li
1067.9 152.245 mo
1063.56 152.245 li
1067.9 219.045 mo
1063.56 219.045 li
1067.9 285.845 mo
1063.56 285.845 li
1067.9 352.645 mo
1063.56 352.645 li
633.897 85.4448 mo
638.237 85.4448 li
633.897 152.245 mo
638.237 152.245 li
633.897 219.045 mo
638.237 219.045 li
633.897 285.845 mo
638.237 285.845 li
633.897 352.645 mo
638.237 352.645 li
1067.9 386.045 mo
1067.9 52.0449 li
633.897 386.045 mo
633.897 52.0449 li
.149 .149 .149 rgb
@
.301961 .301961 .309804 rgb
SQPXNX+TimesNewRomanPSMT*1 [20 0 0 -20 0 0 ]msf602.897 359.139 mo(0.2)sh602.897 292.342 mo(0.4)sh602.897 225.545 mo(0.6)sh602.897 158.748 mo(0.8)sh617.897 91.9434 mo(1)sh593.132 232.904 mo
593.132 221.311 li
581.459 227.107 li
593.132 232.904 li
593.132 232.904 li
cp
594.897 234.356 mo
594.897 234.472 594.84 234.529 594.726 234.529 cv
594.715 234.529 594.704 234.526 594.694 234.521 cv
594.684 234.517 594.668 234.514 594.647 234.514 cv
579.382 226.936 li
579.226 226.873 579.147 226.743 579.147 226.545 cv
579.147 226.248 li
579.147 226.04 579.226 225.905 579.382 225.842 cv
594.647 218.264 li
594.668 218.264 594.684 218.261 594.694 218.256 cv
594.704 218.25 594.715 218.248 594.726 218.248 cv
594.84 218.248 594.897 218.311 594.897 218.436 cv
594.897 234.356 li
594.897 234.356 li
cp
.149 .149 .149 rgb
f
594.569 212.076 mo
594.569 210.503 593.924 208.998 592.632 207.561 cv
592.548 207.571 592.444 207.584 592.319 207.6 cv
592.194 207.615 592.121 207.623 592.101 207.623 cv
589.726 207.623 li
587.069 207.623 585.741 208.336 585.741 209.764 cv
585.741 210.628 586.108 211.381 586.843 212.022 cv
587.577 212.662 588.455 213.146 589.476 213.475 cv
590.496 213.803 591.429 213.967 592.272 213.967 cv
592.908 213.967 593.449 213.803 593.897 213.475 cv
594.346 213.146 594.569 212.68 594.569 212.076 cv
594.569 212.076 li
cp
595.147 212.123 mo
595.147 212.81 594.983 213.425 594.655 213.967 cv
594.327 214.508 593.882 214.928 593.319 215.225 cv
592.757 215.521 592.121 215.67 591.413 215.67 cv
590.424 215.67 589.441 215.391 588.468 214.834 cv
587.493 214.276 586.702 213.537 586.093 212.615 cv
585.483 211.693 585.179 210.727 585.179 209.717 cv
585.179 208.977 585.374 208.323 585.765 207.756 cv
586.155 207.188 586.674 206.758 587.319 206.467 cv
587.966 206.175 588.658 206.029 589.397 206.029 cv
590.866 206.014 li
590.169 205.503 589.447 205.076 588.702 204.732 cv
587.957 204.389 587.184 204.123 586.382 203.936 cv
586.298 203.905 586.257 203.847 586.257 203.764 cv
586.257 203.498 li
586.257 203.363 586.324 203.295 586.459 203.295 cv
586.47 203.295 586.491 203.305 586.522 203.326 cv
587.189 203.493 587.832 203.706 588.452 203.967 cv
589.071 204.227 589.673 204.529 590.257 204.873 cv
590.84 205.217 591.366 205.597 591.834 206.014 cv
593.658 206.014 594.569 205.8 594.569 205.373 cv
594.569 205.102 594.489 204.878 594.327 204.701 cv
594.165 204.524 593.965 204.371 593.726 204.24 cv
593.486 204.11 593.366 204.024 593.366 203.982 cv
593.366 203.717 li
593.366 203.602 593.435 203.545 593.569 203.545 cv
593.935 203.545 594.288 203.756 594.632 204.178 cv
594.976 204.6 595.147 205.014 595.147 205.42 cv
595.147 205.951 594.976 206.391 594.632 206.74 cv
594.288 207.089 593.841 207.326 593.288 207.451 cv
593.872 208.138 594.327 208.883 594.655 209.686 cv
594.983 210.488 595.147 211.3 595.147 212.123 cv
595.147 212.123 li
cp
f
.137255 .121569 .12549 rgb
SQPXNY+AdobeArabic-Regular*1 [16 0 0 -16 0 0 ]msf653.113 29.2178 mo( )sh%ADOBeginSubsetFont: TimesNewRomanPS-BoldMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.systemdict beginSQPXNZ+TimesNewRomanPS-BoldMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/g <1C60D8A8C9B7A73DB95827D165CBA94F37D43D972EAAE57339132B24EEB3269751BCA927C1513B63503B83734FF72F82FBA710B5424F96FFF7E943411B7E7A713EED12F14B2BD28BCE56F0FA669D4B45D498AE948AE55ED3A2127E7CF255B1E21C2384D44F86D6310CF1BD75C3CFB0483D4C181B588B6DBE0BAEBDD7FB8EE6D3C70C5C2013030F092ACC4E08AD772DA82F9167E24DA30D2630801B833E8FB36BFAE3B375A19AD81EB8DA4C979D041FFC7C9B1A73EF1C5B7E751A31335A96371ACAE038F1C6D7312CCAE42C476D35BAF7EE8303BD721B3C9901074E92A47F3ECA65FBFAD1842104F257AA28C400F288CED8FAB47E7B0F9AC674B2AD758DDC4D82DD0D261718553330B37938706C656304353A29170CAF539CB305CE1DDFAACEE39BF9E79C6CCE45F70BFBD2BD4A513EEAE24D2E98156B2FDBD7BA4B869481F19FB826F47EF5D2624958A3959A8F6D4DC2F78300ED78925E0F8B8B401EF0> |-/n <1C60D8A8C9B7EF3272AED84C447117DF46F865B97FFF41B029592F0B940D3CB1496385D278F27E297025A56C69B21BCC4BF07172388925626DFA8D6C471DD2C590CEE341C9379255E659C301E8B658357553D5C99C48C092267972A8433183661DD05FE8753D94EA589F58F98A095B0B81C0D9CA47EDC3C182D840B9D342BE463CBA8C184A5066CF3C562B1180B231C61D26E2526730BDE7ED78D55D78939A01438185A1FD0EF48EAA78E89F116F3F13A5> |-systemdict /gcheck known {setglobal} if end {end} ifendSQPXNZ+TimesNewRomanPS-BoldMT /Encoding getdup 103 /g putdup 110 /n putpop%ADOEndSubsetFont
/SQPXNZ+TimesNewRomanPS-BoldMT*1 [32{/.notdef}rp /space 12{/.notdef}rp /hyphen 31{/.notdef}rp /M 19{/.notdef}rp /a /.notdef /c /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /.notdef /w 136{/.notdef}rp]SQPXNZ+TimesNewRomanPS-BoldMT nfSQPXNZ+TimesNewRomanPS-BoldMT*1 [16 0 0 -16 0 0 ]msf656.238 29.2178 mo(Multifractal sp)sh758.886 29.2178 mo(ectral width for standardised and sigmoid )sh751.565 48.418 mo( transformed p-mo)sh880.432 48.418 mo(del output)sh3 lw
0 lc
633.897 268.93 mo
640.786 250.854 li
647.676 187.598 li
654.564 274.588 li
661.453 274.327 li
668.342 202.221 li
675.23 279.26 li
682.119 294.371 li
689.009 353.655 li
695.897 232.514 li
702.786 205.417 li
709.676 228.626 li
716.564 247.291 li
723.453 170.488 li
730.342 225.504 li
737.23 307.701 li
744.119 297.392 li
751.009 318.408 li
757.897 306.163 li
764.786 230.783 li
771.676 222.898 li
778.564 210.585 li
785.453 257.396 li
792.342 251.369 li
799.23 229.483 li
806.119 208.115 li
813.009 263.618 li
819.897 162.93 li
826.786 285.43 li
833.676 259.802 li
840.564 252.929 li
847.453 224.49 li
854.342 254.868 li
861.23 217.06 li
868.119 357.058 li
875.009 270.552 li
881.897 305.022 li
888.786 191.613 li
895.676 237.314 li
902.564 236.232 li
909.453 217.455 li
916.342 213.357 li
923.23 283.154 li
930.119 276.804 li
937.009 283.57 li
943.897 293.257 li
950.786 158.435 li
957.676 169.826 li
964.564 277.621 li
971.453 230.137 li
978.342 260.368 li
985.23 247.245 li
992.119 170.479 li
999.009 257.755 li
1005.9 284.553 li
1012.79 151.926 li
1019.68 243.493 li
1026.56 242.075 li
1033.45 165.062 li
1040.34 262.041 li
1047.23 232.376 li
1054.12 239.568 li
1061.01 190.337 li
1067.9 270.317 li
.792157 0 .12549 rgb
@
633.897 344.445 mo
640.786 345.804 li
647.676 355.239 li
654.564 352.902 li
661.453 358.185 li
668.342 366.196 li
675.23 357.837 li
682.119 357.443 li
689.009 363.4 li
695.897 362.702 li
702.786 368.04 li
709.676 362.783 li
716.564 356.54 li
723.453 359.27 li
730.342 349.89 li
737.23 350.599 li
744.119 346.612 li
751.009 361.004 li
757.897 348.023 li
764.786 357.175 li
771.676 363.182 li
778.564 359.741 li
785.453 368.375 li
792.342 349.58 li
799.23 360.125 li
806.119 350.689 li
813.009 363.9 li
819.897 358.837 li
826.786 349.224 li
833.676 355.472 li
840.564 349.017 li
847.453 356.605 li
854.342 350.762 li
861.23 350.771 li
868.119 352.394 li
875.009 345.396 li
881.897 358.516 li
888.786 360.353 li
895.676 357.107 li
902.564 353.296 li
909.453 354.859 li
916.342 346.131 li
923.23 340.658 li
930.119 353.944 li
937.009 350.043 li
943.897 360.42 li
950.786 353.824 li
957.676 343.553 li
964.564 340.495 li
971.453 356.525 li
978.342 346.579 li
985.23 354.296 li
992.119 362.76 li
999.009 356.501 li
1005.9 360.76 li
1012.79 353.544 li
1019.68 351.904 li
1026.56 358.523 li
1033.45 364.697 li
1040.34 353.304 li
1047.23 348.868 li
1054.12 359.582 li
1061.01 354.98 li
1067.9 358.843 li
.572549 .772549 .870588 rgb
@
633.897 364.902 mo
640.786 364.902 li
647.676 364.902 li
654.564 364.902 li
661.453 364.902 li
668.342 364.902 li
675.23 364.902 li
682.119 364.902 li
689.009 364.902 li
695.897 364.902 li
702.786 364.902 li
709.676 364.902 li
716.564 364.902 li
723.453 364.902 li
730.342 364.902 li
737.23 364.902 li
744.119 364.902 li
751.009 364.902 li
757.897 364.902 li
764.786 364.902 li
771.676 364.902 li
778.564 364.902 li
785.453 364.902 li
792.342 364.902 li
799.23 364.902 li
806.119 364.902 li
813.009 364.902 li
819.897 364.902 li
826.786 364.902 li
833.676 364.902 li
840.564 364.902 li
847.453 364.902 li
854.342 364.902 li
861.23 364.902 li
868.119 364.902 li
875.009 364.902 li
881.897 364.902 li
888.786 364.902 li
895.676 364.902 li
902.564 364.902 li
909.453 364.902 li
916.342 364.902 li
923.23 364.902 li
930.119 364.902 li
937.009 364.902 li
943.897 364.902 li
950.786 364.902 li
957.676 364.902 li
964.564 364.902 li
971.453 364.902 li
978.342 364.902 li
985.23 364.902 li
992.119 364.902 li
999.009 364.902 li
1005.9 364.902 li
1012.79 364.902 li
1019.68 364.902 li
1026.56 364.902 li
1033.45 364.902 li
1040.34 364.902 li
1047.23 364.902 li
1054.12 364.902 li
1061.01 364.902 li
1067.9 364.902 li
.0196078 .443137 .690196 rgb
@
1027.9 112.045 mo
1027.9 59.0449 li
890.397 59.0449 li
890.397 112.045 li
1027.9 112.045 li
cp
1 1 1 rgb
f
.137255 .121569 .12549 rgb
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.systemdict beginSQPXNX+TimesNewRomanPSMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/asterisk <1C60D8A8C9B7A73DB96A9BE2741D30049DF7EB3D49542C4E997965F360CDF01353F56E0042CFF11E8B4F51F996B11FDEE72CFCC78686D676EEC3484B7F19B8A5C84F247A3A01B806F435D2D29EB7FEA972206EB1E521EB68924398589A105B8618C067AD5089479518D26E7069132D6367F6E8567A6BCA200B56FA0959E88530C6CDAF56D201F0260F15F65A2F68978DC9FFA3B6BE0039E2632239B9B3D3A614215C65ECCC4826872DD75E382DBCECEC495BD438943C0B852EF66581DC9AE333E3E59CE06DBC76FD5288764EACC6D920257C19C8418F9CECC987960A35E70D830E3345E4924D24BADA5407D6F188B0846870A7410D17893669E9BD70541F6F1E92E22F0668DAE327A0157A5AA01532384766BC967CFD08613EFCBB67EF2E876EB0971F185AB15CF5D35DC2053C1F2C5FC1E76272F35AEEE47E08D4B4806B92E12E31A114B54D9E2A54907008A32B197FB6D5479DC7B18E574EAAD480B5B2182ADAF4FAC2C9FC56D0B1B40EB580> |-systemdict /gcheck known {setglobal} if end {end} ifendSQPXNX+TimesNewRomanPSMT /Encoding getdup 42 /asterisk putpop%ADOEndSubsetFont
/SQPXNX+TimesNewRomanPSMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /asterisk 2{/.notdef}rp /hyphen /period /.notdef /zero /one /two /.notdef /four /.notdef /six /.notdef /eight 8{/.notdef}rp /A /.notdef /C /D /.notdef /F 3{/.notdef}rp /J 2{/.notdef}rp /M 6{/.notdef}rp /T 12{/.notdef}rp /a /b 2{/.notdef}rp /e 2{/.notdef}rp /h /i 3{/.notdef}rp /m /n 3{/.notdef}rp /r /s 140{/.notdef}rp]SQPXNX+TimesNewRomanPSMT nfSQPXNX+TimesNewRomanPSMT*1 [14 0 0 -14 0 0 ]msf927.397 73.5449 mo(MF-DFA*)sh894.397 69.0449 mo
924.397 69.0449 li
.792157 0 .12549 rgb
@
.137255 .121569 .12549 rgb
SQPXNX+TimesNewRomanPSMT*1 [14 0 0 -14 0 0 ]msf927.397 90.0449 mo(MF-DMA*)sh894.397 85.5449 mo
924.397 85.5449 li
.572549 .772549 .870588 rgb
@
.137255 .121569 .12549 rgb
SQPXNX+TimesNewRomanPSMT*1 [14 0 0 -14 0 0 ]msf927.397 106.545 mo(Chhabra-Jensen*)sh894.397 102.045 mo
924.397 102.045 li
.0196078 .443137 .690196 rgb
@
1.5 lw
0 lj
890.397 112.045 mo
890.397 59.0449 li
1027.9 59.0449 li
1027.9 112.045 li
890.397 112.045 li
cp
.149 .149 .149 rgb
@
.452148 443.966 mo
560.452 443.966 li
560.452 878.966 li
.452148 878.966 li
.452148 443.966 li
cp
1 1 1 rgb
f
73.4521 824.466 mo
507.452 824.466 li
507.452 490.466 li
73.4521 490.466 li
73.4521 824.466 li
cp
f
2 lc
1 lj
479.896 490.466 mo
479.896 494.806 li
411.008 490.466 mo
411.008 494.806 li
342.119 490.466 mo
342.119 494.806 li
273.23 490.466 mo
273.23 494.806 li
204.341 490.466 mo
204.341 494.806 li
135.452 490.466 mo
135.452 494.806 li
479.896 824.466 mo
479.896 820.126 li
411.008 824.466 mo
411.008 820.126 li
342.119 824.466 mo
342.119 820.126 li
273.23 824.466 mo
273.23 820.126 li
204.341 824.466 mo
204.341 820.126 li
135.452 824.466 mo
135.452 820.126 li
73.4521 490.466 mo
507.452 490.466 li
73.4521 824.466 mo
507.452 824.466 li
.149 .149 .149 rgb
@
.301961 .301961 .309804 rgb
SQPXNX+TimesNewRomanPSMT*1 [20 0 0 -20 0 0 ]msf125.452 848.466 mo(20)[10 0 ]xsh194.343 848.466 mo(40)[10 0 ]xsh263.226 848.466 mo(60)[10 0 ]xsh332.116 848.466 mo(80)[10 0 ]xsh396.007 848.466 mo(100)sh464.897 848.466 mo(120)shSQPXNX+TimesNewRomanPSMT*1 [22 0 0 -22 0 0 ]msf252.452 873.966 mo(Time \(s\))sh507.452 530.951 mo
503.112 530.951 li
507.452 581.557 mo
503.112 581.557 li
507.452 632.163 mo
503.112 632.163 li
507.452 682.769 mo
503.112 682.769 li
507.452 733.375 mo
503.112 733.375 li
507.452 783.98 mo
503.112 783.98 li
73.4521 530.951 mo
77.792 530.951 li
73.4521 581.557 mo
77.792 581.557 li
73.4521 632.163 mo
77.792 632.163 li
73.4521 682.769 mo
77.792 682.769 li
73.4521 733.375 mo
77.792 733.375 li
73.4521 783.98 mo
77.792 783.98 li
507.452 824.466 mo
507.452 490.466 li
73.4521 824.466 mo
73.4521 490.466 li
.149 .149 .149 rgb
@
.301961 .301961 .309804 rgb
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.systemdict beginSQPXNX+TimesNewRomanPSMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/three <1C60D8A8C9B7A73D83638F79AE86E17D4CE334FAA90E146D21CDA0FEB71815E9499D6C6A6E581E78F34038D792771470EBF894DABD777E9B4FDE68E7E1544BCF1EFB2DCE59357B716B4D2ADF3EAC3A9FF8BD07EC79AF5536B9B74185F8F7489AD909079119E88D2BB755D6F6AC02C01BDFADB347EC55DAC49C8BB047661CC7AAA3BDC1DB8E01EC56137B53ED31B24F4502353853D049BB0515CA4217D33D10484933F30AD1EAA43CFDF00AFA5462EE9B1772CE60A3392B8D9C1A3598CF2273E36A1FF3A58B2E24B1EACE5E34650257902678998DAAFF235764CCCA143A> |-/five <1C60D8A8C9B7A73DB97C1FD4849B14157B765BEEE66B9438731A1E1DBF6D904609867EBF49E3E19DC6BA786F7382AB36C8CFA3690DF4F8E7A258691DFDD71792965BBA1DCE407BE309901C1513A762BED3C73A852D4EDA1BE20A2B364C59E2224D36D9C8BEE5DE8D6C54C49D0F66DB7448A8FCE0E63D5DEE7BBBA026A808CDA9AD5556005639017FF42B963FB833B4B64B6445B350600BDCDD563F> |-systemdict /gcheck known {setglobal} if end {end} ifendSQPXNX+TimesNewRomanPSMT /Encoding getdup 51 /three putdup 53 /five putpop%ADOEndSubsetFont
/SQPXNX+TimesNewRomanPSMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /asterisk 2{/.notdef}rp /hyphen /period /.notdef /zero /one /two /three /four /five /six /.notdef /eight 8{/.notdef}rp /A /.notdef /C /D /.notdef /F 3{/.notdef}rp /J 2{/.notdef}rp /M 6{/.notdef}rp /T 12{/.notdef}rp /a /b 2{/.notdef}rp /e 2{/.notdef}rp /h /i 3{/.notdef}rp /m /n 3{/.notdef}rp /r /s 140{/.notdef}rp]SQPXNX+TimesNewRomanPSMT nfSQPXNX+TimesNewRomanPSMT*1 [20 0 0 -20 0 0 ]msf42.4521 790.481 mo(0.5)sh57.4521 739.872 mo(1)sh42.4521 689.271 mo(1.5)sh57.4521 638.661 mo(2)sh42.4521 588.06 mo(2.5)sh57.4521 537.45 mo(3)sh32.686 668.325 mo
32.686 656.731 li
21.0142 662.527 li
32.686 668.325 li
32.686 668.325 li
cp
34.4521 669.777 mo
34.4521 669.893 34.395 669.95 34.2803 669.95 cv
34.2695 669.95 34.2593 669.947 34.249 669.942 cv
34.2383 669.938 34.2227 669.935 34.2021 669.935 cv
18.936 662.356 li
18.7803 662.294 18.7021 662.164 18.7021 661.966 cv
18.7021 661.669 li
18.7021 661.461 18.7803 661.325 18.936 661.263 cv
34.2021 653.685 li
34.2227 653.685 34.2383 653.683 34.249 653.677 cv
34.2593 653.672 34.2695 653.669 34.2803 653.669 cv
34.395 653.669 34.4521 653.731 34.4521 653.856 cv
34.4521 669.777 li
34.4521 669.777 li
cp
.149 .149 .149 rgb
f
.301961 .301961 .309804 rgb
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.systemdict beginSQPXNX+TimesNewRomanPSMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/f <1C60D8A8C9B81F2C3A6EB915F5DDF05E4CD39F13547A7EF54F9D79FF32092BEC553783B472AF53E99B3070692992C4C512F2D79447B5EC673AA5FA8274BFE5BA294793E06A2CD85C961166E35F08CE852DFFE5F2678D2E0B1687083D40FC628A3BE0EDFC936C866DE25768CCC0F39E7FAD6F5686BB7C64B79625F56C5573F9A5214AA079CAA28A8468CCF29829FD2A747DD586D41C21A37BF93A8AC8FDD941D5FFB6450DF53658C2420EB0E5E88807E727AED5F7> |-systemdict /gcheck known {setglobal} if end {end} ifendSQPXNX+TimesNewRomanPSMT /Encoding getdup 102 /f putpop%ADOEndSubsetFont
/SQPXNX+TimesNewRomanPSMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /asterisk 2{/.notdef}rp /hyphen /period /.notdef /zero /one /two /three /four /five /six /.notdef /eight 8{/.notdef}rp /A /.notdef /C /D /.notdef /F 3{/.notdef}rp /J 2{/.notdef}rp /M 6{/.notdef}rp /T 12{/.notdef}rp /a /b 2{/.notdef}rp /e /f /.notdef /h /i 3{/.notdef}rp /m /n 3{/.notdef}rp /r /s 140{/.notdef}rp]SQPXNX+TimesNewRomanPSMT nfSQPXNX+TimesNewRomanPSMT*1 [0 -22 -22 0 0 0 ]msf34.4521 651.966 mo(f)sh3 lw
0 lc
2 lj
[3 3 ] 0 dsh
73.4521 683.82 mo
80.3413 702.726 li
87.23 694.435 li
94.1191 696.229 li
101.008 632.489 li
107.896 677.34 li
114.785 680.435 li
121.674 785.679 li
128.563 803.628 li
135.452 666.46 li
142.341 697.519 li
149.23 731.738 li
156.119 714.371 li
163.008 597.677 li
169.896 648.33 li
176.785 737.536 li
183.674 694.867 li
190.563 739.8 li
197.452 751.051 li
204.341 684.404 li
211.23 709.756 li
218.119 748.521 li
225.008 597.429 li
231.896 758.502 li
238.785 680.006 li
245.674 611.085 li
252.563 688.599 li
259.452 609.424 li
266.341 709.697 li
273.23 740.479 li
280.119 747.864 li
287.008 704.359 li
293.896 755.369 li
300.785 587.673 li
307.674 750.636 li
314.563 692.183 li
321.452 736.979 li
328.341 708.295 li
335.23 798.31 li
342.119 690.579 li
349.008 727.264 li
355.896 681.627 li
362.785 713.881 li
369.674 690.125 li
376.563 688.626 li
383.452 709.261 li
390.341 614.838 li
397.23 654.665 li
404.119 732.468 li
411.008 669.763 li
417.896 658.537 li
424.785 713.93 li
431.674 586.836 li
438.563 704.391 li
445.452 689.759 li
452.341 766.167 li
459.23 679.468 li
466.119 698.956 li
473.008 605.943 li
479.896 708.072 li
486.785 675.698 li
493.674 715.644 li
500.563 731.52 li
507.452 673.286 li
.792157 0 .12549 rgb
@
73.4521 723.874 mo
80.3413 728.714 li
87.23 728.636 li
94.1191 729.675 li
101.008 735.397 li
107.896 737.151 li
114.785 736.934 li
121.674 727.483 li
128.563 727.431 li
135.452 733.05 li
142.341 732.827 li
149.23 732.204 li
156.119 728.235 li
163.008 732.275 li
169.896 724.31 li
176.785 725.434 li
183.674 721.227 li
190.563 732.019 li
197.452 722.651 li
204.341 727.765 li
211.23 728.994 li
218.119 725.021 li
225.008 728.854 li
231.896 732.798 li
238.785 725.11 li
245.674 720.3 li
252.563 725.567 li
259.452 726.486 li
266.341 720.874 li
273.23 725.603 li
280.119 720.837 li
287.008 731.204 li
293.896 733.263 li
300.785 731.751 li
307.674 734.154 li
314.563 715.914 li
321.452 730.573 li
328.341 732.445 li
335.23 724.049 li
342.119 707.54 li
349.008 723.921 li
355.896 739.267 li
362.785 723.458 li
369.674 720.985 li
376.563 729.613 li
383.452 727.107 li
390.341 731.05 li
397.23 721.436 li
404.119 715.208 li
411.008 739.826 li
417.896 726.579 li
424.785 732.197 li
431.674 732.002 li
438.563 722.059 li
445.452 722.123 li
452.341 729.502 li
459.23 732.325 li
466.119 726.619 li
473.008 719.382 li
479.896 729.055 li
486.785 714.224 li
493.674 714.227 li
500.563 712.708 li
507.452 721.685 li
.572549 .772549 .870588 rgb
@
73.4521 733.97 mo
80.3413 733.97 li
87.23 733.97 li
94.1191 733.97 li
101.008 733.97 li
107.896 733.97 li
114.785 733.97 li
121.674 733.97 li
128.563 733.97 li
135.452 733.97 li
142.341 733.97 li
149.23 733.97 li
156.119 733.97 li
163.008 733.97 li
169.896 733.97 li
176.785 733.97 li
183.674 733.97 li
190.563 733.97 li
197.452 733.97 li
204.341 733.97 li
211.23 733.97 li
218.119 733.97 li
225.008 733.97 li
231.896 733.97 li
238.785 733.97 li
245.674 733.97 li
252.563 733.97 li
259.452 733.97 li
266.341 733.97 li
273.23 733.97 li
280.119 733.97 li
287.008 733.97 li
293.896 733.97 li
300.785 733.97 li
307.674 733.97 li
314.563 733.97 li
321.452 733.97 li
328.341 733.97 li
335.23 733.97 li
342.119 733.97 li
349.008 733.97 li
355.896 733.97 li
362.785 733.97 li
369.674 733.97 li
376.563 733.97 li
383.452 733.97 li
390.341 733.97 li
397.23 733.97 li
404.119 733.97 li
411.008 733.97 li
417.896 733.97 li
424.785 733.97 li
431.674 733.97 li
438.563 733.97 li
445.452 733.97 li
452.341 733.97 li
459.23 733.97 li
466.119 733.97 li
473.008 733.97 li
479.896 733.97 li
486.785 733.97 li
493.674 733.97 li
500.563 733.97 li
507.452 733.97 li
.0196078 .443137 .690196 rgb
@
499.952 550.466 mo
499.952 497.466 li
369.452 497.466 li
369.452 550.466 li
499.952 550.466 li
cp
1 1 1 rgb
f
.137255 .121569 .12549 rgb
SQPXNX+TimesNewRomanPSMT*1 [14 0 0 -14 0 0 ]msf406.452 511.966 mo(MF-DFA)sh373.452 507.466 mo
403.452 507.466 li
.792157 0 .12549 rgb
@
.137255 .121569 .12549 rgb
SQPXNX+TimesNewRomanPSMT*1 [14 0 0 -14 0 0 ]msf406.452 528.466 mo(MF-DMA)sh373.452 523.966 mo
403.452 523.966 li
.572549 .772549 .870588 rgb
@
.137255 .121569 .12549 rgb
SQPXNX+TimesNewRomanPSMT*1 [14 0 0 -14 0 0 ]msf406.452 544.966 mo(Chhabra-Jensen)sh373.452 540.466 mo
403.452 540.466 li
.0196078 .443137 .690196 rgb
@
1.5 lw
0 lj
[] 0 dsh
369.452 550.466 mo
369.452 497.466 li
499.952 497.466 li
499.952 550.466 li
369.452 550.466 li
cp
.149 .149 .149 rgb
@
560.897 442.769 mo
1120.9 442.769 li
1120.9 877.769 li
560.897 877.769 li
560.897 442.769 li
cp
1 1 1 rgb
f
633.897 823.269 mo
1067.9 823.269 li
1067.9 489.269 li
633.897 489.269 li
633.897 823.269 li
cp
f
2 lc
1 lj
1040.34 489.269 mo
1040.34 493.608 li
971.453 489.269 mo
971.453 493.608 li
902.564 489.269 mo
902.564 493.608 li
833.676 489.269 mo
833.676 493.608 li
764.786 489.269 mo
764.786 493.608 li
695.897 489.269 mo
695.897 493.608 li
1040.34 823.269 mo
1040.34 818.929 li
971.453 823.269 mo
971.453 818.929 li
902.564 823.269 mo
902.564 818.929 li
833.676 823.269 mo
833.676 818.929 li
764.786 823.269 mo
764.786 818.929 li
695.897 823.269 mo
695.897 818.929 li
633.897 489.269 mo
1067.9 489.269 li
633.897 823.269 mo
1067.9 823.269 li
.149 .149 .149 rgb
@
.301961 .301961 .309804 rgb
SQPXNX+TimesNewRomanPSMT*1 [20 0 0 -20 0 0 ]msf685.897 847.269 mo(20)[10 0 ]xsh754.788 847.269 mo(40)[10 0 ]xsh823.671 847.269 mo(60)[10 0 ]xsh892.562 847.269 mo(80)[10 0 ]xsh956.452 847.269 mo(100)sh1025.34 847.269 mo(120)shSQPXNX+TimesNewRomanPSMT*1 [22 0 0 -22 0 0 ]msf812.897 872.769 mo(Time \(s\))sh1067.9 529.754 mo
1063.56 529.754 li
1067.9 580.359 mo
1063.56 580.359 li
1067.9 630.966 mo
1063.56 630.966 li
1067.9 681.572 mo
1063.56 681.572 li
1067.9 732.178 mo
1063.56 732.178 li
1067.9 782.784 mo
1063.56 782.784 li
633.897 529.754 mo
638.237 529.754 li
633.897 580.359 mo
638.237 580.359 li
633.897 630.966 mo
638.237 630.966 li
633.897 681.572 mo
638.237 681.572 li
633.897 732.178 mo
638.237 732.178 li
633.897 782.784 mo
638.237 782.784 li
1067.9 823.269 mo
1067.9 489.269 li
633.897 823.269 mo
633.897 489.269 li
.149 .149 .149 rgb
@
.301961 .301961 .309804 rgb
SQPXNX+TimesNewRomanPSMT*1 [20 0 0 -20 0 0 ]msf602.897 789.284 mo(0.5)sh617.897 738.675 mo(1)sh602.897 688.073 mo(1.5)sh617.897 637.464 mo(2)sh602.897 586.862 mo(2.5)sh617.897 536.253 mo(3)sh593.132 667.128 mo
593.132 655.535 li
581.459 661.331 li
593.132 667.128 li
593.132 667.128 li
cp
594.897 668.581 mo
594.897 668.695 594.84 668.753 594.726 668.753 cv
594.715 668.753 594.704 668.75 594.694 668.746 cv
594.684 668.74 594.668 668.738 594.647 668.738 cv
579.382 661.16 li
579.226 661.097 579.147 660.967 579.147 660.769 cv
579.147 660.472 li
579.147 660.264 579.226 660.129 579.382 660.065 cv
594.647 652.488 li
594.668 652.488 594.684 652.485 594.694 652.479 cv
594.704 652.475 594.715 652.472 594.726 652.472 cv
594.84 652.472 594.897 652.534 594.897 652.66 cv
594.897 668.581 li
594.897 668.581 li
cp
.149 .149 .149 rgb
f
.301961 .301961 .309804 rgb
SQPXNX+TimesNewRomanPSMT*1 [0 -22 -22 0 0 0 ]msf594.897 650.769 mo(f)sh3 lw
0 lc
633.897 660.099 mo
640.786 639.48 li
647.676 594.693 li
654.564 658.102 li
661.453 660.967 li
668.342 595.786 li
675.23 668.758 li
682.119 680.915 li
689.009 748.551 li
695.897 617.997 li
702.786 577.909 li
709.676 619.538 li
716.564 629.954 li
723.453 577.716 li
730.342 595.058 li
737.23 694.554 li
744.119 665.438 li
751.009 712.691 li
757.897 692.257 li
764.786 612.949 li
771.676 631.509 li
778.564 590.826 li
785.453 649.528 li
792.342 642.919 li
799.23 626.272 li
806.119 611.547 li
813.009 654.105 li
819.897 564.532 li
826.786 671.637 li
833.676 644.316 li
840.564 647.458 li
847.453 612.841 li
854.342 651.412 li
861.23 572.107 li
868.119 734.225 li
875.009 671.125 li
881.897 690.44 li
888.786 575.563 li
895.676 627.109 li
902.564 614.546 li
909.453 585.75 li
916.342 610.315 li
923.23 662.185 li
930.119 669.374 li
937.009 667.016 li
943.897 673.225 li
950.786 559.679 li
957.676 581.338 li
964.564 669.536 li
971.453 631.732 li
978.342 631.85 li
985.23 614.729 li
992.119 564.995 li
999.009 645.525 li
1005.9 677.052 li
1012.79 552.036 li
1019.68 640.857 li
1026.56 631.983 li
1033.45 565.597 li
1040.34 660.094 li
1047.23 633.21 li
1054.12 626.31 li
1061.01 593.103 li
1067.9 665.864 li
.792157 0 .12549 rgb
@
633.897 775.258 mo
640.786 780.935 li
647.676 782.22 li
654.564 775.847 li
661.453 777.581 li
668.342 786.853 li
675.23 780.744 li
682.119 785.254 li
689.009 783.565 li
695.897 780.984 li
702.786 794.64 li
709.676 790.769 li
716.564 784.983 li
723.453 786.123 li
730.342 780.383 li
737.23 783.665 li
744.119 775.745 li
751.009 790.555 li
757.897 782.394 li
764.786 786.091 li
771.676 794.504 li
778.564 785.614 li
785.453 789.992 li
792.342 781.231 li
799.23 791.688 li
806.119 782.469 li
813.009 788.666 li
819.897 793.825 li
826.786 773.49 li
833.676 770.646 li
840.564 778.582 li
847.453 785.301 li
854.342 784.229 li
861.23 769.94 li
868.119 787.192 li
875.009 770.379 li
881.897 784.529 li
888.786 787.192 li
895.676 783.748 li
902.564 787.297 li
909.453 781.867 li
916.342 778.323 li
923.23 774.61 li
930.119 779.252 li
937.009 783.529 li
943.897 787.556 li
950.786 785.541 li
957.676 772.625 li
964.564 775.955 li
971.453 786.483 li
978.342 768.888 li
985.23 783.017 li
992.119 794.521 li
999.009 777.199 li
1005.9 790.534 li
1012.79 785.721 li
1019.68 779.98 li
1026.56 785.022 li
1033.45 795.861 li
1040.34 778.329 li
1047.23 777.515 li
1054.12 795.787 li
1061.01 781.827 li
1067.9 782.953 li
.572549 .772549 .870588 rgb
@
633.897 788.912 mo
640.786 788.912 li
647.676 788.912 li
654.564 788.912 li
661.453 788.912 li
668.342 788.912 li
675.23 788.912 li
682.119 788.912 li
689.009 788.912 li
695.897 788.912 li
702.786 788.912 li
709.676 788.912 li
716.564 788.912 li
723.453 788.912 li
730.342 788.912 li
737.23 788.912 li
744.119 788.912 li
751.009 788.912 li
757.897 788.912 li
764.786 788.912 li
771.676 788.912 li
778.564 788.912 li
785.453 788.912 li
792.342 788.912 li
799.23 788.912 li
806.119 788.912 li
813.009 788.912 li
819.897 788.912 li
826.786 788.912 li
833.676 788.912 li
840.564 788.912 li
847.453 788.912 li
854.342 788.912 li
861.23 788.912 li
868.119 788.912 li
875.009 788.912 li
881.897 788.912 li
888.786 788.912 li
895.676 788.912 li
902.564 788.912 li
909.453 788.912 li
916.342 788.912 li
923.23 788.912 li
930.119 788.912 li
937.009 788.912 li
943.897 788.912 li
950.786 788.912 li
957.676 788.912 li
964.564 788.912 li
971.453 788.912 li
978.342 788.912 li
985.23 788.912 li
992.119 788.912 li
999.009 788.912 li
1005.9 788.912 li
1012.79 788.912 li
1019.68 788.912 li
1026.56 788.912 li
1033.45 788.912 li
1040.34 788.912 li
1047.23 788.912 li
1054.12 788.912 li
1061.01 788.912 li
1067.9 788.912 li
.0196078 .443137 .690196 rgb
@
810.897 549.269 mo
810.897 496.269 li
673.397 496.269 li
673.397 549.269 li
810.897 549.269 li
cp
1 1 1 rgb
f
.137255 .121569 .12549 rgb
SQPXNX+TimesNewRomanPSMT*1 [14 0 0 -14 0 0 ]msf710.397 510.769 mo(MF-DFA*)sh677.397 506.269 mo
707.397 506.269 li
.792157 0 .12549 rgb
@
.137255 .121569 .12549 rgb
SQPXNX+TimesNewRomanPSMT*1 [14 0 0 -14 0 0 ]msf710.397 527.269 mo(MF-DMA*)sh677.397 522.769 mo
707.397 522.769 li
.572549 .772549 .870588 rgb
@
.137255 .121569 .12549 rgb
SQPXNX+TimesNewRomanPSMT*1 [14 0 0 -14 0 0 ]msf710.397 543.769 mo(Chhabra-Jensen*)sh677.397 539.269 mo
707.397 539.269 li
.0196078 .443137 .690196 rgb
@
1.5 lw
0 lj
673.397 549.269 mo
673.397 496.269 li
810.897 496.269 li
810.897 549.269 li
673.397 549.269 li
cp
.149 .149 .149 rgb
@
0 0 0 rgb
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.systemdict beginSQPXNX+TimesNewRomanPSMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/B <1C60D8A8C9B64EDFFBC13662E45548907DF94CFDD8366168A19798D3F94023374D4D2C86938E32D7DB9C1872F3A204253AB72EA5DE94FC03994C8EF8A3AEA69543654A5C81A183CE8AEAD100B0BA927EF2453AE33B886ED98847317AAC2483A7B07D884E6BA01DCB84EDD0DBB4BCDE82582971377C63466C51717F481B412F62082ABE2DA40B3D1CD64A6F92915DAB718445366AAC40CD207CDC2AEAFBF75F78F4F875F819FE068F712E647D09F9C9585654CB217F940FB0CC4A0399BD16E20306B0AE361121402EB02A27DB6252E098ADE7CC6B62128FF27D9B35E955978F8F1CC87FEE6B14877366567A52B860F7D53BC608D1A75802EE31B412> |-systemdict /gcheck known {setglobal} if end {end} ifendSQPXNX+TimesNewRomanPSMT /Encoding getdup 66 /B putpop%ADOEndSubsetFont
/SQPXNX+TimesNewRomanPSMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /asterisk 2{/.notdef}rp /hyphen /period /.notdef /zero /one /two /three /four /five /six /.notdef /eight 8{/.notdef}rp /A /B /C /D /.notdef /F 3{/.notdef}rp /J 2{/.notdef}rp /M 6{/.notdef}rp /T 12{/.notdef}rp /a /b 2{/.notdef}rp /e /f /.notdef /h /i 3{/.notdef}rp /m /n 3{/.notdef}rp /r /s 140{/.notdef}rp]SQPXNX+TimesNewRomanPSMT nfSQPXNX+TimesNewRomanPSMT*1 [36 0 0 -36 0 0 ]msf0 29.918 mo(\(A\))sh0 474.564 mo(\(C\))sh554.133 474.564 mo(\(D\))sh554.133 29.918 mo(\(B\))sh.137255 .121569 .12549 rgb
SQPXNY+AdobeArabic-Regular*1 [16 0 0 -16 0 0 ]msf651.339 468.305 mo( )shSQPXNZ+TimesNewRomanPS-BoldMT*1 [16 0 0 -16 0 0 ]msf654.464 468.305 mo(Multifractal sp)sh757.112 468.305 mo(ectral height for standardised and sigmoid )sh751.565 487.505 mo( transformed p-mo)sh880.432 487.505 mo(del output)sh112.754 481.001 mo(Multifractal spectral height for )sh329.582 481.001 mo(raw p-model output)sh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/SQPXNY+AdobeArabic-Regular*1 uf/SQPXNY+AdobeArabic-Regular uf/AdobeArabic-Regular uf/SQPXNZ+TimesNewRomanPS-BoldMT*1 uf/SQPXNZ+TimesNewRomanPS-BoldMT uf/TimesNewRomanPS-BoldMT uf/SQPXNX+TimesNewRomanPSMT*1 uf/SQPXNX+TimesNewRomanPSMT uf/TimesNewRomanPSMT ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 17.0%%AI8_CreatorVersion: 22.0.1%%For: (Lucas Fran\615a) ()%%Title: (figure_2.eps)%%CreationDate: 25/01/2018 00:56%%Canvassize: 16383%AI9_DataStream%Gb".!k@3_tZ2b5]0>KZ2EtUL$S:epk*5DVD0L8fm27)GcIJ2FO&h"k/@=-nFc`D'23F75>Q+FQ<Wk,7cABL(5rHu:cB$%et>$jP\%nc],!$k%`q+^[WI16pH3Jeg4a#6WpU&.=5?6.k&_`^6A4e;$K06253A*=)fH(jHngKgFGno*>?>PI&_ufH4<33?r2u7rCnUNbNRL%n\)A^0>S<,4!M+;nh4j'MpF;o=,Q)<#b#AfjHR_^piJZ?Fbo-nMc6:26ebi6#l9\YX$c=EIB2\VP1t8W-hRcDHA:-:*=gg]1&k,7%R7_Er>]5HC8aZ#B(A#/On41\]ae%)<q;Z0J,q(1^./_a_6"9',J:A[Kp_j&NSlBmkQS*8?!l4um!";f(Pi[f5r.t?Y^&VWooT@"O%CNBGeA&2((@>@c#qE%se!VM9)@>c36eGF]5clLX4UETE!qolJO>bb>%"ER).TjYh%78R8eTA,E8?9_(L1_^K`%tm:;:a?*kNWf8m%]UZDA^Xg>10l<>ok6/a03("^ul[OH'YX$"iAc=G\3i=Pqp%N7STg&6MP`]p;S.f,RrpkMXM^-'4s"Njoe"DIp9B$5ATA6$2=C^(+%)$B*=3rYV!Wf*NYiCOf,^`MFe*s'3Aoj[J"49f^uQH'gXAsu.9blb6>OTWO\$OcjehLIhJq0f2S[%W#r*Jt&r!?W*M@c"??lOIFP%&E(eLd=N]K?O.5]dK]UcW\Nop91ifC,cEliY;83=+6"p>kE>qa3AK^W%jLo_qcRrJT[,3_iD"%r6l0@p*hJUpopjM-YYQ3Hrh-E6%K0Fhc_m$)c)tcYMrXq["$\tro"E:1!(Ii('7?2nPF$KOK\HZt?HJOQ5huYU',Bls_C%)RG!Z7b<ElgGUHq$oIl_fBt7H9GT5#:7%%TE2,G!="3i8`@Di/`qt91@m@hJL@fP6\3:Lgl.W([p.Wd^h9PiiH[Ne1I?>Tk@PW.s7-B>1r0b\%mF2r?k=ou`8;W+CW!fG,N,ma%E!!_PnIWpF"Rf@Mo'2YE^Ll3$H#;-!2L>R5iusi!,h&(?[3[JC8VWHCe+CR84`O1RT$sP'*+(<)atj8*&qjm%jR&XlWc'$s1bjW8%e2'7)\&?[8^aU[__o`)<!/>b_h#]$&a@ZMIF3fe-r!&%f3dQ>,S.j7EH5IPQkhLOU3%#K59Yo2R[lD(L>^e_M:\8P<5B2\.s8FA=%T&!!9Zf\:Dq-T;R0*hPm]dMb$*DXpU>PR=8!!g9FfKW.7%@N`MJ*fD;hm4oK6Q^l&X_7DE]Pr.3!USWgIndoq9L)fk7io.XilHOX%,QT7Ko`9).+7L0,aY99J@?liNVr/_lNpPqZ,S..Irua`7,"=iD?Po0o)tuGcj*^f@%2IqJ[#<-uQVRtrB6pq(U.@[$)CZK6d5M2'%j&rGa_lS.abanpP6dDBWTYBR.fbC?@$\@LLBR3pG-Q8q>`foA\BS#n<_e;Nu6<o'R9niDV_H5@3V,;q\e79ITH19+,2jkG0VF@*f%VU%An_k*Ue[>4K7dh+Zh7R;G-F!GFScd72ML,:]\24i?4^Vm,#DMt-I?lT6C]^a3bn=HLY5ZTmISb-SLai:]Ki#soD+u<6OcUd9i%`O$9bVb#65HF_Jts8N>_#;iS?m*O9f'N*oD,F=Ku0D?C3QWkk4W0sk[2'.,M4u*JfN?J`fEPrn.#PKD>1CalLRbh_>OjX4s\(a2C%pjH6VHOW%n!%Ejuq1kV6@&QBCH]ET,:WF2(X^FDV-OL?a?f3`R#3n_]/H]o)$k?sQ+QP+N,k,KVAj8U^"cY]A38b)[C#FV?SCmtN%JTimg:KHMtBfp[#VkEPo24fuN;[28Oj/HcU23"N:nME(o7uaFGn[(-E[`6eDGe+eh%h&f)B;"c'24c1TB;G&[COl86."O?5@[Mbn%/77c4(R`Lulr4/NP<JCYko!&))U:Bp2W,ms'9GH:!:UI8!)h9jef)ki`WO-c=9<CC/qB<!i)MJ%!9SjR!(`+4QcAW``WILZ)[M_F%:RnDYf^F3&fI?B@6o"]PIGj6NNJAAnB-0B[R56[=)V2-VT]YS[JG(>t%$]F`%H$j,#c99&'WD\i4;s'U#NF^kLLs!b3u_nD=\0j,%Q?_k']G1nA^M$#VQ:<QBBnUQ/7Pp0A/ebcb35&VenJqqmcY1JKGZZnd59$l]b02jaB%#(GZ]<&CH(l*g'^Ck)<-7r,5::0t8P-hF%8utDMhq#'u&"*Lf$dWHapNE+88nU)g=jRGE]fV(eQ!ZNJ$rYE[/-T[Q')HWr%p9?f.>P\`jWo)Y!V$-&B?%%ROjMd\@,-OomfT9;%$'ENKa<bG)4>JR7ADf-RXV@`tlLZZ#YDJL>n!Z(U<4uZ_N/`Y#=P3'CSV6-4n0R-umh\5^O2#u1$IfL6i&j4[ZS`N7@+YMhd;b.a%kNg+("8LZFI$3YXOn7$1"BB4;nHd$"!'V%g1j?kNf4qO'ci[`*(kQG+B\7qZ^^GXu<(%t&4L%'/=s"MfrI,<]r'Th;K[pt/_T'q*%:V+;b;fXti0`MJ>&$j:l+S$:%.PUYK4<EFEaJ?4,JO_#D4<5pK"f\aNc-d)P`<WjO+(DBi:-ZN1S(<JFBg?V[,i12jpIcGa^-:0`%_%hMZ'3aNAGS>Kgs*OY14L$$.*VVVdCLR7$fTHI\=JjnkGc`R3#GV\*IK<LT^7)Ka"7^=1@70&LU]M`ZL^nBer,j>V"C7]%n'Pu?%F^XRS!75XLn,=N1blqNe$T&X]1J,^u<(%U=(O184Po).Nlh;MHD-YQ%bNo(5>&^jm[RBjKE'[HF>^$C98X),+S`l?I8!7'dXPhL&%#MG`sYH\!*#*'IF@Gfjm%kB)&C]cDh%!?+;q&dRuGt/2PGkcal7h,e'+7^f21FY-ncS,(gcgL*G^sNoW^[q[=o9BCe9bd2gl>G2h%k%cYIAW2d]S*jWC)#j4$<"U(F)pFEe,1Ld3lQa6fLtj$/U6i=#_@Hbfm,s\j$c!n-GOsrCQg<4U`FO`9)9g<Hk*YCg"u,G[+4E+s%JB4Vc9WQh#*q8n,m,.JGO%nqPLk3Z^4t/_?P+3S.XE(+f8!k(`U&Tb'3aT"UpYV%[*G(hXAYe@)i"]rg[64eNckgO-YcoL+dWuu)%*MIUj4PfZ?3%F*h?>WX$FbbR282M6F"MBj&jpu4?mU.=$pP#B02rK>g_I%nGJ2\=)KRG"N(p9RBrP8aTp%gue?T<Z5i6$]0Ma^!>%!6:/rfesJX6mH#fe;"2p&HGE"KPSkK<aP1BDt'S15(%mQrW6QX2RG,U?L8a1r7""AT0W=p\-I#5(:[l_n?2u85k<<,>Xp#&DqGHs%58Xi!r.)4P3"QAk!K[5Q2\6>3?i6%J2s?0S65UJu5l/CtBYY^Iq>u4U3!_qV)%-YCB1Ci5BBB7]^b#>5f>*IGkBQ]Is$30\5EKO8%+3:eg:UFU1^`U[@n;lWkoLEpBrZet6r/k7AoZ@)l>R,.mAcGB*Du+&F9!3)YB)bK+s%)#un43=eJXaC,^G#9dh"8hiKfn8b;#Yl*%#QMU;8aqe2Z%@JdN"u78B<:#5R8!tdOkGEG+.5h/rfPlei#e@]#lTn=K[:g/9aL][^00Z\oZ]^PUi.%F'7D[o+1^Omq]j]TI"14G%L[U:/oC2^@CEC2SEm;Mr8$7.4rl?r-hsE:^IjN]r@Kspjp`k3ngT*L;9!81bhsC%df>!L75B!0un+PJl^Q@WJIbDJtkF5f2^Q@VC%DbnC?P*UTkiP&UHno&(8:J<%hcAMVe7eH)4keE2?5Hc^.G1,I/a7>ji48:%!#Cg:Hi/^POr/l8WgM):i,L_/%MU%j&-27ZAMP%>t%2eBF#S/D)5OT@/G_guLRLBW3t&e.5r60,:=Z"Uoh"r%:DaS?*q^#3$Ai!W#K_%;h@n2u6)!lP\hr4n:PZ]e84)^`HA3XDLbT6&%\%gcS6)Kl;h.O['npVE`:gp`t23_5Dc>=!ue4Asuco6L:,;HVXL;"*"1p]TNG5n<Kb;0JE$R3@bGgq>[]a"$iS&AUq+oSkm/Jj%!?a%RX!-8JWdifCNQ^*:AmZ>]in284L,#^R.er@SN!^Rj87pESq#<8&+Ff`-[brn;1BkSKI!e3f)#,Y]*FC&q!gnWVl(b*ZgVHR$>3Q@%Va:4\HsWl,C;$0:`1C]'A&WS>$ND)q_m=gM;lb1>:O_7:*='KpH\@/W$Ch%3\#4:OpcC(VD@]DDdu:,V(4?!D.\5fBh$8P2&.T6q%d(r3tL>*@#\,INsr@3k9Eg%`9cek%YD2>_@hTd^&W;F?O4f6<6Wd\76dk.7_nSe-^s.t8fqk\V;_l!HF/V`W::@s\(rHBjHIngMa%1_.2P3(F&!TiN36j5U3fnioOb^L<ATMnf7HBB0$_0VGo@g&H2!N+"np%o5.rnj`T:T[qR8n?"grJ$%nSQ(!_F)ub%5E?kUh<5PA3%^^G(r]#!,.?+$>[\T>so/pH;:`GVpS>7G5[s4^3RY>)XFdbh&uc@;<0?tQ\iWPHN<49Al`:+VFL`E[/f\pigl^b7qWYtL[e)1eqD%r3&0d@/B_<PHZ9lp`0'#hk_Ro9f`](2Eda']6K=o00p\mP4"k*Lr'8.V^,$^[I=eI9'ar$06k-BAV]X_pjo*FoQk`8U*LB#,SU[`%KC[AC/Nd0cIg$>"ZtHDGCRTpc,6GL\$AsPT&->!mpmssAoZVadJEo3<iu^T6!?=1gCbq?>U!D'K9r+,A1-BLK+I4<L8&,RZc6qF9%cP%TO!8F4RR\5*Ag)feY&Y8*D:Y4@oOduKVO?_a>!'Y&(EqoVM:3S@C4K#sP[?hbg^bb1JqJ.2@3bu`3;P>lt_-LMCb`6<B@+Pk?%S0=5qJ@TLq<"Y.F]^A$=k_6Q_G33J#CNpTR6u,4-<:VX&RIpEG5&BcH%31s@Ns<`EUD@HFqYTpo%$'q0iQu)t\Z(kYS38=XQ(F.[%1Er_aCjT]J+U+"Z,3^tL%XRE(RKWlhK;o-0M9O,10@VX+Y:g>o^-:qkgm+@If1\g`2q^hB_<=@GFO]k,'D.l-"')Wmcmrsg\K^>]%A-I51QoFqL_&LYJnGq'Dq45\Jfe#M6HfSUco5,'-=U4e<]Vf4UoS:`:&,9D2JFnD'D.*-T?06pM>;T0#36c26J8GG/+!kZTDqA7T%PGr4OV^$Iq;MI*Vnrf%<:HX?G%jZ:NnR[FZ;Q"<KDkT5`Y(hInH;5%CkYd;SRU.cp]R.SX(J2/hBAmoajU)7oc1`lc\0X^]JFD+^%$7H*nIr/B%g;QK>B%utZQm.nIpfe,EJgA[Y?^NX'Ji>)'&(`IV;2BCQ"3P7hB0P8J\\7>mUL9=%,CV1kPOo7_3F]TPr-]i.d<mnm%7e.?]*T.8*96(/nqLFh;pho&D:)QA)[#uf40Si-P;>/#Y80Fj"!*-gtP.5792us;aO]<7D:fd:2ipSKS,PQ7#dR`:+$"T0baqmB$%GS*7flLV(A`!\PE+0$ZDPJS&'C'@I>;tLrE."'E1*u7i-PH5Y5mRfJ@ctH>r]$dcfKI-F0?gGU5GSN/6G?R(5XarF]4DVUNN(R"!%>V'Q?D&EUK_>tr@8t6h5#g.^PPS`j-Ob$TPZ1DAELWKROc$=9%J#1Mt_t1#V)o::0n'ig8fCNh%1)H&f)SChCF?K%ONgrfO7_Adk%P'Il.%U\a[1E<1=]I==C4l;u^L0oTb,E^h/]&<IgP-j&0/o$Zb&?(b1fPu;IrP!5!XJBJk%'gn)880.7fu;WE!fL6_;I@pOUqcJ"%TZE["KNDbL!ZjS=Y>0EIIeq`'Ool'YUVJt+5Rd0*iqqb>$bR(AS_1#-@*RL)Fi@(P;ESg*B@hdL>oYtlp/6RC"lROinKW:f:')Gg%INcsW3G$oFi!#+*4MN3BE=]WC&?GBWI?kUrUr^e@nKHcpN#gr&![c[6:p`7RFOijP4Oc.!iJcQYGr`a2H@$Mo_+6D7.@@BAN0DH[%$($Eepi&]#F(0US@p72'Gn`BTG8l/g67oRUct>k3mp3:7j248Z7/dnX"_:djcEN)7,u0rk4+A^tn8MM`cYVc.qf:b;78Q=VA6R9%%^Ge&RO<<Q54^B.R3,C2fNprM[QFi-'$G2'u/DNq=N]!c@c/Geg[(*X\d6cb=RK3;@<.S)IInmd@O*Tt,T1hW%=&V#:-d1NYGS';X%8=hU[heXTRG23b7(!>=9Q3ftX5ca&$l#1F1!ongBN_Ta5!O$Qi/-U@1`<c]_Glp%c`?]d=1g@jZ%L'N\%#:)e;`qj.0B9Vq+$UN<%L'THT<S-e4Sl8/,TNk-]Gbd0W5&PoeTleN;^tLB@ElYssQkf/7)cHVFOYb83@>>bI*nVqj@,#`@U?8#aHj:^2Gq\]3,:^>h,I^n>%(1]$V_G.<5QIMG!"ajPOm]KbU,c998$!d58p=7k;2I!@Cm4[?+UsP?gMm_3H'=EC3\2^TLUk#D]p\T"U6ji#4#<0oI&q@_oiiH[X%=*f6kF#OOK;"lVC,X?FhFT>#M8Wc8pXn#3Y/(%<A![u,S81ES.Irs#G:dGe[)B.lY73300hNi3RJ@L$U6PBM&WXgI\T`pV_#i^#8%0TRo?7>l2P!iWIF3`(1MFZ4P1PDoW=,h9eUp056?,Hh3W+>7V_>Vl454ic;*UF=YWbGu,>0e09@:bqisHBMIC'rM5DbqF@b!E%p/%<mV'#@")"Mp5J,V]>0D>'qPVJISnMhW2,i;g_kB)1Pe3dc]no#Cdl5^^'\^jW3Sq#"&OOg(qlU#jg+4t20`P2*S>2<]P7Fck>?gT%#3D0*p#23W!)QntE%rk,\T%[;"Q3_K!rl,<&7:T^dk*a^n4\t,(3G0Ih#_cm\3=g+G#csUcmsJR0:Q&1]Q4"-9MYaL:hY"$/ObK,%KUWWScm0SGnh)RE(i/^0E1.(:<"m%hBX\3-%07Zj!13JX32L/oC%n3$inU8um'tfD\Q`2WJ_l!hkHH/0IoMG\?h,6?^q(h@&R.]8%VJ@%<h2oMT\@(Z$ig,RuGf:*69HMg?Mf"Rb(XYW0gXBE'HS#FY+O?G^V5]_oGhUIX-*bEs+5mPf_:c-S<=CMNr]!t(IT[*a$E_RC%>A:WIbDj;AL#[>_P6PIO;UGqC,7@heb;GM'J.tg#MC(l9/[&VVk_8W7h[8ChX.YEU'tm`lJ/R3^e,_Z&9hU>S8l">^a?2b\Z.<pk%G[@DPjEV6^H%?\$BepK@M8JFp%aj;53P3;2[&V9]K^O8D2dXCgd)*Qm,p=T^/TWQpjt.=XGZc:[hDpGBjeqQ$fj'`6R9'k8Q][H!%@Kam0&AHTH2LfqoT&eH.[HftZk_(RDAGR#npqj[Z7c:l5-404:5S65=L>"+&d=`3"<[C;R7.A-/]BfI;_,]>3]?8meYOZ#mY^BA6%('sCa?a>bF-CiV,H#6?#I5XT`DQZlo"S2aQ5k(IBV^n:3X_N$R)^U^I]Venm`f%?`HH:7G%7AqnJ(3_]TiYk:PWS,31OY4bMiH><%,0eML<A^'-LO]=!8#N],kB/ht7Bb0CX*TaS'!)n<s)@u?=EM86eZN<<K9:amH^XBXEXP'ug>J#U;Tbkn&u*FZK$T)6_:tjsI'?`"%f>@Ed;MAK<k\J`kM5T:`-I]L!4H%%Z1\<O<C&8G!K2iFj-Sgh8`r^Xo4i"6aNN$H.B:Rnd*B)>i8uBk.++/)m_RBo`2;Rl>YDCP5%hVE2!i.DD):Q%5bqLi5Qn>iVZT)>t4%lj=t%;($h.>>J[?D;tU:iOH<0BO$g&-%<S6\eZMg@OTfM>Sg_p=E5dJ(EXpAU9uUWE@6q%I6cB7\&-W3Hc[olAQ-<dnrJpSO>-VO',&#(A'h?*q22rGb8XethY.'%q<&jk_+:CiU$?qAlFBC1^4OXqorN=.a14Dk-MSC"1$lRP%K'b\tk*c%-pXD_7d2;LPcAi5-&\JR%Xo^L5[5%H%ZTbkKa'e?m-f@Rm_bh@Bg6-;s;\B&qUDk^p8'd`"B:^kk$Q_Y8dURDQ5KAe3%Eq<*]P>CmMp,2K6h8JI$o]KnYjf&jt[0cI6_WA$e2fCl94*#Tr-An(#-rcZFEpJL$bY`''Z1M[D(3UDW`Q+(tGaeU&O(VCnko@ei%'kSc!YJr>'B6p1S0BYib.D1"%](6&q$5]9M`G@U/pp'A=(61Y)pO`',e26/"]%ei1^!9QR2DQgK:OY:/Y%[\Y?^XtH)H1gKhYOS5%TP5;SHg$/J6d7*J@hX9C_aE=a!mGdBdllqrNblP@-tP*Tj[ePcdnI^Af&mjP=+<EgBI(Q&b4Od[8;I5m)/P[5B)k\b:-UC]k]HW/%!9bu!e*0c\,G\8ap6Eo%VUsKBT0@Dk=O`@Q*;(gq_2_X`)uO:r>02TpT?trmFeia+1'/Q.TPj)>3kb>@VDC4'O#j&^1"D]/@-F%$%RR*VDQC,.WZ_k/a3a8:NlKkpg>N]\cZT@8W4OCWF$QhG(e7I*SQKndHGLpTq0KMnkr.^tDk<JW,\tD&\eV0NJYqCu0-s\+SnEZgf%5Znohlc-O2C^,2VpL#%sFie1%WCm[AQFc]0F6KnaHX<%c0hcZm1M,&N>G#V8flVJh<LO/FY3%cVFEQ@qd64?H2I4KGWp&0cbZ`W#%1]k8&pSk>8S3HSV-dl/E4\m,"!6a\,5HGg5\$*C;?I5[@%Q[nOr97V=/`t0dDFNPTh8\e5lZTP\ViGT)9=iI&n5FOQqT=+i"[D5\%LMT=rc5OoQlftIQGN;Y.]o+e^lb*`iY4lFcS]7H9I`/8_aJ6_SO2pstqP49jkgS&F;kI9:])(Er(=6.>.U.?"[G97jkDb#+ZYf1(%rSsQK+*dmWf?@:!T6,2hrH&8u0B*_=Ibb5/G)!o(rm6O%!1'CV+#<&lPgNkKUfI]SH9*mm\tQD1o8b)MT\8cf7!:P,8A)tZL32V=%foU]b2@\cN[qM]N2\1YoCHGqfI6>"J,D46MG`*X8#/#Xg#%H9A)*WGU%un]8n)RLRg72:ap!)"'BQ<1#7`W$G14%ug%qAGfh\i2m%P>>\oG0h+JH-B_Kq_Kj7__DQ<4&5Xg3-<25``LKZA]/)5(ZV5e>8]BgoZ;>;QJ<fmr:HX:RESHfFd(irGr9#kptc]GAfR\dUH*&2%H5BjcC"6OX)RTg>W>g#Y9dBW,aY_jl5#(X0Fia20H#K)\MqQCWS)XOUAM\7oh<*P0*!kljk#`"<0rNV@X2\[&Ka'DUj(YhYpWUnf%o5hN#2<3P9^q:qE0BR\3kVf&<[\:Z6%p]qeiH_^3#&eBP]H)L0A8>_k;JC=;QI]h,AJqYQ#KunLC027FOi+K*=!j6n-Ck53c]W\&%=l##"P;O$``N0RlOe]<\N'CGa^a`N7ql\WKqMNV#oBN#eh.F>DlS2VmgFQK:B(P('/R,_k:YJ]Vg2/?gk%S&C]p[WHWk"hjS^c2+%lXUN6Z$gL76+\TGl*.eE0*Zde/cTN\PlhtPfl&/&D)7%'7jKgt"1S6Z^0/4afT5+S`F6))h]0?93H<!\qPb_>mThdnSb]BtfQa,1%\=PT=4rP$Bj/DF"2(#5D@`UTY`QFr3i?DX!"hM3e2J9D53I5K:S[3Ni_7?%QL+`G=[rJrP8V\f9F(JUEa3UH[[U"ut61EFnH@Hqn%>T7m"jZ4uc]l$@6V;VoPVd"@kFT>P![=NJa*n1im2dYg:h:q4Dld8f4$'2.9R<g&u6dV#YQ,fJ.m-+1+pT%d7:rK$iZSe>#Xk$1_%lgGcNhGb%>HE5)P_)kc]LYcb"+8"t%?HcBRehnc_HaJ(&LTYKJ<H)jYl]Ya!2T9\^[P,)o51A[Uj7>E9*53\$f_T?nn]:H8GF*\"%]F4U#lNW:)QLF8?Tn)OdT*rC-rN1%Il@4^1e,GF)1(qqERpM('i&Tp>JVQYG*2nl;qS8<NGRP-.,9<HU7QTbcfT3l40WYeNE]I(&%mqLL-1Y:%or,gZ1+hKn,$:V2nEi>AuF@3`:G7p?^XkV38FCYm9?N[!@e2At3q5cEU4bX,4h^1I`8:-_q_muVk*(CS&nf^oSAHS(X%AGe0fY,+@WL1]-Uob"T41i"-PU@#fI&Uc$c@(\uBcBs#CC<'dP]ai\r<%0^L<eo>=pQ4!oil9]<N!FC"@Q^9ld.(HAXWF)FX-WMm%pC7jCX!*j$k<@IRenS5Wi/q)FicFYfrnpD.EXtb=h"L5nY@\</J[+ofW!<2lB;n?H+7dmijC?G@8PYirT_FY*otd/=\T40=nr\5k%2%T@\$84I3.I)FRe"10nPKnj[Q?:_nd\Z-=bori$^MP`Tr+2EJbX]k#E&h064tQIYCIr>+ZI/A[Q`V:@<-Fc`)6sK^k0TK9mROlR%QgrUi\aJuibq5fh6/MBYRchT57lk!o]&!1ki@:$U]JmD*O#aa'A0Z8%U&V.9'\<!6W+[&td)EM-'eMT^RsoA24OPN]bk=j?\g$04%`V'SAPho*?7d8B1UWVG,/Q^6,W(m)%<CiF"p?f0Fm+%8aN6V&nl+bG_Q&fU8WnL4^a(gbk33(fklE.W9&BUBKq*N[ST#ZI%Lb,=:%?ET?3CP3VV+""_'``2D11A:QZnFFu2@Ce`L\^'=U^&Ha;prLHtO,i^Mop?%#?64kf_rKc0nX=C-)o[%X5PFrB0D^m=q,u?P>.t_h%BN7s6Vq0og5.5TPMc2]8,k^P:e8!F!g'^Elf!0O)hG25n&ag&OSlB@sfWTH]KXotlGrjFB\7n%sFS]'/0@EK>HEERBfioL6e%U5g%0_D\)[93I>Rr7u"?@4O7NZYJkA!Lj=(?WKSd$F&'1o=\n\`aQr,:<AN=sOJOU%6sY;q#075:ngRfuW]$%$0strTWP5`><gNiTnI(%CfO7opREu/Guq6#?a']NJ#W71j-TRdRXDM+b]L$Ke,&n5Fa?Tml/(3-NTi%o(n884gYM]Fg"V8%!Bam02g*H)nN(LT:Ybnt@8a@>%iQ:G#j`n6<.]<$r*o">g?]Hqt=IHn_WUsSS5Gq^kr)@C<Vt!N_2''mGXXRhRG%QlWj$7+CF_U2R7b0'a4QKarbhFp,2;\jLCdar]%%2,duk:Em_`B+HWq/`uX%\HLSbp)O^qL/@cZIq*2Q5c:BXo.R7I+@fS#-7-GU=Ols>C>8pa'R?oa#`]R5=2JTjeM_<fR4a*Q%r)`%]U`sFq+Q$#IiRrpU<np:7jj8Jl(<.@>rpBhmDckLF`4NS/c1,'Hem"1h?VIHFs"h@ffp``dq%Iro/7&5<d4+`+<A%n`q1-o:Bj%=%'jOQ!r,.*Y]AEhB`#^PY2U`lHs!073*Jo"uO(s+H;/g`?+,2<8YX/6inb.V_QLL1*%#3*OK=CiLfX;'#6!Wf+'#Qfha-AXT^9iG1%r[pK#%p'SI75Rcoiu5ks).C\QdctT=i/7H5]KR\TXdM10-+'e%O\JWeFTq>TA:f/:18@H:[8#cq5D]sfVD7kJ\@<WE-"h_Q_CMGe%!i`'m`K;!$=Q9+>Zg'J.?.h&7g9"i-]rkPg3N\V&)L'ZM:qp6@).MiZ.G5!&@eEeq,>F_@iF9XTLmYD3^u4n6q2bI%kr#?uA%+Ul%E$"4"?1W=uVKBJRUX"k!a6^+eY,;p6U'h%3j=KbC>F&?hlLPV'(X<gkZ1)i!R/_ES#+f*q&Gajjcp>^;,8i8,MYVdBR/PZ@L)O!>%iN5j$JJlAQ7<m1.H-Pu%mX[JuI_46:3jC-JV.6lZkK#_ZVkURU?YE,(=N1#+o9<Up%DsmZH\sD\X(-#^I`;NMGW4eu=T(%H!)=[>%#EVXB`lg(C5++WDd&>.!+s4fuf4ESj1d'agPK"=8YW?BM=g2bfXTF]2,%L25*SEsG4,asP`>im'-O3Yh$A:tF#(B`;$B+b<_2NY&%GaMYRhdbtlFe7EX;AL)1GWfX'?1TG>hj0:(=+6,X'Haua1]*SOkBL[Y4WkMh=:52^(j:Hib?*p/&6mdRKSP$F4LWO\E6u@%j2(#$%'%q-3[:;05eP5:5-".W+SC&Gb3:iE%O<GLeO^gmj0RnrTVM7#42RtaIL6<^l!HuRXBGbLQTq%;!N@j4#<HBjtHa,Ls,O`G^k+^/k%9L13QpgB&RTI(S@GH.hLct>kSQs`-)L4pPp4Qe9.1VeA_?NmCrPLkpj(7`*dCAGZ^)*T>*o8gpHlH'FM!+%H#A?gYSg$49A2i[m^%qTseQL]I9'W6=<N8CT?&&-tFS5%^3hrkjk*G\WiS*4HckTkV7^D4.!lR:\)+atL?lch-C)CoK.#"/F_+&a".Jr`kguN^5SmP\Cp)%+2^Zfr=SV=(H^*OQs82t+Md&b38Bpc*54u<F'$OAlh4L:Dk#>qfpi5jkW\5/j2'PpU^$TA_b`*&_:.r2;4m)QO/HdE7$?ZRiS5#@%PjSs[$V!lI#K$5PoA$_F]dH^'Dt,^P7k0UF:DECc47#^4QAgjCI3k+/^LPS1_.ZSY"_'nK-,9mq:=XY>1T=hS@hOehr4QcLeD(p[%UA+#\)93&<&>;'MVbWI)>0R:VDADGQ$BD^0aD!+@!$`+[Qu6=B2)GaHe]nS*1Y?`k<IkY#BDkRPr9PA[qk-sG%Ks$/V1QlNNCn=b%F@4Pu)H3NbQofhP8Oi=)qIh*B/S`CC<uQc/@*fU8?=,/.\CR0[X(Z9cj2HE8g#knlhH_8.^@2<9ROsDNHn_'"\XEV2E84Q@i'^--%T(dk#qf/.pZJ5>.bk+q37KB1F\,\K&SE-HKBQf):17cD,!a^40B1%^UMQrI*R+r)NC<73#"Ufs\o%AZu"LY_1^R/=k4@')LSt?3f%_bArEUP8*ZR833^)u8-t'$-ee'*5nc4X[;e7!<''XG_oJB'%_>kDgSGb66$84Ca@rVl,.>iH*)b1npm5PHDmp&s,V*YF\8@*UsKM%!#Bon#\L?jp*J19YNFK8dEHqu;9l^<PP5*^!d/Q"HTk.Zh,>uB4[k?]*<SOmdaTg[ApTA"5!>Z/WgVUs4,]pMRu[@`^KG2#5b62/%V-H.m5:+"n')(60VQgit[,t8Qhicb6)AC^8r<g;OTde3Z(X^i2\*e%LV[q#+B*:6i>F#;U8[sZ:TI\pi9qDk!fHc"d_lk1V]TAJ6%N?1)>$l4Xp#U4[?5'_DuNg`4J>)8s^],=!B#i?ep%)\1*E3%dX_;F5X(l&9G&<#aGZ5>%eH@a[ZZ!?-Tn&41+`(#Ut-#/I]A#-VA%`nM:AFHJ[==;%@2"2-AS.#G,*6:ZjCJ]5L=",4_17Vj2-$,uFb\Dk4H?l.$5#o_6T]HhE>#t$KEFFhLU'n0`D!a'n3`K4(-fXQCh%MGk6]@A*okPHT]5_!m4Nc<2+t*7(j/;bF!_Oa7Vt"!]N4Rn+k\+c)AERbS'&UXLE_W%g6rJ0o?N-0Wl)VmWH`PXIuMW5L>'[P#RP%;,[%:*W$-/rM!?D(F4#H70K%/0e!3\=M#!dqp^_lP04\OX<jUG'8g2+-MkZ:+0pHRLOYnLY+Il+)q=T#["[]E:Oh?`:DhL'*mBnm%HL\['MA:8W2jhQ,?]jqrmkOsj-,3"^%K0jU4eAGWZd#D9REBdB7.Ail%qkZTLLZ.W)%_]4!uaR@Id+/7(tYrkZ+Y1!S06PV)U\_G%24@a?3m[V*m5)pu-p&S-SUJ5?mZ+7q=pWkk67`T\42`2RgI]9T?6mKc4aPij#XScO_T^^)A4'+aM\e<]g$(7ffF)99[t:2Lob?Kj%_g5apOX;`'j#[hq1ki2OFB^",N-f^Oi$eY4F-3%`k;<A+!hL%oeq;<+#u4HQ-I>]fAoOIg1h")3Mh\ecCJ;f#Ljd;_/jbD2h,Kg0%K>)';qF=?3/955\3H:_k?',9tUsJR1q))O&L+E=UD45=>?gQISl0X;^@;%.-&p!!P,"V*bTpe&Mq$?#NfK`sJ"ilKbZS.(=gNkO%%m+6d!K@.dh-V&tt:r14/)%,%M"/(n7L6aL6qq%2ps8SNaU7!ZO9EZ2=m0$*tbePUhZ#n>gUJXNDn0eEDQO-P&(<44U1>Qg$!T%.3%@^Ah0ktCbn;)V>>fa/e&:#JLfmsEn.EiW8I$kPOhS9t:\%G5fUZ(Ki/*$>f,/HV7>&qbbO34n]DkdUj6AbX4,]<)lm;cOARLU+le%iRN@-&h]4%m"StXIfcCnB8Z+$N+P)0SsMum<j-,iXYcCs7_;0Vd*p(#Bg6bG0\/EP(k26_)3\ZNG]T=^]_-o(>G@Si-,Rld8eLK`%`iLn#<3hmgW)Z%nCCF,I6/7re^Vf7fk?UJs'cu`(+^<4r:0B74m*e!]+2!Ogd<NoYH-cqH]%7f6M\Var8ma.dm5ASWR&_BdDk-D^%R%6:Wil%]u5u.CC`,rXf&).S8Cusl`_;lF25^L_^c;t=2Z7B:Ym-fmn?#,D%OCVO$`ifB0]$]gOA^"flKR&qhj4DU'*L0,JNt=9s%5q#8VEbftAJlr9/9?16gI-*g.<CHXFY\bDJ\^.&&&)<N*(,^qW&KUB:MmcLKR&Q(L3R`ru[E!QA^5G%ub%K7W3'HBJkK4!@13/Mg%UmjpY0\Nek6SM!BRgE+jjd%:+Fa#M>[(AhGLW78?I-aA[$BqaZ"VAGuV*D:rlXe(>?1\V/h2p"e,S@/o3G2K^HCi_T*sPm7(DOKf%o6#Hf4JhPOETdbmDPgu)i@barEH=/A^.B:_S;"(!F*M%J!Gf%Obhk+kp]<!m^EK.=p!*<TDZ,_-%\DID[_9)mFF"E.=d2UV[r?MC%bpgB-_Fu?gSp]XrDMQM,#;lP53RO*95125+]>]WC4N]=-]X$:Jd@%1AD-#`Q>fJtu,aP;:d#"\b^+a_3&kE+4'(+$LLHW$&:N*J@%%[66=4YRq<(X.$K`CjM#=>+iJ-3nm8Qf*upkH2C]&hJj^r/*8:NK;%&[^NO^^nl*aMYU-&0#a9P?-o9"`S\b'=/A@gHh_RrDi1"%%M6UoMnn>;KAUId&P0XuLN'T#D%2Rhn];+0`gO5SDb`rq]BJ>c0<fA8e$9aYpO1@PKU`8[c"f6PHDY%KGFE75Ak8gk$]P\kKiB^s?%$Qp(1i!/5J((*2=5Keo][N=M"@($`h#$l]*I4')O]eKd,44)4<P8-tfLL@k^V/)7#6aX,f@$tW.:eSj8#JTBG;O4Pa.9H-ED/qZN%I[`Ra(X[G&iL)Zo7IlCd:mN/ipW'$;\SBiL`.Z9REL5&(=,qMj<3!gaP2o!O0;Tf=9r?:\KVKRK2GWh$2@X8/``01lQ4:f<k&"8F%V3daYnH#\$U7P(K\k0p@OWO-EGVP=Fnu)STfUu$\L;Yhf3D^BRQb:<>!]iF./"f>5Q!-p#2bs]*;;*pONb#Y!#4p%$F*r)o-pKDM%"WF9&gH[habius<GN-G6L8q/a]/+Z)m=ROa*;o&ToYl6=?$a$if?Xka?F)^Iq[(2Zfm6];q#)aY,/>!b\Tu>aa#'?2:5agZc"QAE%>o\9)GKj[f>$p!00R[f0Tr/UFXME*b9YaZoH1Hk7"bJo+@`KF=(&I=2A1HkZC!&+njqf<)Q;H3^Qo13g\@2!.bUl_ADYUI+$Zllq%0G2L<=@M9!a4fheDH?R2dR4'O,8t$3Yd;/%I/t9?=tB1f$nbn\NHiSZM(oDR:(AlV4Kn>Nm8dF:8B$A".k5sXRTS,O_X,c!SOae1%r3:KiK>=CqLF5MDm<fBiqgh'\kc2%aTtmh9TLOaaEREC%S<NTaqS"WkmK$pdgEn'p9.&G2'L<h"=rB*%YY&C+P-7=85ZiU3jB]bD%%R6=PHY/hKOXa1SVI/Bus,qd(*l/uem5&'UWn7MJp$OEU7T;(6/g!:'NL_>:kX(4PPt(!i=u^'+$cbX-\]U*GR!%8kgMkl&64%fY%1B\L1_Y+YM(S-q/Oe==snl$*ZZH\lpD@c31!1qXohR#Et9YC`?hh,PbL6r46/Pa)]#m4G6nRagmrKqde5NcZTBlgj^c(A>S(3<o]%&&!Nb7Rn1$O\T'GCj_O1FVH7E(H\r@K^Bj)c52Z5!#iX^(Yksq!>Yj2,!IP;RMH,>i7OmU0%g6BY\"$*Mf'uf)Uela0V-i3D1!F1%%'1sDmbeZUbWQ`9mq>%-,jFJ?B,lK1KIf8ggU7]Q:`_c86S-&7[-'otajq+,2DVX6LS'ld9Vb&uiR539BW\iM3NTujj$_,("$CdD%I*B^Y*V(DJ9hrq=Ts[!o,1FGm2^KT!qqT37^t0gEn\p?X`28m.k<6I:/doQfBf)^6-Pl(NJ%Jo9VO'Qi];ON`[f2"Xd#6rbj+%>1%T:lej,DjEcZakM1a+BP^0K\MHbg(.b&;EU<"fA%XOUZ-ho?a012Md#b\T2T\1=sDL9:ntdrSr:-QI&tSMoDk#J#nHq$gIFj+1Rm#%[_qEPIa3J/J)5]9GB(]G[_\ZQ#ie]pg@h>gf;a:mp4hp"b+P>-m9@oqhW2&qQpAjM6[fm]knD@klT1:.ZkktAAH+2-MDJ9P0D=X>%Ra*gJ[:;$4<4'l0LNHXj7sbI@+`Fo1G>9K82h!H@?!MD+2P8<A0ct:OA[a:n=*f1Ag4Oi7B";_!e)YL24Vcl3:+N\?+2p^P]sAM?%*Pq2\0>-"ph1tH=%7/&/XdT-08RH;'!92Y?6ZXAgO+dT#!'%1B'+j*C"O('H`'%[RCmaJ[_`^b<d7sJ4%QN>T"Y!(mjnBpcU(1Kj%j%VWWGWAVHXK3_qbM1X?=i*2!AMXp2"i<(!!AA,f?5t.Lae(YMp$`=(REEf1butu;QS(d)%R'nbD*=7+LmL(b,X4Qdl7%+JMM3Ih%/rZE'I:.#!,DkROTmlUpK=*E+ii=WsU?rdF$aYpHQu1JllgVX:G/-XRS;hE=H,!4`!-L1`(L3`V1)h),?+f$$O.FHf02L=iT/Ab(%!+KFg#d+f-&DmYKr;hkDBl*C&Ip7sB4@Qlt6")pDF*;RHr9`8h4a6!<gY>U^ja2FC=$tA=b=4b3[%<g6O+0G:4ERh:CD_O*$e&E*%aB:t5k%Em;PijH'IEmp:7o<"b`lNVt>aTSh(%Cr.B4dda[>OG(2]j"JYPG29iT8-B_k)hIQ"IQ?MEUX1J/=s$\qiW%=DLe,/j\q.%2pV[>]^g.:TpXe5e^gI&FQ+]**)SET*)82BH?<S]/-A^so>):2(LE'JjUfAOJ?grSbIbf_hJ.4e1^`poo!cVY>7>FMl+U-*gCpT9%-7S?6O0=[0L]\Co[dqC/%Mkl'ahRPnjY.>/T!GOXa?;Of;<3bqhQO'-kDm\)9VD6`?mX#C$NH[Wb2:r$S3$jXZDR[",'3`p&^[&A%Ndm2@-HeIPaqkKB&l]D0ah0Z+>LZpR+@$gYDOuY3o:?K@`bo.clt8Rld,C;Fp%_"B)o^ZH&58_3'E.Vp(*'5=5+g>E*AT*DJO`aP%VW9D,;]]I2Uj"hQ8-.cH*;%I6,,b4@NrLHO-Ro6u.4e8?3/pr#''buLP=j=Kq>?2_G.?QdmcrCD\Y#X,<@W(:^[&jBl!us-k<UV&%(88O^_u&RmPO,%@%idUIA?2uo.DBK-ZfKNs@RI!O)"a:<04c()MLpIq.^*Q,#>LcHmSW9j4;`Q=HrjBegDqu[*nPc44PdVD%e&dT%[AUX-hdp^drV`[BR#LAsWcMhA.IbA-,!;McCfZf^Yf.Sb#CD"`N`Y?HV))GC`e\:8jE+%7hLoS3,LK_dG1/UghC9Lb+rWF(hUNU'%0-S1)B`\U7a#fPTH$Y2B#\R44o#/%ZqsJ/*H^*;-4&CRZq$`F8MW+Vja1&/GGAJ\TF<5`XUtPm&]#$]37UC;bG9s2)b'.Qa8,u#5%8$'!:A+U1g*OS<)-`Z#1(gJXh*URi8B\?>?[%R0O286HkY8+=odPre4!@'kQGC!+\%Sjp6\T3u,h(!:ocnYk>r"T;19qJ_I/U.TS%CBE3F!#_MC^b,*L*hN;G6fc_uA=$BlJ:?mJKHOl[G)_Lg_6mMF2n[0759,1c@-.Oe1g<9:.f2=hT9TMr@+tbqSH*fnJj[;M[AWs-%?BjhXD'`iEqOi3;dUfY7\S=Z/iN_LR]9PC/Gcc'EcGb6=*AXf\l"(T*\2pr#Cs(^%.,1j(Oo]o%Y$13kBAL0iHp>Y#'mB38Dt6l)%_!"c.5;61.X9nD'aU0Yc_M&lUk@?&r>UhlL,qklTZ%88WZt,]&ga/IQ5J)eN\Z=,3GAop,RCg#g=[)"])T2s^(Wi[17l'i\G,,=@%O4WE*\/_Kud18J;!f;*EIsKDTHpSA'r`&?RbqGff:"dm=^u=9Oo((;nGj'f]3m45kWH54+ar6Jh0lp2QQcE"S3D,oHSYN<6e_/dq%DOof%lft""VnC=:D>:c85h?<5Wp[O]pJqc$'@c,[9a3/C_.thr@''Hp>EiH:RHD$20.%$W&&8QGA"BJF++;X!IDlE+lu)*)M+9Wi%KH^lil09819i5PM*0E8qJ]6Sd*M)6DC=V!tfsTH'0X=t<[fa!uD?,jjRm="L%ep!8,Q:6t3OF-&Rm9ejKmW5>:P]uZ-1QCt48>1T%h](rV`^ppdKjdaVj=+`5CRK2kPq2Q+JZ#m<R%U;.eX0;i/7]QP*$FbuFk4+TX`JV`".^t%nj<>%3`gJ=J?2m6ec6I/F/i>8ktZc0%;Zj6YCW=Tq[Cm8:2U_Eaih-YrneP_Rbrckln%(9123#^>2imMGZj0XP*_$0baXg"Jo%7Lj$KOKC4Dhsp-;_%I=8XB&p=CN:8$\pH%,:8L!k;R8h*@^eZU\?54>2$9L3O!N"M0cMi)c4p!8T:b^2]^3F]e<t&Y@2dLhBA\5rD6g1&u"EK#2B+d-&;,`HM]huAWZ&OTapM]%ECeEhO3l=;+XVuO*/L%=)el)S]pZ;Gab(:*lLaL&C/!3XZ1BHaX1.:e-"N*l%)thc&X>g((qk6R]kj0*MX!g[]]tE1R&RW6F<m!7%$tNWZWMNc/1uuU0f9iMgRBHtFg9(U\+8S^JUBS:I+Kp)KAk]L$>8E-q:BS:LBoA'^p<9ldZnQLrNHuO;4#0?:P@/mSoLL/H]6]OD%82[9KB@4,+BEc)LZVbhg5t`G>Ku\bB<S]*XPdVi-(l+>?p&Wn*$6CcsP"$?,NP*6/pJDR&^:4Rj4$-eJ$7Qhh`OE=N%'Lh,BsVa=%jH/BXP4O)ENO7ck=9r\eKTKqB@K@P[c4l1YjKaXI:$OJ&nB)k*]P`T.UsB?c4m^$.;S*46`^K.9"F2&hiIb6^lS$So%+:4\]U9SV%E_,fYLA`]]O?ss$nQPaIV*Cp!N[3%jgu=Yh=sLV-Y7skg?DtYtbM/T?oMW?MqHB;3I!N/'-'8ZgqkYjlm]+N8?]F<=f9_YE:cfqu%Ok0K.IPIC<O@FPplD9RDRgd[S-7/Uf7_gZOmk@bb9-\:!$^5T-m7e5X>B<_/8E'Jec0NCu3%rDsI>rL/kcIJrl/Tfmf8N2s,,B2P%"@P>N\G!30VG(9N:'Ts]mk(Vb<Cs!K8!dPKIWH7NN#_^/&":rm4CO@IrAN&rYs$]Y4$r5=,ctW$VfhI?4dKNH[gQ)aKpc^'+.m/H%3p?[@&!Rn[9q!/+UrS]e`2O5?oJQnfG(`kKL<rN>rM0p2!GL<@<iP(F]E4n>UBi;2eL8?Y9jooGa:LBCJ]Dtfe8L<-C'Z9,_P/nc%'L(>?UgESm8nA;!XM7c+f_u(>@TaI\XR-d[=&0It4ljM2$')eK+X'_E^3NDlA=nn9fPVi+F9R%bdtrEtAbgoAc'r;$#(9m&jN_jq%&7Nu8:^!9[fVe?gE]#=6qj%.Pl8`>g>F!jAm*gd:hKbH;]#)LRMo;cjB7/k)RI&D6A"W>65Fj\KEUKes@Ne*;5F[sMhN!iFj[>_Q%Sh;Rd;:3"(a#a495/m0!.uEqsea?c/3Fh1ANjG'$nT8H5H?A^R?h:OXZc",\^RN5OU[6HjA*ZsWIC^<kZ>K$oQ,Ij8@WF$o2B\t>%&'@)<q?"bdH&7r$qe<MlpU44;Y.WJ"T,'2A.3\Sql:^@rH&6*S5,0\Vo/'SC(*;gTSn$?]kc(?/VGlj1S3%l8Q0$kLae%I_MoMjS%Qo_js;GU6;kpHFE^tH7dI"#S[O`T2shRV_oa',Zje!;)E'dl;$d*-\j_?`3#F&et[-Fa2.ge:]7b]eT8"TK>@@i%"/nck&,@I`<I%m+H8SHCs;mj^Mj)bf$+sOp8Z)`K3ct"%'=B^\9mNaPHt"aeodZG6#?Gie#M7=[,Ss^p`J80\gXSN&;]V,N2k8AWVWT)O$kEfY2<<%q+(U_B3D$<$MqPKOa;qDa0&h,(SZTsk"H9LS<#MR2=chu*j],nd^e%Ii/e!Nf!$>Z(USXRJ<QVFh1a>+<e/[XP!o_rqqr.3qa.Y<%G*"usU.GnXN+J*2hIMa8DnJUGA9gVKK.Kn;4056?-?O,8.H=\N"he*Ka<F%oM(DQgO7WR'8jlfHq>?ZJ#[?_B^6<:\DDscHp,C`[%%%lRs;j2-.A6K1=XPU5U+q&XEbrBqc+E$,O>B`n%*F=UW=ZfPHP8WCim\WDt*ps2SEds5Wlb(8mqTpQTTdC;Y`8LdFM?"osA`F#i%+W2lFjFQ"$$V\>1"f;S=O=ZdO5L'JT,!ZY1)$*5:@-upg1_HNAOjV?u<^bdIq??j#s)e&8[P0-:Rcbi[&te"SC?eK5^BM??Teh)%%T4Pq8r,"h<QW8PU[*4b"J:,IcX$MpUrIG;9]LC6q>2`#(hRJB?aiOT`\)Hs^;VhbIYn:P1OjJMpVekadaMAt$pR+uGS!?*s5Dr8?%J*;r0s$9tY*pi0WHP$02>kkYKncp2m^8V(aN1u1N'_WW*1fT15&1D'@'nB`dlppU#apoV8HRA1W.Es?UIS.^&<>XIAH/KT(h_fGA%ClbBrI+d[roo$["RN<F6oa-T'\01-As&VojiO)"G-C:ue+^#pQ1Lka,AN)5H`%+37Zf"6$\5C?n?*@fuEp7,Z[e-Ld\NIu2=a1qn%7cft=o;;f+L(nDArW#QVC1^"\7n1XHLDm=OQJ9XW^3KS[OB_cf#3<62Jt_*9Ns8.<KS=]\R/qS/H'rPj*\cA_.GrQ=JQRRC792*K%q,r#43ZcSXF4"N_&<`>6`n@W#!#(ASqt6o*Mqk7@qW5o\%bEq9'RS8Y3W#0WT((7M?6$W.L+=b[/>KUL'6WM]GJZS;41QUpV]/n0%!tIb#O:SGG7RUP]0Q[>%N[79.P,0VP0e)UV_"4q"3;,L:?C4'G33Kl(?4tM&66A[)Hu>@D9n\h'Q:)dh`['Y%Em9.oo5[fP#Rhn+%9(aemMj9r/apJfGC@>kC'&%%AQVlgseKDDZ=&.jL0L]01+fX.'W=b61NdXKnjB]>if;\&MW);XI?TAnE5/3cjp*SJlA%Ze=4idu2%eCr`^$p9@QJT^_EeuU[+!ND2oo3PfLq&ngKM+RSe?^02rqCs=poX?)hi%*N.R(<W0O%EM3Mga,;/uo6]24R;il+-Sp:Fi!i^d`WL%*`MnW)jT*S:ZDm)]*adjeQ`FFUp+$.V7Y';c".[lU1^8\IoAC"qD'YGg18L,&@dJmT"\bM,RG(.Q%0SA+eCe>=&sk7_5`fXd'ltA%Lg]>8-0<.N(Ia&gR0dV2L8jJT2F"&k2Ir+1gQrUuLP+f;USi!93ZEIH5`IEFAk9iGA<IkH'3(1F5fSG9/*-t+jd+YpN[1Q5eq2k9%%)CWF,\_\Gn\,>4:q=UHjES9uUkEWr0:sC@Eo8D%QsW6b/%IkUE:?_U$\C`Kr\UK6PU_1$$?(#XI6Q[2P@$b+5l4X^*u!3nPe6^F%YV&:Jc!5N?/E%07)l"@5E/7Ra6X2ZC"5p`#;C3+`Zr[4G>QRD)*;b>`lkM[`K8Nr7keG;Q8BuKM"\$=DQMXeu>Q-,-e^1fD%kFJ8%;HWT;S<j*dETPHX&(#r)hd$X^HEbr#=nN/JT3W0a%$(Otf[g7I/(\u'"d^'/-=[.S'2ftoSgb4])@f)`lofb044?G*e0G]G]@&QK%cW04V8el-bY=Kg'1o_oiJ#XU!gsubQBi$ouC>t*>9<?f7XRZ7"Pual-'e%tho?3*:e+?"%4S*uX+WWN'.H^I@%7$q3$E>r`E4j7"%7d/#f$g+lNHN9KcT'GBK+r.gC>cb7#GAfaL^i),b[F]cF>n0]kQHsgI,!JHMpXK/eCr]nbAq5:ghoZ1H*dV2&a`,VJ/lIK^Q0B)V%>t+]=Re6%"Gdd@#J`Knk#b=^F'TIDuGHXtNXX,,MC1f`lH&htP=<Ee#/l\rP^iBLS<TnA`ck]^1a:Ur%C@balZuoC9FE8\0KYW!'%44j817="-a&&Kq3VXcM:/W3):Cn*r+@%fMo(@Y:*1a&+VkDapf@F=rG>;Y"A495(b(9J+PI+Op>H"giJVK2$U?MfaOj7iN`=>U:P%_P0W_qJO4Hrn8lS,IJS7?@'^s0C(S=acRh70]Z9=@p`\BLpqISmA7$+^!9h(6,[i0)i)1bp0<#g!>[;>h_7A8'eX83N:WpPA\;G^%H".ot)sG$"eR-eEhtnO&HW=in#'\&7Er09Q^PTBVIDmU".)<)(kh$^188Nj=aS)Q_Et51a8.FV`_7=LMOmFcTTWSr2b595DAjaA+%6gW]_hcs&(kA2a=RLO7bL]2J8pGDfQC_d!Sk<]nEVIh_+.aNg8*:+,'Hi6q0h^cr\Yi!1`ha8eiF5ag=(kSOHhlE6c&=d\6pDalb%/elgJIq:NcrD^oeZZ@:r[n#Or34W?EL;2R$"K50V)oes/pL/'r0_jE2itjtK6C711.Dn;u$pAT?>:rBG5J!IdGe+g$U\dWJV^l7k%Y9]u[Lu/[p5u5)&;1<kYRZ(SUj>l_.dtlbH?::#MNK>2dE8^<Y0Q;9IXsU$9>FoB5dh9!MR.Fm]k->rueEgERdNr3'i+GP[$nm13%9^/2(D$tp:Xkp!^]=D$m!6fA?fBPSn`&W$D<BaQ'D1Jh3fr'[qFMiAu>\:4$'K=nV1u]iR)A=AgIUu(C?<(l,9*Q>^RE1!I"6OEc%V9ZJe:NXmu\=dnSr*rhh=&?&n;m)d']aL/$YLh,M=3tYT5>sqI>X=.j<;D(`3op]0@C>%FCZq!5k^ZD,OW$:B$G*9Q_(XBd.9Fjs%*W(s;3op^[X(oI(f$GjIcuBeDhlEGLDMRM>J"VNk\Us8#HDT=63e_u.aLb8K$.Q6pDai$#Y>/=-`5TeNq-0=o"FHpZ8@mYB-&fd9%CT+6qYXg9^#nj/'`91CqM%]X!2ru=JrP$(:Zj!f7QfTJb0jX6H;D"fV?(eD7qog+Y<iJtNd2F)X_ttP\hpEf8W:Oc2h!RK$r8"<@%6i6uR6;=_S0QV@q8R1@eh"*t.?]fF\F/;9hW+bVQegQd,Bh\7LCuL:V6%fj-aE^a.9%@e_&LEFu1VG9d`W`bc2]@lXD4&M>_V\D<%Wu!%)6@Q&hmIjSBgR2AMlumTQ9%6T!"KK,'q"1FkjL9`VqsEhX6jfXq/[[;B01ll.1LSgM2H/Mr/Nm0JPOYC$YkM2F48&2':^U:*%mO0hRfC:^P'lfb`UaieX_GXLZ^6ps5&ecQ$2j&_@9`j2>J#aQD[pi?8EkA.5^goq"]HhO/^/`3t;S1ai7318b\c0Pj86STK`9aq_%b7^Z23!o[X.tda@pp="WVL1\YNBQcTllqg`KGdGiG>NG^;&[`bqE?Ud(k\=PeH<E`,'+2cDH.AP]+o#7,I(H11Nrh_h%oJpM;:3"%iJ,9=eMGmVO\<47W@Zn0YL8cNY"]JjHkcjtl>!l14]aR.Cm7^.1&0UR@gr?^kJjsk^@CcT"aeEJ$M>+Z]".U]Z64%Q#8VikKis_<%%S)ZLl'mBInhhZ$HYDD=)tD"/I9>L+2T['lN2upT?P1>\dTCC5j.4^LajA:P/dSU*[dmebb4ca$[?]X<5Md&cb#eE^\Z=3?DjA?t%[6,'Z;.=s"UQ:T0q%rt6b)_PWO,>?r,NXucPETI%7qA0a`8p$e\gu5PcPhb*P\T6]V@3WkI'P#39Qq(kB1>@q_Ck=6Ek5QNW[&s#%7`KkIOkE`')4?sT-BjRkhNa4cX5_'4`h1Aopl.#*Rc=W2nl:0K#8$rErD)@'M(G\$QfhU(($K_LN!tg#4_8;6bfK;*O^SDsi4Bkp%W`2GWU#oWpZO8>4];%@KH:A\#Tr*-+YL$FTh5WiUG*^H%[>L22eTVkEW=4QNGgFp,P<**7;,]NU;3TK1XMq9u@1?rAU%Y$OH^F:X%q<X9aUf'Qqh`3WSbJ537.^mU%WN268#^#7t5q&*RP`A@*8N"I4kfqL*hP^[cf%4.!>.\!Coi+Y-]R%*VSCa[Q*fd^q,eKuBqt4ou%Nq"XZ^:qEf\fU;-3f>ZA_b&?\^^@FjY(ump7I"1OE4;hNJ#47sHK3TlEH_F^;%JHEb,^E0])jS@0U/Vnqnb?=?`8a4j$gDdnAjhQ%fMO)tLf7LgVf($$eVejfZ5ubZb.=NKmn"X0?eZ6>nWX0l<:,OT<Un$i1IZ#s9"A!eC4jHkWmMCukBG`o"N@4;:Ad#?+0"=!grZ3u%9;Z*P.OqTb:Pc")n]]nZD#(H55q'MMI_F,@.YltJ1^NoTceVT(Fk7N`_BM&M!O2$1:$1&0I=E(8C!0#)WkIrX&"No`i(+Vmh)B]]%'_1\g_V#s?qfatiHK.$I,D#=;q2LC;^30.BMBc`YW@sb43eml3cTjat=>-OhHPap+h%65?4/VR^@<E<a\:113#]3QVWORE"9,N&a%,'EZ:'reC/5>dOMU&7;I.]aH`M2G7<k9h`W+WPXF5i8a%)ICD7_GsGJV%]S3k`Qd;:JuJ?YO&^2^D'F_?0oU(iD<:+?OWhP\::at%:?ihoT.bo1-*a'kKnC`n$&[\Z!W,bD*'Al;Naq@h=:1t1,N=WXE)M^iA8V!1.6bB47/.bU+<eKTEdqAcs->mHG0L3m;fu!)0RYLC%)i)5CF0_?%@O&Rd[A;Q8$`J_Q@0).-R[2Cd]YKmbD5t9,3J^J[)I8p,I:ljAJY)sH0mCVtV>$(UIDB*GhHZ>S"+67jbYNq%e<h9n%Hc];3m5\A.NTf=urjb#Rjduo[3`?O]Wk#3XQHNi&20]EnpV?/r0PuLhZT0CA23pSb=[Mj,?Zd,ua',3aGQl'(nQE37:I"H4#$5tH%6:]05]0.TBf[9QTg`q^k?)oQ01h;-'C?'>*h\@[.9!0QQWON]ok+F@u`Pl`aWp.^/L?pL(]P9d6;R%2'Q::(0`-65:G3D-(cd:oV%Y1W,1WU=T#<+/;jH5tB!qtTHpC+b:+:oYgX5KP)QRTt)b.EMqL\G+#kE_+qdI0t]ZM]R:UofOSKqpI(VWnIV_lVd+&2s'R5g0.0C%G3Z/a,kfr^#B'(='i1aMB;ql_E\$ci*W)lPU6_43MGs=`Wi3%p;0@[V05I;(O4C.Kn>r'(kj[B4k=Xi1E`1YWiJQ13hBXJ6>nYtX%GO$S9[;lmsOo4KnR(S:q7n!7NId.P+=\rdEfBl5l<:_Jcfa)Np7CY'Zl!Cu+qkgPfP0@1mn(LI79G5Jfs2]F6&N?j9@`F=N]Ba[@%l(f^qePAD59uk:uY,.>rq<L,mFAguhoj+*FXeq:kmBTpoA(>[9egnLB9rFlZnb^jY;VC1cA?BcLdn']bYg26@X6F/=62tUUSQ%23%i]2m'Whr_;>5qhbSQ%23`7jN9X6HEpl(Eb+fkS)k@pUaXe8F%0<RXP4Y,E];#HI$a9WR*cU`ZS5PH(GmS>Z!(eT=]L4e(X7_.l$a%9^e$Cdn/*<M/N:hJSMd.=*VJZ9df+.rbOH_PY_'cM('FMHb[MeYGP7Ng[g'JFQ.9DC[#`mP]qU7SJ2'X?#!`JVNVkOA`b&7T<+ng%Y-7c&C-#K*o:siX;W?5oe9/(nC-&o1s0L6t;Sj!:6Ltl@FAaVs(CTiJC-!M0<rntoMH"!a.'_e.;,Nnj1j9Y^.:6#Q<+@3C0&Gg<%>D&J"IebMd`4+9&72Do:$b?0"Upa(S]T;NYGG1mG%E/-^7u-1RjHMmO(?s#4W2"<sS$5.D*D+jH^RD4g<0P6Q9<"m)^*0DD*e<I=%1BjMU[SkmLdb2J[U2K$VV+da?,"c9D=qhMCNR>Z.`d4J]1t_22maUTXWd]<0"LfUBiM*rrp*318F8(CD`>>\fP8Gt)(Z!o>N"K?:%pXT5apK_hfHV+;<U:W(F.@mZQ]B?&JY?u@K\Ru`<=0B)4HS4*Ip&jJ_q,;_.L&k,=&uiuR(5Zcp<B/figAMt@YA/=_CCdjl(HmZR%mP!t87YPsY'G\_jELOUI!F(bT/&*DJKh[?NGGNAt,(n>>G!-FUhR<L?#)fFS#T]B1m>2>?[qtHG4mnt@amTGKG;g39VJ7orWngJO%R$o&Ob1iAIjnk1_7s.8e)UhD??`pBiTWkg1hhIo9M<_6j'#/nCjRkZm5?_1DAN!8=mS2p5J*Kuu#jUF,.FqSWp@&X$[uHgNV?tqH%HTdXgj=a,3>R4qcLM.4+rAp[.GKS`g2Lp2JdgoETLsJ5M3*/Cg`?kRc=0@Fjis%m?TV^Y>XrB=p5u%@H7FgV]28qld[<E$F3+'EX%Qb*>$?3L#Y;Z[daf1s!.me#7QjKI-thQ*Yu:SLbbrIktmRmUX%%_a_-L#m(;T;\s+ID[(PPED;Bpl-6\`:m;jn$r8K0GND`pZ9Q<%]BY4eDp%tFjjf\:mXF5o]UQ15b+%t9H,CY8@ANA%;[lE*4X%>oNdk-aNtg.TV7&>=DoZ0KmrrgeC>XIgOTe%-DZTXmm;"Xq0@X#d%2SN1XcJJL&iM\f!i?gFF1"=`:M7;Gk+agl0Q<0Pkm]:=CG*kpBO5g-2m4k[5We`*9Fl2'-VeR&4W@25eR`4?GE\%a]Y?h\cEJ%]D%.Xr2_SOH4,CZ(Mse8E9X^sn?92.]IIL](;4R)F"+PKFGCZ&!*\M<7sg]RO:Jl]^$H-B6_WF,Aoi;5od0a7+,L\ZBS6F+8>)S^`T\%V17pEa,t&S7`$6G?fO1FHSh#MFoiN_qtbGr<tbD0lQ1+bO(\PaU2&V0NU,+Q$sASJS^aZ-e@2W.6l@,M,./JX`clV)@)Z@GTpOYE%\ZD\ibSu@Q2kP,4HOo2L,6U2q>"iejdq`skZR#3hB&\Au?%Kr>T*/_MO/WU2WLt;m2@N&,I]?":3L,Qb?:OjX7,^:Fi\EV^Bj(q/%7HuINm?3`akiT(1_&2UmhW2iK?Bq\(48@p"Q42)fK_1di&`(?*RC\`*pTW<b9%-s0aa,oh0dL."fZ`.rkSI5Zg8q9?XkYdXMDri>%DF*DW>_Z<QZt,8Q%&UgMr`uZJDBacKGSb1]UG4%5.kBPdiE6A!Ub!pr'I2ufUqGKmYkG7YO@NJ&oSZ%91;]s7b9s_$o43@?LjNL+%V*F-C!R^d^O(DkVTurU@-"`)u(:\&kE'4PaS^,DfNPs>7P7=,e-\L733/JaZTa#ANeY'SG[`Q.!0mf!5D3E5,>UjO-5(ERWX]=p;%j`l[bbUiJ,dO&/b?Lh;ZZWneuDp(]rS]aEKq)c&daigY6\H2(J<GAaCX7!/`;qRkEXA@H@#,LNI]sk$0'R+7smiGFN9'CQX6'A1(%dnHdoVkoD!I[9b5j+UIbV8Z=WERTT^>SUS/G+lGrHniZh'tj\$'bq+22sSORf(g8/5E/o,[_hO[K"b*AoE4@>E<5K_q;sEY.LqD9%P92<&Hc[2n\eu<5@"AR6!6PHN)Ugj$\M%\paMX\"ik>[l@`pU7^^;C-o0`$,NuS7-r4s3f0<._NCMp#%@DSL^RT`u@JBNoS@4<1N%YNFmh@88-<a_dQ[7,j[AV:Hm%=\/7^FNW9bf<X6)gN^ETjBr]p!Is0:0]ikW]?WEu-V:bV6(Ks[j'WN8Dq=*2=h-jal$Z/hU)W,'%Q#a`!7H$G_09lS_@4@Q-0Tj<p^m+:FQ2r:S1)L.;lP:N6FBu"MILFfq>+Rg+.Bd"5-a=U@QZphW&%p%Wm&F;meiQi.",L!&^K^r@%[K]Q?<3!#$<*KGQj,L+@!`WA+W$7k8:^*f+AkhVrI\lDuFq(*63HokG$;bRKi2q'HQ)ao8ec;;n?Y%-Lq@YEW)Sisoj=fDhG9%pc%;[(6f-4Dc`>b0K/c]\'!?HNN!L\[@</Yu,9,dMChJP5gW=h+LUV0lq5nr%NdGq%XQ)#7esj[4%L8*)s_.A-N@C-QtmT?Jk[_jBrM%n<DGF.AYl`ZP>j:8qY[Ll_gh[nn1>GGH[X7)84hjpB,%qTmQ`ek\R1:p\LlDD>W.9rQ\De5B&NF_S(E@$jkNl^OE@.^RMBEp%qX8%jk[<UMD^67h!:lN<sj8%5B3m!9Ka5>X5EY$\^^%JjLi4qh<UuOT8BuRhnI\qWHbJ9qRiZq]mcu"!;Y3ZIN1^Ql.gW0W63r^GCP&&%=75aF(qmRdrGH;Sl?iKJhQQEL5M>oan%@7J\L2;sV>\@*!6e^NhnRd(8!h/1GQ0:/l$NBse?L[`lR)ji/&;+5g&'(^e<Ok+-f?!\%[_ZL=&34B^F2GpT38;UogZ.)\k<Ad6ZV$o:"@tlOhEAmG*k`JNUf+%mB)LeSp%W>EH&LtX3T#Bg:LWh4Q]"S->Lh&UQL=)8EHA2W%.3(`KfCbUT<+'"RLiZhQDgk\NQkrQ`qN5&BZ`;oWN$5fUrT9%+p9W258aeLtMRotVBD#SC9mlcJIe1O/"nhY,fCbV?e^(":Hjat-%CtI]O.LSVgk#f'pT4rqFN,loqk.[u?)a6>he^&hub#M_3f3)gZAQbXR+p4*#gMfnf5Prn(r47@&lLDEelXtU&H2G+Ra6.:9bc]"L%XKLH^Vf3tEN3cE0k.6$5NG4CiFlq3HS$,Zc!]F"m)g2,GAu.(\f8ge7MlM6gb^-a@rT5W(ZZE1<eb,D_#>.u\0C&'Z[V"3oa1#T\%PZEi`=\^KJWd^DuQtUjgeFh;(8p7_nh:D7gDqCFXPKRZG^H'"gioBV_k@o*>5E4i@agurmeb7\.dTKkj73gqpcI9G+IMR7+X1E`i%UBb)Uop[0Cee@R&[X"3^r@B:]WTpDE^Gq.S1Y;;hTDn&DG-e]YlSm^2@kfX>lMAbO0A0BLXkgR;G'lm)fCbW*&Bj2]/lUA?IT8UR%[9r)c?]u7\_teDEP2V[em?!^$g.tY+MWA]^I$dU_`Df*[QFNlR$)T9mee9&;h1eoZIPU`DMTD[>9?8dmM%>#B\E*(kXGuD'+W-mP%4dcT5:OY9(HN*,IB7ihe?IJHYbbjrLCmV^>0(eRe20M(ZPf1[BY>on^bjHQC6LhPSB'lY=FWPb,lX.Cafme!i-c2d$AL!E=D$IIn%^CF.K05&1E.O!V[[TeC&<at&ap"Rp)G49NW^,t,9:S3[8G>_cqU&0TS?f8:0Q5Y8)NXiL(Ej(25a*fu?r\[;t"X]LYH,kEG;r6:@%6Z"jQ0^Nu#^JF/_l/Ube8#DS_G*\/L%T!"ZkZ,ST4FWhh$fYcPCXok.>jL@Wa0k"OaHi%33#e<6B26(rlW<Z%GNreMVkjG97>o:_%BgV0!f@71:^WFUl`<R0JbH>&rI1=l+q=FS6lO-[1pHMNj</NrhHBQ$Q4qO\oqE:mq,/XH;r<Z4GieDr#:S0u*S+h9D_"u1K;/,'=%P&(:*l1&urp!/&B\YMAG3Rn'Jqil7X?>]S1j<XT&XeVWk[rHm&J(siS$LFC^m/pYKX0W4iN4kM@)Shfl8<i1#rO6e'\f[%)RJ"bs%_*HkVhlTnA5D<Diq0eTJA_1;_R\pnjaqoSZHS;d6:BhWcNpON3kF?q!O/98R6@ADONQI,l=-\0j59[_?^4#XgX';L"UM070d(rN)%h7_DC-LJgO;I<%e9bdIAQi%.u1rAI3,&oB'fMk**+_!Nf0hF`ZWH<gSr;to!5N-B47_Z_g2OqS7H:#<IQ#&=3m0l+a_aPNL^ooE<%$?`pc5.:8D;I=Mr9R]lgaSoF[5=F0HqU&O7LH,1K<Vg&!+_bcSZi6p%`&%.pCL<H9YS1IFFr\(j0A_Pj5<MP^g(+KfhiR;C<&f3<%D"+!?9>mHI^nQl+^/I52YP[[mD]YZ5ZMQA&amDPYVk=h++YKr:IiC'3GY&OSQJVDkEYjLJT1?76pZruca'qq^@3*BMMV5u@*JAB:%6L"N+)&ON%Y2ljQ4M&-8C9NK789OCpU#4Mfq@E6&8L@KcOc>7!a]DLV_OX`DmLu^oBD0'U'DMAmm>87#cecZiqsll@=?ZT<G]',1%m;^c/?=1IajmQ3Grd:9t\`DG/W%P7u8aj/B+>h5TD6]VNaT)[-rApO$Vb)$iT>IpQ0!R=h.BeQ>WDdgUI,HALq]sPo2"PW@Hp+CR%K2tINAE(q!lJ:Wnp5)ph(`*"M^<O40rm5oCB\pINA\$mFhiui]F/?An(Z*6KXqY1Q"3jq+$lbZtfjKdsj,i8!V&e"a;+uIs[B>b*%9^%In_=0&el6Z@LFrJ4nA;r%1"np++7g]2Bl0kC\c$jGUE`R*H1Z;B8\UBW<cIAJq'R,%jPAu!t`/R)lg_tm%kH&K6I=Nh<ILYAL%BN#L.<30YkM+K_@R1"HL;Y.9hFTQ4oBgf9VWM&85BA")OT=0*+hs7s]po.A5AN(+elBf3W:?cQSX`'pd:a`@=VI11P0AY42CV;FT%B'LZi?b!<R36!+N+h@BfhildR]R[3M#sh4IiCm.3%;:#8O_:Gpo;,-.WY-\9jqs*gnlY73_D1tP/u[W[LZ@1:d^8mj<Ojg055p*-%R^@Ur-q.//KeEa_,P%2dEI>fgE;=qR;L;\rD]*O0(/+M";]ibRmm%3XX=668SI=K=C_K)D7OQ+&YlcQ%_!F8Q;Cn[A"bAM,?ml&u%NCpM(.su=*S6ZVo%uVD&a/]"&@fcTF+_R<B7'*_0h)OoH7bcoOQCB&L@A&;cPk[/O)]+-\cF.JZlb/F9nWDO2K+>ZDXI.d,icCc=%NY9gOU=6Q?*XLs-*8da6]9i\g&fP\N$D!MSoqG(46h,Mq[3ZC='B$DTl?r4$9n/7liNZkh'$eA[8S&al:VgUt'Q<[B%`)V!/;!lp%(Lt^>1<qraZ]ABqfV,)Df6'aaD5EbDhB<MMWQ`bA%Ws71?*''IqQO_hU8&4oQoS>46Q(,=.0=qNhbl<hDu7rtCVeIH-=<U[#JQfD%X/AJ"X6<29?W-_E(Aa\M[T[/0H/m1>LTmA[@0>3L:eD/oIb.WTQUncOI,=1T<C=+UI7_.j@:(8kl+YpAom+kQLIe6>`6gopP'7Um%r^bZ/6?C_E*ZR,2AU(mdP/!:>8upVu=uYNnCA(;]NsETMl%[RK4B?<AA";OD_`DHr/)g%X-\NPEP7.7#bJA<+Yf?TGa"EAYiU1<s%(Jpg)'QqnKd!4CcFuohoN*WaHTl@_>Y/:ac)E[i.K3HI;r*K2dIQ?X-K*'gqW)_f&2m(b+c=].A::d=]6*2qah6E5IQgL'^hf^qn%@Wh6h@d4\f*h9nJh=R_/D'tqsE`Ftc%pQ<D&03>i&6&Upa>kMH$_):XdVF&>3S7ET]RC(t&ps^MgWS:4C*2?L./jWZUbYRqDdQOa%dC!)FXKbTQ^U\[O*D&MV\jl@@7!-YSJ+C(r$S?_]2.LNU&/O2q8tF]D?#^p/c*G&c&#O/>,cf=^?5^&sVS*+<U$;$QKs>m0,AuT;%1`sn`9:uLuH!st1hh+jWcpN-o*,fK_X:UElD8H2c5W=LK2F25mk4.N8UR.lX.:V,F4NQ903oB@42,J)IiQYOp55&*3%Ws!R@I3/\%<3Tc"We$DFG>Nhm\t5>C'V&Xme*"X0o?Co\W[U2Y33)GU:a))59g'60?rQKMeRg1=CatEb9i%j%*Y<II*&c?e;eu\na4M)b'A!g?%roUAo.<Y\)AOBD?!+no!TsY+D,>F:De-D(PMB0K*`E8gRTFmCEXMkDtZJQfQo(Z<<+2'&?C.)mU5p8m7b!7&k1U3l*e5(F6lRfhi%^#3&XFN$4H0?DW.FN$4H016k&\71u3(L5'W=,cbDU0+SbXr*8@icS?GKe:Z;&#8E9&]OS3`<'IIMZl4p'B*de.^gLAFT,QF+Yu[5%8U4`d-d+EL$Gh[1+`Yk8E[TBhE"=12&$8ZA<>\5@He'p(9Y0??3N0"3(,hU\!k:R@a3*-NcOLhFVB1Oq>2P/`T0=a7`^$+e_caNS%'Z.c)QAtTGI^:%bm?,Q1^I_Ojf54X]CER1Q4uS*aRB!-jg1+FCF*Ftl/R@dY]/uIUj[/`EndN;GRg1%lS,k<QcJZT"J@!O:eVC'(%GbS?6TmbL,/.4cSf>a*nS4!^3m!)Xj[W6jZ7,l!-iA@fr@TI%E5D`G,AZFmfN>:K$^#4?Z0/_Bf0=]$W8.Ekq$d?d,;M3fu6?Han%.qZVD.IBi-TKK!6H%$m"o`BPm("793@MhKPmki..VZ>,%d@#gQ1VC]MYJ;:7c0)=Na6ISk3s_jp-PH$*WBFV(]%8"1a,>M\9nB[L%ao!qbfkl*7;sp@<Dif[2.s_0>_>m.O$7C.)0)63t<Z:mQHF"28h0e^rpi`^f6u!=qUMk9)N?=kE5p0>=Y16f(0OKr%,R\g2cr$Q1%[NLJ^V[kkrdJKD6%b?#?<s_Q@hl(ZCUnLYnV[p>Y$4%%P[19d#7L=:Mr;kJrb/ZgR"_,2D67M(Tl<A"(oq'#9s/r%Z?agq[?XT:)%S__b<rOU5Gp0)U%*/T,!c^'`n;9`\WqE?sRW_9Oi7Jd8%.GNSE(AU]J;HEp'=1;P0d6]5VoT1J0,XBJ@7MkG.0dtW,+R>mTgf>hb%EnRD/r;mYdlm8:U.oitFVX6:QgjXfD\OQ-MeuoF?o58/PURpliJ-)uMpPZ:>Ra&*hX\pQk.K"%:"pHSWGgTd!JZNom_kup")cd5j%/[ASer@P)H^(Y]"Fk5=pr"Y<SZ8P[^9>:@L<Q15>32.3=E<QudRc&*CY+#F8=2G$X['[OhLCn<ZKaruk7?l#*;b`AYBS7'Sklh17%HU[apDT(I.Trgcm%(lFS+<l0b25>;YnN]KM+-Zs]h,\ICQVUqoc>D+\QhiIJX8dEb%U6*T"VD?*gB/^kDN3tq%"$89,gh`k/4k9T%@\CES+3R"2+>2?<3m)GTIpK?t(:af#`*+3*m*_2,D#WM?5Ak<X[_CiW`+G6emX8:P87MPX]FaLgW-fmI-M;u50OCFZqHBs_/\]$K%>L(6VMNX/$UYNi<OUrcfO1>`eEe9UMVM33CCKC&8`2kD]qHPG2BC[Q)K(XV(IsC-=l]9mL.elfa*tqg>oP:t@POlgiY.FUWEq@'g%h-UQLYD<+%<@m)nGQ-7gT]6PY-F!7C1&lJ3j8Dc\@1<k($rO140*,5nVKpScdddH1r+`'R4`7u5hS566b/re^=nO3C2q7%$j^.WL%2mcU7PZnH*`%VPr/#l&$-_CG^1#lNmDRBDu$;R8-_,o`n1HB61@\*2WmUMsZ$WN0*dRN8*s8.=7:O`0o2]LOXi4Uk5'[PC+(aCXi%DKj:l>2F0["@(LdJXfh\gd'J07l*4hh;.f34Rl6'mnX?#7,Eu!>.R2&hm<8Vr5bis'8XeZ2r8>^H^2cT,F'0/D>>AkeM>6rR;1L3%Z>_m_<:Ui$UIO6N4K1OZhf&-Q[kZrgMG=!XQdb>JNKoMoOerGWPRuL@<g;Nn;A#lc_QQQAK36<Q)0nBs5H*Y3pWp76:h[VsfmDj3%?e$DmI?![Lo678*b1Dlk-oIU,Uic*Y]5f\NFfKA?B%h",I/u:e?-_idCmEFecu5]>^4;u]g["Xa6;un>=1Q\Nj"UA+lfELCW+Tse%am6/*N$E<cN(,_W$i\f1B-1QhO1A+lJ<nU;p]TRIclWWs!,EgeQp71!?hqUcY5k`oq\OK9LR4@tPr9&5hmUN*k%2*JDJSd)F+8KG%\F5XYb/m\hgD^#1q3tl>pW<,@GE"<"@bW^QL#"'<Uq<!I<mL*KXCcoq>$U.YH\n&jq[BCTFKY_h:,X"KG+4+A[OeN7!-Ool;r%0d%:,<tT5>Y%S%5j%Y#VAtjbiMY_l7SZ;efD2$BXLR$/c,TmHYp<sQ<n'#??7d%0q7LX7h]A(*(d1^a*K>R$-grQfhOEua]5@Mq`CoL%3L]55@ir8+`d-n5ZJ(G]4-bSrc[9eSH*`ud]t)i>WB6C+jCc@HW/Z"S_cCqD<RT?@o"U6^==k[j:-eQ5[.Q6eOpJ$fD+p*bL^B5=%Vrmo91XVAurnWMsT0H>::/324qs<Bt+H6=LrREpl2m9DD'@$-\[3ma#bT$aL0'ao-#X[p;mi)%=X(<8*H"-q%M6@;W!uV%6eV-/+%id41pLq0`eCrP2g;k]=E'M\\V0DS5SpN#2b;54Djo33h!380Ic#d:XO7(7N-O[sgL_9phYgDt-m@$crm=!K0)4[a:LGp,DrQQELP%W@JOGop1jM\W.6P"&0d,)#"lt$kj;@?L4o9m#Sfiq4ZV.UNGJk<$Be^Hg3L>*gh_Q"@-A>S#P[;L)eR\FRF0f3t$h!>_.A32)lr6%GKAB&+oYDj';XH>KBKIG8cFs`Wh%XZ!fib66hng3El!f+Y-EF'F"97XV?"CJE!Eg1eQ!:<P%Z81J8;o2bSZcToq1o'm:GnfU6.ub%IZpPWm_Sal4^XHAU6[Wa[b5TP??^OFq:o)C0kT#4!jE_qO(VeD-4tGB=4UK&CSPmsBX`mQJ1KWGURAP664mFo_t2FS&nh/PX'9G>%,;6U4D6,W\(an(]ATs^)fMZM/&Xk]:>]Xo/mNaI@>]/,[o?F*UN5bKW-d3H$'P;G$OkX?)!s),B49"GhW8`lP8hGO/FP"F6S,V'h%hb1?7m@^S"Ik?`$]j6,4r/a428e\BBrUF4fbT#$g[%2[]Af2oKejDNQkB;=/@[4?lIi1u2]oKb,'MU*a30Yg3.kr;*`?Y!?m,m-Y%@%FBDUOC?QU@q!3J_=DkE`g%e5YEb1M&"`P(MdrhI1/#6W8kl]pAR'd*L3H%;+OmD[GS?VVW%t7WN0iilHfH<GlAjRHqDHrfBM1e%KkL3\U$NXZq-C(CIe3Q:rfk.0?XSN:Z0a'AOL:qA:5;?U6_p9p.E@pkF&pD/V?_PF+EC=B3rXJ;9<KG1=sH7Zb/^H/LmUFVl(VUo%Ok?6/bIuUJ]t?g<e^s-%2GP"X$(_cHIJ\qh3nMXL(Zu.`D,!,C?*%r'B7"p:S9T[&\[%&>dn\qf<]KV[g5Se./!tR0n#pckag?]o%]%Vuge*[UFGiBO00-3j#ZM,*]rhga,98fX/Zm%N.3b"!$7d34kY`SWUA$!O?2I[qB9prBprAd?)9QJ-AMhfP=<A;,rZ;$IF['4\Q%8E8cOTmh).kq>[.[f.TQDQAg8#L&8(^"N9lAC08Fcso+3roPl*]b(HSWh1=_epT^N5rrKbdD==&bPVXN4+,KuE(D(D0M]NA&3_o2%`hY=7RmQnPQ:?V^&Dt3JjDZ,mQ+pUS7?kR#X@87h/Z$k"h+]=hf]V.3N[G4(Ya\*3VibcS)2Yf[VZa:hmX:1h_P-PieNeg-$Rm#R%s)t(*\6^pP3raN=K<Mh?5F`UGANRiUbJ=.?Cf9EF8aU>mmE2?Rc,RR'lj0SM'Wq`Uh6&eJ^OC"K:PVjE*X:/C'cp2)=kDPd?*uW.%LH5\UOVrg;_*:tU5YC</J8b%rP\(.[MCCM#/Mt0P[6_<1#N9m:Wsuq]3!_5X6QfG'6Qn2f^;/h(]"Deq"B+o\TF#JbcVB<X#d];Z%bkJi:[9j;[.CKWT5*q,6^W/7`!A/Id(NFcq72Z0cQY2*3G'D]J%TmUQMQl`dKu\W-V)8,VjoN\01d&Qm^<D!.@8q@E%Q#A='*bKO%=^jlDK4?u(o,SN:Bmr#5-0]FuZ&75m/A=e:&9SWWhZ<R/pFX=Clq>e&U1,0oX&??1\U$Z"?'Y$T2U9&0mLHMfdLA<loMt,k@7'=\%A053i,1)oD4VI+mSG<Ha*R#&@=!a7B,/I%#7QL56Y!+$B0L(.lQ1c!%Ds@pmfB)oFTs%(:*9`4354is(j>r:<)tb5shMp-@ou4tZ%Nb\IFLe26Gjt#i#YrTK))qUIHJI0Y+A!W%;NnD/F#]5R3gTFruo'%B2^DlMXZa\Q1CFlQj0pg^`]uKF,poo_kftZ4MfN0+:Hs`:;%jG7+.S+R7'I8u`mJN]-thEl\pHQkP"#C7RafQHFj@7TI`9(bTD#@*C&:Lm@)PSi,^-XQf5HMU]_,?Nc3^6XiWII1fLiW%<>C'?00%='\b",8O9/+D\_2FO@$rDq)K>hCE>gY:+fPU,Us/]gjN_'@YR#=p$#+bFYJ5k8^$Q*Ihla*$[?AXQH8)icc#M*=bo#AsCb(n->_r%/)ggiAj0C5PF<i$B[EIUU@+SV11HJN^YN6in2L=%\e)T>,qdlRa69008oK]<8MBh5np+n;(8e,lkk_2dJVR6In:fS%L/hN2![_`3%mLf<uN\]n@7g[`lP$J#>7$$r'guJ:oEN@HN5*W2DGoT6@gQ?u\OoFkSLfVZW'/EArI@hj^4id=K>/)At?/KK!:nArBX[XRGbbs/r%)<'+Dg6rALZd:O8E)X^iX`V@\CSRZ2Q^Oi-Bo3_e_Ur'S_l8QW;,g6k_uM+%HqJ)ZR'NBIGA<#'S$kG(M,-A!,_Mk?au2<[BYuY8%^<$oN)P]Mc[]3F1/rZS`2*T$(lX[Or90Y+LmGlNi@_5I)4bQ<&%7^'RQm\pD^0[*#fU#s<Af#Rq'T^cFI2H`*JRqH>Ue8BcTU%+q%7_Gi\]?uD7^E'SF%A/bA7.,/E7hQksG()Wp]gi)oU82bdcpW-"h]>0(_Kb6P%gQ*8#Bd)6I/6CpYlFddVN-+aBmVW--#i$cMo!MH%<Xeg4h;n06^Enhf&$gR1Yu0I$63g428N=\E[)sFubi=U.TA/07-:0&A8X\2!8g5("=Pm1`%;s.^oZ:p[WTl\`_-b0JA$26W';BQK%XCr>5<L]Fl"Dtn'n52:U;>=g2</E(:;;pR);n6Frh&ZqVeJhWb+i1XkYeHK:QAaur/`=eD-X17T",1GUHH$Om?0%g0KN82+*,gL-%k;A+>@7WckBHZib--p`JN&0M(R&a;LKDB`!9Z5m;0b^?hDsi4:o@DSl1b8)\>k]H=_c`5h:b-t[nBouPBLb_#:.VH4j7d-oZ%gKJ%VLHmS>sMJJ2E&P^;d(mrEp1p+eCn1qmoAfD]R6SB/%aL1mUi%)87r`p8gAmFfP)N9C:_sr_MfJBF0WW9@FPc^[]0)Xpd;K2p5:di%X'm*^@Bg)uNY4re%Y]g+h]!PqER_3%9sAf,-'-JKB[iL_+qpsjoKc0B\hOqleL3(O,6^&YZKi5MNX]sedDjt'8-KQ&cgKd3@:=uY%<X#a3.!GtUYfIAAAo<$ANQAnh''I_CYI,C\UI@01)M9U8O;esg7d$mGq,p4sT-YN9n<eT%Mdo<:jRuFp.l7b6'sdNfSL^D@(Q=&.%A,-A!#W!tF-@#J;pt+f]25]6^X?Fc%`AWsQUr,n6.?SA"*,f7#;YE9g8:`!_WK:!S_WkX<63_7k1H:/!?h&""'oKtq%qWM;U.UC7%SX.C*;(dQF21JJ*,A!M"r<[.n-Oopk!*jLCL+!*@C'SHqH#EW4?8Lmbm)D)DFOqB/Es2NuT)4/Zh)*j4IrlWjHG![Hq<0bjbf2-.%E"A^g)MOJ,iOL`&MD^?Ebb.$HE)XE4<FTuBW:fpBNF!!G3]<SD]CPt"7S*Vc_\Q&:>aL?g/ZiS2^fT`_8L7Dl0UW2D=Y%-M+PAKX%]ME,AeYe)j#INrCUAF:H?8utuk!GekTMhbMe4F3E`pjsFM.WLK.;_D^kMHb5.]WhnB<c[*B/+X.Wc"d`Q2tb3ie880#',TK)r)t_%@.!Fs-@Ub^$t&rO"4^32Cq=;:Jdhi#5VhY<)*Vd[15P%USLlWX;>Y(6!?dUi5`,nZTSeG\H*M[!lQL4U;g_>-]HchsFDus\M70Wh%j/,ZnN#9LLXcTeEO\LLs($m+A^77drBrA5>=!3sHB74TY]XqPafkf5,.\pmq/!.&`+/(R-2N*@//eFo+Tek@S7Za4>,R/HfYmr@b%`^;Vk*;QC2qjl:EE__k+.'#"`r@&bAe:WOHqkT#fb/DZLI8)l5_S+0B2UcPDpZk1E7LZk*lqAb&i_?0f4ZmK/3u=5anqr^>67PWS%.^)rG/&_<Sa2tm)&tP1eAe9>=g8g#"MNtQ#qo)cb`Ca<2U7o5^=-+O\A!C"HKLYd+YVk9+g/IR"f]f[DCalQT\6t8_oTeh5SM\qG%o`(`TS#>h7'pbdLbmWSIW>jHk.aDl\)C)0_X,:DV8lVkgk.n"VgnnQ-pMF&514F_W'C7]aWSiUqf;_1(ECR!d6^u5X)"tMEWY"t3%>DX25.PhEHWUXK$9Il,3.nUM,F46##@3m\XYX7YYfJ0MtnI;9=bD&f\e"/:qCd(:D>[p/=8kk#iIhZoQ"2Yb@>:_M)-,Q#r_LO>2%^d]'7SrF5Rg%q$Y9_/3.bVBH&qJH8e&EY8XEK)[9/VtAX`a"Mds!,`3KSbjLAjR?>\g)B\WtS&nbm;c$+d(`q[72"n6l6KtG2o\-%"8GnEHI]b:@D[O3Par9W9.0^dT78C4?OglS%e74bk9r(cc>eQQmFH;)^`aSp%-2Ba!_t47h@S_eh>2p=C[?>&d$nFh7mpXJm]]1(%h^9#9m]`QH3/\ZYAu_;sAqB[fArc=0aRq*`>1+eL)/3(0Z;G%eUGJR?gA3R%@2s!)'O(%;L6lpummeh&DD8]LGlG7.(F]kS[Y]\U%P!$DEE?,W\!1@;kV]uTce]qQneeD@*pdP'4N1uC?TZJF]e.`ZWo$&4K-(<Hh&VM6L-u!G[nZIEa?CC7]C)mk7hWhI`WdRs<Lb5!M%ogB*Z,%T(@eg=ls3P#aZVf\30@hROj<[enRe2P@^m<9Lb"\5Q8k]uX,71<KLQdJK:MqJRrb@NNa:YlQd0h9f].$HNm3pV^<f8)kX%3SD*Q^?E!A@_6SeI49s>c@tqP_RX*FN-30DF"W)!O(R*Beqd$%pf/Osg-m8-&,AbEGcmABNuAD$k]+#[6:)&u(q0D").W(m*84-+%j:c9%9SC7!kko?6%oEqXoG['$:0-!!$u>7E2;hR\;+#joa@/f..ua0b7h/S*`i*ILVD,aLdLKE#7S1I-r4.1op%3r4d?ti[2p;.4%WMckD'9&7F^RLdWFea;m;;r;:hbc*X,;UfQFg:iO:Q4q7&":p/PPiQ>)*[M5L!a,5Nss,FV/g7Cci?o#b?4[Q'NMfmqXDOG_Pm&4%6IKNlL%VA/N"<LJ4NR&tgiWucOmOS57@.=o]09m9p1sq2XqE?1`<7U'eNeuu:n0u1fS1(RT_JRH+GIQmg:;2+.4.;7eP5N;;Mm[c%5U#`.'2gMZh\oC%.9P&KgHnh$0<,X0$RetPnf1P$J:dHW<WFSGgO+RK+U-FqG@H.<=tmEkDj?!\\8sq#MeS7s@S)8QZ%:Jm>73ua%?sfaG6MPFKDhaM/n_Z*Oo<m7Qj>I+5p];ss'GI,fr*q4Pgi;19M@!*mFGK%@@KI8/HhA@V9RoIT(Fr&0\m>S=9RoHEVCW0*Q/DBm%$=u8e!@aZhb^^Brr3ep*.kK(fbUYNT_@f5#RO;cXKdGrfEe#M+lgVpr9i==<r4Ad.alun?6*!ShO-M'E0KEb+0q<-S"j+#__EFE>%K&7D7H?Or%E*%@D-3c$s.hF8JrSfDt=CI&`M0jt($`lK4TnsMM^`'gIlARko'.YW]/0q[O,jZ_B"\rSSS0].a4(P>kpX05eHalot%Yo:nNcRSC^'Ap-;cSJUjR-f6t5s`[^apC[O8U1&&ahmdW8'_`/@diEFN0=n%U=XnbQZnWh&*Yk$]7/c0.=He*(hD1ZgL"2mO(0>5%s4$#bC2>f=Xk[D$96CMFn"l$jH+5F/*-?sK]0aHNQ$".b6J1G&K34Y!Y]/Wd1GNVVG=t]9=U%[JibjV'>)Bn_&U,aR/0/rX`5"l+%Mn>7'0sR8e,t?e$N+?'2`tC:4TWR6V(bNibOp.u4BpZhB]Jmc@%2_`MM6MEBqdQe_8_]M.k0#0+5M6,fA\O,?SsB)Z&XQB&D7#fD%VK)F%Rp%.]hl&%RVH[Q`.\J`n$m0hRpL"l!nm_:&fhq>c@%#jN*%)=*/ejEpq79!fqLX<`'?8:f5,iH0Vq=`DWX9rr3(FA44["Hp%kM_1selW#BV^!`\Q_Y18Ik:6_(k.oNAE(5\%uZu0<fK)Xq@YAjTBdZ4g^\AD2:.aGU6R(Hhsa^KbHlUXnAd2NVasLjl]6bC7n?[9%jX>^^oF^VO`\$!@nVdsS6cs%3DMp[V*Fbk;+f7&TB861:(6U+sn0#[D+Y!\gchirV/>3=E:5/JW]RP9^@k'L]39gs5n^lZFlZ7"R%[c')i\[J9;"U6QoZ!'[(G73)l:*sJjS#,[HrQ%HZO31rUOPA[h9+-+imZfGb'gKqE?S*gfhW,AA,gi\)^)c^Q%I6rX\/;_--*/4m%aaB'$$oZ&Q0(1jA$L`umFNCq4Z$MjU&V)!Q_.D!H,`h3R*0Bu@5i*`rZ3X0V0J;_YdVM\`-poT%[`S+qh*YcQ<tZEi[@R\q<Rt<J%%LJS+/oKc?>NA16r/lZ[?$6IGoe6T6GgJq;<=7hBI)eeFDbJV(r?t'2pUiP'iI"cFFZ6Poq(R@$+6nd?)Au<^eDr2)4Hrc4:a;nG%Lu#'=:%>SU:mL*D`HuQd-o&5HH<YR0Xq$_@beD-j1_t^F:`4-/o(tQRn$%Z=r5%Mr#,U"A<r.nKYV#3W)8!.&#"RQ>J=`r$]R4H]%BF9gQE_2:WIK^E\rAijp'SH3i(Ab>]_:O'2$uS;l8?I$'1P0"rQf*^95P0f2E)Z(+Uq.r6-#7`j_o)&m?W)ak7eYtK%/b:tpfO,4%.Fn-$IOq6t(+t)'=nl1S`4h2EZ`MVR+*>tJ1ctZso?Eq_Z@%Dm[JM7]h4^pQGV4UdEmQ7hl,T>H3,DeF;S?&Ni,$ptlU=;!^&ttF%YcZJsA4.tS5M[U+O#r,pPWb\lkt9YA%XFOG"4Z\8WB^i>no!qf39-67#dT6A5RUMXL%Ql!B5W(W&)?bFJ#G.`[%$25o)p=4X_uEL%o]df:++E<J1Su\F,e&*Q%$qOLl.l1P?bf]s9C"Pn2o?qt?M"^fo!jJ1RtPECOhX%$?7V2%Kc"`R7Q<FP:^bM2-\O5CeV4q@r=V#[%&4>(MRjGM3YP13g"Q@@^gEOf^$Y^qq(IY\\3s4fT\:;U8q=`:WQEnMJ/u)lukNK^9Pn>+(FQKi:)L_F;_/RIi=KpO7jW/hd>KR7l%)dMQE*i!^W`:mDZ\be%oZV_;D&JiVD4u?$?T=P"_Vl*'$H7"aedJuK01(H2(bOsW:5W5["p6]dj=[l([U/KBh_bhaLD%YkS/R]X@%8q9k1#2n!:)foudL^Z'cg;?3`.J(%)6A?IH(fo<4:!FLAk<sL<'(+Qf>g!&-r,CoXr&jmr))eLA79r?%[J>Hngk\g>f."6:b=7H1%k3)QXm+]bVpBQ0egU!ZbSj!c%<8gYokuM2KO5f[%NERCR>TT*rd0Q_Sr#"CkDL"'/67u$/$VtEKW7upi]aRM6l+'8'F-Z6h0)IE3%'=,ef[Js)G?P%)R2.<#iPOPEcalde/113=@6^Z!ZM"GQmNK1r#@5^44NFoHNDHdBJ2F[Qb%3f"A+u0hh.3GAEl^B:&Kd&FW^b3Ff%moD_8roV1m=9*oN[+jY[2psGioj*Q.0K#(F96M-R8Mg/^X4R/L4Wr^XWh:f@78/mBm>u)pi)SdWV?@bGd?12Z78!VhkCSZ$Ot?g)%;#GX!<h#&V^UF'fdbf+qkY2QH;*@11P28Eg_eUjZkd>5'[r7<S*c_@uo?P6A\=lS195t%>=!'*3RCRK/ZR<0h#J0k$/sLPi4_RW'%_'eA/LGp3B#sB,>*uYha!HkSem<%P8R^b6M/."JuGZ5&OLR%4ZBg`aC`8K\^jG_Gka"1F,$Y;irB2M[O&>]qM+#@0#3_'27<j&21%[jM_e;&I"?1WGM17YX2;l"MnH#%X*G>tMQtb<;$t6eP%Q;,fq:87.(Y%Ocj?f39Le'diIR!p\h1JKgLV\R"k_(=DN<,\)d6L#Aip%WS=g[^T05GbB>3-I@Y/Ff!]q>5dF=jeZ0_dW(/<W2Tk"RS_##+5'p.:=+fdcIk6Um@4&O8aZejPnmt_4W3'uAq3&=@58\`b\eL,t%Jrq^Z_XWW%e7t%S^gmP?XBQJ)^qP=.!gDl-RTN;j4W^7X&XbP72lH7Wgo'2PD+(q8.Lpdg0ptMcqm1eSobU_F7KI(L1(=QJ:H7p<%co<=P""WP-TIN+][B2<jZemWK/6q9N9_qJ_#-.$V%))N6<ACI)'0?jgPBdcEbljI-i3?a4)PiNM6[QAV'hE$MFb/D;q@l=4p(*7=%AkA)i!E"U,2d7DIrLVjqXd/#2bKnA]laWCl!Ct;h?TLei4re:nC+THTV5Wu6,T^LV@?7^b/EJPC`e+_,%&A>1B8T>!Ds>ad@dL7g%HlFqtKZWZ2&C#K*4PjkJ4<Ze=q"JcHaD[nTYas.KNu%N1?O::5?=3YCe%MJc>Te$\&8(H?IaS\_qf^#'_DM+\VV5#H35c[;28XNW%I75\P\DMRr`fCc:^o-p6gs-5W,U@9p._>(C5ECa6D.47s,5uB`TVp.:d:BS!1'fTo"l#r.GtA?@TiHGA!%^/4Oj;;G%Bm725tK8,%Qn'F62@,lK2a<AOs.&PCW+H2.B3Ci%Xgg=68nrc/a26.Rd>.H$D_kTEd0G*'Y(Rmtm`neV=FM(p]23MSeL[[1WhT$gHfOJ&m'URt%Eia*1KpGT\#[/!ng]aH-<[!E5`:UQJgr_)L#\14L@A";F?dCphfJH'bgh`ZHd\5fop6WOOL@#akD`kCI:t9\QKkLeTK$%SCUZjfc%1cg\/+acf$iQS1bW;nfqRSEq6(f=5j=Rp_OTN4*;3\:+PO-=uBO_0aT6@PTTAH3X*s',sp`nCir-o8Oe(,_3GKi."cL+>G_jf$Ak%V`;O%Q)Db"65[Jg&IO.9N'+25MsCu-JaWnk@sB41-5b^38AH$D6mZeqn_m[(J:#C70euF(BQPK'qYaYlER6W*SlfiQ19)![;bh"u%0ld%5:dQ6]B%_R`[2<l+pb?kal+;rQoC<k%X?#L[_X:!7][r(-XsLlKY3$lORj*Gs:0JM'*+eq@r3LsEXJ`D2"h0_&mleV9XP+iW%,/R1[pN[!r5t_>JE5/4E:*naS=g"_&'g!HP:pq?`?)@U]k.;hu"5Le;ACo29#*)W\MA/VE$Ooa$+Ka'.#O#/_UAMWX(mu10h8hLC%C9gNg1rBrpO(5\sGn]f1h\!H2d%Ps>+T?fU2)5pE`>Fd:*@BRUG?2h)]q=*nS!b63;OFcG">0A:a+ubbaN[^>CZ$Zo$VdnZJ7i4J%W)Yq!f/'Wsmb65MmE8rN(Z2slS7b;GAu1dG_6I,Tq_nb'X[7?QcW-.G:$H,OMVR7aA?U)0;cqb<0"-r4>*E<"MhBPBo+/mPP2#J0%\2S-ErZT+ceB?ltGc`F)(,_!bK\)ZECWRLd5.oG\>`4cn$GpRQ_6k[?XWY:-KHR?K2G</co*=.$[Wu\ke1;nMcpJl/W=W.%jig(5%>:X!;M,\JfD>aifiS(JapP]>&+3n9I@8c&\:T]^43:.Da!L^'Hb*HYlGt)C=FB2J5.XIj5R0IY1T0DkqA@<UaQeM0uI-e,Z"Se'(%*a80_R)X31;fTdH_/j$)IL1iDRNO&!N@A+h`-\/`%@UaKo_7'#[`9=lYnPkZE.qLWE0-_"c$N_*Y':pL3!35%7h65;EQSK`UPb3(%^dDA[4*fFT`>$_5(g#Y`RCFFFI_TZ!p0tH;Z\OWO!YjO,+N8FA7Wp?m.E=PhJeSP?&,!uK(`Yc1P!"Xl7Y;Bf`8&_F'2=Qt88^=Q%MNZr"^'G)p,c91?821,PZ&gZ$P4/ZR9Rrl4/%pZO:OM.0+iUlcSG06=OCGWk!`I<U>D3cl_E:@Lqj7O914S'7W+!umaa?=;0<dKB%d5SRQL%??eFAu+<Z5[&J#Ei,t!^@[fKP"b1O!J`W<$?R!%+u*d,oGRlZ3@Bb'J*1m@V0&R(/uu^HW@SMUP^^T\.W!PY3;gYC.YJA%'r,DP<Oecu$KbEYE+NpgNUq1#Laj<MT3GR2pp?^pRH'Jg>e0X"Ke$m*Ja\6,IX8A:f=u1FJFF7SFAsD\"=q>(]i!&.@i&4VpUDNP%_un[N5W%*1]X"7]XX'$[.8!chX(AAOL#n1JiJO$WDNP"]$`jb<IP=uOgE4+g_cc5b4FZWS-^X4]e\R2_On`sT9Z%h&(OhBG41CiL%%l7Ck1j^p/Q(bM,,7Nbm%/4p-6l86k]/7B`^6V'PdFV@:T]<d5JhS%`>.4kljN06QgBP0$9XLcQZ.1<tZrgk)0q2pb[L+DUB8_l*%@fHA$5e^dY>sUi;i"\9>6]]9!N/`rVSlZA&!"[4\@09FpA`uVF$U$4,bk[&N-TVg(&e"U+d?e;PP?*U75(-Ic`a,+W0ZcH*mF=bj%fMj>C+ol6Q(%.dSQa-6V+5Z.kND=G%LM?'Z]$mXI$MuH`_aG@,h7:LVh!hD8I\W49\BNp[A1Ki*AI`@7XlR4_-8MM@hF4CPbE8q%%!bs2PFMcY8[FOb*.<To@APpG+G,&VN$],cT'8s1;,1/0"rG@i9hJ&fR27).Fm3'%=9feW0/[ofN*Iea)PpRm^@+P6M%33?C?B\'B%OdX7[J+NIAK$="gDdAi"$'d5?KV9`\KY]Nk&:M'Sh25_]a.7jOABnTf7VmJK(1/f?BQfc._MfZ'An<XuH_8QM+tuq:GmuR2?d'P7%,](9?1`*M+1Poh5.<O5=2@a-7D!>47bV2/:.tef4nu+rr$XkC+>JSIQ&jR:pa7Xn9/RhZ$j_)Af@3Q+6,GNGl!hs&4D$+C/Cr!*'%)&fL6U@_mD8SedV8R.G0G&cJ.<JFWoXY#BH6%2IJFGlbIOiK%H*>^H\96.p2J`0SIq6;MP<WCQ0AT2k1a>uV&ph:K@1*gVb7Vn")%A$mM4>G&gsQKCUbl9)Mo\1?*N9"=e%';c%QpKi<ZLT?;C81ZHZOu-3/7Eqf"L6lXH-@eq`$Y!1u7<jU&BL_d=(^eC*0H`C(KdRXV%e(*NWbVH'\fIJ`OidMKR:R3G,Atr[o?H(-*M)&Sk;/<`LUG'_hM)$#=K7!\EiPYkED5?umS"8/JB&f-2AQ=Img#m\QMl^)MG:6UZ%&Id?O)f#Zrb7:k$b3#$$RV&:5=/X8Q*&1GBo/WgL(3XDS1$hN_?Z9Tt5Bk=!5no0Y)fiKSqU_O%Qk:ABI<\?V*tpnQ$/NjN<>bV>%drjb@\Xn1D!Qrg$6cL$W(1c-X4LQ/CI^07l@>Z_Ys)p!9==X8VV^9G$Sn^i0n^-i1'#0Zs`(t)=&Zu-tkZ<m#0([u'-!;%)G,?Q;%.--<foodG2Mp@"X'(AW56NiV3e`$0)Ae[N>@l@5]%MI-Rfp'B;jG"dbG2B6V*I)!!6oGD+AJ%<L,nT$'%Mj7i'*[Ee[i2^1^XcW6%3=jbJi2oIsE+r\-A8N2kdU^Vh9BuHaMKJ)@hBJ68plaDnWjO<g2B:7[Z$2OpC-Ci/OAk5ti+?u_;*@%5[_@jmrnY(%'XmeKZ5"Eg%/&^S%`7`)>D:#0\>f90+-0_mMe[70@&=MESX)<*.Pg@o6H[DZunb0JhYg?>jNfS?5ae)*KR[#t0`p\&^:]<h4Y@"^K#.:=Ie:;m`%gU3mq4+uqt#B5FT&)^CX$LZa(KhpfgA>aVA!'fOkeW.;kJ\MqSXeTodljGY!Dq6OERGSt`59VI%P0[d%D8,t:Rk#qQP2>G4"D36P%_BW@QgE.D?VjH?Z[BTAC85pt#]&a:CcCPfU9$F>HKQip%CodP,c=%$D93tq!e4g3I[Tc9N/1[e72ocA,CuR8GPOE"7<<DkXL`d_$%I_H*3?Jb''!*Voc+dA54l]&Wb6<Ls;^s`1!@XbZaileRBk[M$ua*A;t7js`Z4$8Q1N+ko74?B[eBI#&=?>'0ZK:'$#e2M*ah'))(%cU=ZUS2n[)N3"un6D9T5rb0&>k%5MpB]a3@?u@<&H[2l^S89_KAhM@oOXu"6!+-u*,l@m-h<PttonC+dLo$H7D,s5tO"9_s2j0kP%1pfi_9Z&XUEU+=l\l$UT<Rt`gd"3_PYkKa7*%9nU_Nb>^e&G1=GhiC0`.6\VYDRamJ%GEF*`b:7pu@e;/puC._nWVC-huF>ZkE>^%D;j<nmq^I7*IPdO]b2sOUX(8E\B-%W.k!),bX-#$\fGf*TqDKNbtE'Yp!n`G0fe:dTfIs<h:CbPH?OfI$[;MRF'tB>2g@],'R60O%#f06C?U"80M=V_t-=S2>0e]OhbcgQp6)LlGY.8"Y!gII[1.GphGDsb.e<s9rAh=3!CD$abL$[uN1'Kfp=L6VHm$+.hR>dSO*.Dm3%8YKuo1,3\qnLu#)B;uMk?6g9m;D8-5+6tDD:/L?UPR1!>6J&tZ^K>1+a=uD;\cJ'?N5Q,h[#u!$&[$b&-olka]&:)SaCVR4'ZT)4%W>ST!O'ICO+^,WE449eU3`DV(\9#2,<l^bJ32P(=p7Me+$CIDiJq:H`=]?aS)b20-.s^_ZeA`c-gI.&#V]smOZdUTMg\1*_DHQC$%YXLY!0f&u%hi87s]uh0%?Bl*1`;l,6:aub3Tc7FT<^B'LdYoN;Lr#:a,,S+md;nI6)nSDH7VTP;P\a**7HQiAk^%*1-BGqa,Xh^d%IS;8'.n8D"XEK^L[4+YB+A*.W%5ig9$<2`\FnD#*7p9'm;<0+7#U_9\dM#EkNc&'QOf[O\SaJ0Xrgfg`@MC#c"dc.oiSV8A?Anq?%=YE9RQrV@,5Cj.,QH@YHZ&p-:h"\NP3-mj,\SbjZop0'jdU7eAdm5..@G.3elpCkH7Jp2O94`gk-FH:T83X>\<as3@h_e$_,hY-`%R^%62%;-H'RMEG:[=G?`+DeOs@N)92%.1,0K6]t@P*.881>d!__J!Z/\i..9+5J$3\$Nn6*.NlA[_9BWe$.k.qa+d@Ds9$j_OaJu%H<=i`9eJ*!*0n$"K]=W2NTah!lOF)E8gUGf86F=hh^^bnm_D7r,1iOgKa?Z\cnjTXSa8_!lJFZOTd(lFY#^#pS:[0k:pIPuVTVL<%0IosbH=+)b.e1kE,H"%(I5.FXn:T;4Fbc5\O_Plc*j!O0F1no/J\/\]f+]6?b'V#KPsT\oWb*U8NGWBW#-gc\[tj<kY6f+<+Ze('%0h^E%U>ZS6<f?N\nimkcG4q&kiip!Ya)Ge--E*)%r?eMM$*eECKe#Hd8W2h%"qa:MmO+8qHUBNuIJAC/*05o%]WMX=f%l_V[oF;f%VaZk)oS)bZpY='bgCff9ICkYG2H,i(L\/eVejni8<FqcA[YHdG3Bm/T_7i"#,[j!Q-)oL)L2!>Sop5j3:=fDQRqttN*Ehn(U<f3O%X$_pQH*J,IcR;(/#3I)=q]qjk%iK>D:gq?4f<m@8`J%?Jf:&&*TQeZ)bN,I0ZS,]FVM-=l\d]&:%_)=K1Q*(UWMh(aKJLM->"msG%k*A>N$dQ_D$K2p/>eS)RJ^5ZT)<KfK"lS)A*Kq[P4RS"fbe\g$N&J#""b+3pGYaf5\@;me%`ES_n;dJ^@UBS*m2Wc_f.,Z+A>&6\%7gsKFF"FlnE,6Sf?"kXXS\_'^M]6DF5!'Q\QsK47=g?YRn'tW+4"DPR_0,j(iHNU\2_e74kj)!M>^=>%B8&Q6chZq/Col-Qj<^Fh%'q:c2"R[G*SX"o['KrrGT,j)T$W_(eLbR]VfibT5OfSRZq<[J+R-dcWNX?rRa[u,TnkNa;f/W2gQ9qg-hZ"9/E,etO#PV_6DqTYX%(.'_)ZEXu>1lIP*d196`"=#:(csBNa"1N2g];6&Y'gb.nM5sM[NX?rV^:5SFi2@1g@F90q$Gf[IJ_T0UqLY[X69#G14YC/3krGRO%cJe8+2Ps(i6u!`4Kb-cXOdf5SNoTt@PsTEm7p]2-RI;_H_)Y1^+ZM6V',egDW6VjVm5;NTK)$a9"YH:36C>'4JL[o-$OnR0As]p>%2s_8G0ZWn>/qr5^&-B+A\LE6j./q6L[M6TK64!SWNi<QknQ;?==<"S%^D$`*)d!G56RiBpp6XqY69nlC<Ro+=I56+;",E]a<m7AK%\-28B+bV:^>DJ/=p-^!0^m=IGQUGbsk[S/OF&33P?8Sq&'Z`+$W\!kN$.B&5ot<)`&-CS]='?`qHm1YT;J3`U!hNl(8g2h;KV4-a%BH&mp6GV'LZD\Ih4r\;]"HgHY5?=im+])2K(SqZ_"T^)'fueD9^"pdmbqsXj1NlQJAe7XB'V*#%/#4X;iGF(Ak(RD<+!u@1F=!]M%-tm<Jhn':qqpF1u"^bYD$-^>sYl7KZ2ZTA;<!?dNcb7TJA\l?k!%,+kfDl_/$-_I*WEUaH]g34Eh4:`NBlt(/Q^H5>B9XqNKlP,B%b:.^r?;3Ts<Tn5F#-oBF%^=2(PFb,&&hSl&P'lW]Djt0Vd>U,"Q=9>7%E!>q_mZ-bJT>moK%ajCXIb^s,Xr<FA/8o3rF#grk1r0O%TTd,[fZ6e]rc9VIHnG;[;WQoh&^V'lU"1:*3DWQj1*8djeUCRc5XSo^>!X:i09:9oQ3NM?0S2EEDLfY`!=d3_UB-4>J;0oMrtuNi%>4Qr?b6t]u&k'8k=%GSD;?O#+d7p?-oR.SY)Jh6'j'hX8fV`8BQ>g<?%b$:F7!&u0SN#&q4s_&qf40M14ER(uRGkYjYR'F8KMCbn%M']dG=L,Q]a$/flY1G:<L!a17Q^ED^\"7s15B^]%2pKZdZ;pYD7Xc"Cm4j*00YXs;csC+lYaqOP5=6CM`tmcM8!sk3apYEX4Z+`T%Q!p!'d@SJffH"SrX8p56(gSaaH]b5`(Kd3&*RT*fS==k8aH7$GWrDDGdOrB68eEcpM):CAV*PIuRcC5]^7(@pA<-B]$uL;7)g,LH%3SJeSI&qhQ^_>t^O>4]7BQNW>:iThf'<VV9o=n;DPr-(SqL!+dO^`:krhY3'GhF[!gMB[''m9$E"]Eb+k&4I;r!r<f>S5r>Ua!gU%bn<hgiJPA;I"<S`AS5h3oKhLVpD-Y#J>/PeVE"%@+iOR4gA0_/Us)Rj6CX,G8287s$V;G!HXDC>eW'#%;F$2!(]d&i.jJ1B,cIBR%FD]s0)i4QPR8:pL821/QXiRpjUo5`q_5\f$($4jk@KtBJ7k)09p,>8pbI2@l/*`cCg9<-V2)O\1U0=@c.bB>Be9JPqU5.1>7U:4^%P7bDZOs*`i1t*-L9+sG?oMucH%[+<=l_I2J&#mk4I0hfq%u=1<FVq+<S>=;=c:D2Z6rHHo7Ma?M)<ES3,ZW3X>Ij11"<6350#=D+%X>(bS^u$'(Eq="M_4Hs#1QbXN9]4cm?o*Q0&XTknc!e'a>A<Oa8kH$"+t\PFlJrsB&;c1>%_d'b6+p/H&egcT[DcOI\]<]e-j!B'%>U_+hAcX2UgBT,T<n5QC7Qcg[``h=_#u7(#KCtW+DN50l)kWXWs,[]@Q2P5r)lu4"M(^R?JtgspC0/U2:Stff?5R.rS2&=%4D)kU%h1!5]Nk]?H>Z%tNoh7/<3Hk)JYb1\+=AZZ8T+HA?*"0noqoR4oqah40^@J]D:A@8Pk9q(upt4+980J_YA(5VC.a2G4OoN$d6W8q/%+uK#NC3l9)5KaQNX[cu,;#W$dGBW=#rsZpg;0P.b\BB:PcZ'b(MW6<I`GqfJO9N1Q.04^_*r+X7ETbo%i`feV@A7oeXt%:Nqah2p%4qgrq2SCR)p(L-h,;m",^E*<"A$[s;TSQf8jJls(O@.`X/#:m2Nk[_*CtZ%bOE5n?\:U3%Q?/jE7TRDgV$E]UZZ8LI;q;ftf!-Xk%H)L:*'Z=O]/$+DJ8rn:.EtW?1]j^3-UDsL'7onX+n8<=&g\jo47h.kkI[uZu&M6QD,d*/TMWc&r3EG"":D)k@bmJ)X5'8n\4uJ[m%NZSt&iRMV?'MGVBJRW.+1iQ=^69'Eo"h^m;S9%OFR#O7P+m4=s:Sc#,I1.puZDkYfdZ(WrB4<LR<q\+EMsQ+oo_e=:b)G0)bKuLL%/=JsO.X9+1M3Xd#B$h=2AQUbmdA.@'dGfDl_N(S?N-ed3RYb(3-q[o;/P'E*))XlO26>.Y$e>84f<g/.kM=Xr=$pS-`5\MW)WB_G%TL[:@L0>;;ShP@N5a&pF(Zb'+3=TZt,aP^eZKr1O0XZ*T,fB$t@k)l%!ff/NM9RO.`=P\Q`R:D>4a(i3,ab9/#6_-;\e;)#A\Vec%HW"8raCqELGY\J\WLG/:dOIi(FbEnoJeU(Q5HROD,3fcGBX.u.i3e/)-;hrVG,6=DU2Dm%5mI9V;iksl-/$>-/,e*J!M>C\?%mku%e0E2t>H*4m<amBNPqs.#FL+BW68S3)?Ad8RZ&<?o@u@1n=_m?"OCn(Uc7?GI]CApR!IUp]QLTG>:Tr9-s6FG0r6+I]r4gPf'@kMn%gt6%+)LKg:1WE$Os4t'e4L)dTKUE+nX@t=#k*s!pmY\VT0N2Y&O]"^eD+gm,=i8IRP"V@]#08Yt)]`*GBeIX)!fd=d>f)F4Tt4^#%Tc$5CU0F/*$u<IW*R(H,AhIf'Ldou6bRjfgI;59T0GBpomNq[oZ_L_;dj7`D^l3u$A-FZ^7,"g]Ak8H?ACWAd9GDgC]2cZU@;U$%%5Na"ufLi55D-@7iO@U*F6$/,pAr7gB,r"?ebR1'h0U)#2B%3idhS@>dr[hJbE=cEm`5(J>Bj)]ja8sL5qTFb)#5M[Yic71_RP6,:%TJio?Bi6.d<t$l`*-_B9^]nA:hIpF\n`TfIA*Nc/YS?BtlkjMMT[%P2^[9TmF&@]K`$]mC\r4L%n:jto"!_D2C6noqeg96f3Jh>O%b%U3d#<83L:e+r1Eu_TGoQGRY"5nhgWZ-;7b:5U$U?:JCZ4hX[I\Mbe`,]baa+gJuBA`&kd]sP(8KQa^\8I_*(uF^od!hH.CbCCd%M(miPr-8Xo6DW10j'`A)>Zh=qhDLO<CIVO2>"qSXLoi6T@kl#:d0&#J@tuj^!'d9[BKi=S<`>6gXL0($GVs9K9/[U'4D>PKS#fd.%5I")^Un.?6SlT?nQb0XPQT2#%mZ1ek1f#X]<HE2G_r<%K$\$t]^ca("[IK8r=RF1M-(7OkDE#^8ThCtOWi%])msBiZkoACjSp0+J%XYFMsXr@hkZf16%$$cOI`TG]M=gFdEJ!/8E7dBR:q_iGaVXHR,S(?rJ$?8f]UUZChDI.VGfOqna;%u;mM'C"]1d$X>i;LK5TskH*%`AEu!@>S(Za;cfiA(NW*ko-\BH>P4Wja#HKSWV.E#/@BC&Z9Le2m0GInaG`tM'Z-FDJlk`J]/P6E=Al("H<BjpM.cg&-aklOV9Hl%U>j6mTc\p*W\F/i<!_;U'KMT]PpjiN>gdJ[(n?E;Au6f:clJ\A&2hDXpG&IQ^CS3Nd@QJO5%fna2&dKC4k31rQC`^FXloN7iD.5a%Nl5p@f?Zlo]Q8qWTD]Z4"%[`0)A7+6!iOi07[q0'\fuuQ8IR</,"2c.:k`blFAk^:K.ufc=,4$L&)-#4p-#PpMk!Y7kWK1!J%a(`%G'7H/>l1I&3+^iG\b7[ENV5Pq:F&sS5Db@GXQ=2jTmRDgY`uu:_3'mKfOu>@VT<p,7-,]'LqO;A$R('SWBd6o'p;Q0IYO/k.gAe1%g-eR`[.'?%L(Z`oaG`00>9s&h\hX=]8\/N3e'-<KgHrJmRA:Lhj\"Y"=7_S3KOG?s%)1B-O-'W+Kt(/`RZsXo2e!':N'TEKRmS^%%J9_Fc^73C-@#AKFp;31/<U!=YL;dcEF'kspAO4%fZ#CEboa=ATOL*VBQte,=_N\=-GfX%2^MJ!p)=G3)_*n3<=m^H^^X&q^n1YL0%6IT<0_tkB"f\0UV$O%@#j\I;./C!Z:MToLBX^D;"aui2F*T\B4?0B@"Pq1opfu>f6Fc6h]_eQ4720pE3#eu3Z_?YE^QkD-7kVs*2%1Fqd=eT7/TA^FG[Mo&RIVl#mY=lGjg?.c0%[7n7a/\>'YhX_!/e&dm)1"E<'c)*A)),GQ'L1a,17^)$UlBp"5gM(O]N$mEipNF3+%-WTku93,kp8+AMtRhL-'O!<@r@`?o=^XCmQIgiqJpK*E$[>ZK0$mFbhd\t4VUdT^#MC;aE:J)hm>]C>>&Z$Y=R\Zu[TD@_rd_Q+&%dJXShk>BM)1ClQHWK.9B.\ORiqt+R'4uYPk:/6Zp$PhXMm%bM<;28K_<8+F2eaZM/82u,.=&o$<N%U&?iX0&QDr\eE/#D*1K10$R%1Q&i\'b+/N-*Og8ZKec8$RphCZMDY>JhS\b;()%!.AVe!@-kGgAVdou92qkjiX/T7IdMlg1GZ]L.;Q[sOJ8PMK+']oChQ_hIqO1?%VmL&:3*&`%9[&K$<4#9@AY[_VoANS$:6Rj^<+@Bt#nY&]<BY]6r`KJSlF]pZO^.@O?;X??a3pWg[)se]aj0Kt2269-_U5pal!m[p%Ih/AM`jE^V6s$a-VW`)!n'sm2Y,tSg1S`8NVKW3NB$m[oSI"=VkJCb.>*da`+HMpWcr#D&'82t)CF@i02)BoYj1Lb$,N`[!KanG\%,MXSWEC[BJVDr[/`4Vs)Zgtf`07RDoekA?*@12UuA<'JdGXF_49gW3*-:V7F9%Yf\\>&0O>DOXUeG"*'!0_qB,R@M(3b6q?@`A43%)lt2]kIt\=oTV5OB5RT*<<$9r2$Bsi:\0<#B+<h>K8@T=M^?+QCC%'B@ce,&bSjrd>[#&a66a%=m(Yl^;_5Fh%DdDO-Ir`5aU01d%$MAi4_=sBUA1C'2jlGoi22#R_7,0&sBT8>L5pDnj>DH!nmr:5Z:!n&^QH=p/?'WbgUKJp:1`^$<!Eh;i]/q3o/<Et2(E$T`kJbYQ%A?G)IUZ_Eril`lIk?o2)$"_G+QBCK<fc_-M3>N<IlmKm*ke&SZ;0Er?j-&c,L$Hshp(NTr8P:qQW[\5IcEa&R6+\CC:QK[I!CuF8%94\>_fkEpYF8LgViO,5=45YKB4LVPf&H,$0o=1p8^B)5u\Vl4$U4t08?'`CV'"*[PJ0L[#@N0S,VsPjoGSLoAZGscE#?GsMQcBj>%#DVQa$<I`;WCdhAlmJn6iZY+b!6#bY%k5u8[d;^DN#Y7:nsCs)a_NZ)",\NGC,)O"h6ZGq&rb;sQ5FErG>*NBQ,C3HPH:$le1maM%[%D$'pXtW`hgTV9Bl-(Cq3WtV01If>a[F-B/1<&rp<B7hJ`9C_Y=]c#-UC#n<%*b(+W2g-M4&X0Gt'S?q[&7;nZo0JQ0C^.np"28%_@#b%<+0s8\kfCS^4=%;E\o]4QrdhfC>?=geGYVBf4r1V/l]Fhgq?*U$*/"[Qktga8m"N!/nPB/COTi18t^mVgStle2'kL/o=1fR%L*0/a#u>EBg$uoC.+tS?`Um3qMD:[SY;!ACklbYV?H#&Z=3H<J7,`_UfhIu<gm__0nT.t0,5U>hc*lo9igrS_;_7K$&50mH/+1Xu%8oV`,DA2UQ9[hlS3BuIfI<4PuZ'%To?d_gepUId,p(58<U#;Wa`!rLrNP7q#nl<Yd<OCU(iD?(NEA'a1mMS!?@+!g&#74?)/&%3"%d'tL)nlP$J,&ABUE`WiQfE,/(^o)##WW8?[nlKA:Gfi.E_[LqXS.h:+84_&6HeOKU?4G-*(_Vl:Hd79^o^AtT^FP$V"o01S9Q86:%bg>-u9lfuER'BfHF!f+uj'Ypj1E$d\pFqe2b'H6DUt1(0_O`Pk-Jh.%W33p077@!Y]+uhjK@PYplJ?/ELNJn\.tUZdW?k?L5X^W7%eH<2]1[)/a?Y=:(bfDm=]<tg@kYs$93Qr2?,em[21Uj:,+O0VqEp*JRR_lRTnfGig3A#573u3i\]$@465>%^YBNq7RdTdrAZC?d=%gA#cqS%`6GPrNuQ^[J\N\Y=r8/TOUl8$HcK7t)WHj"hB0(TK5>E_[g(9h!@`PrKR_?P88N06]9JOHBR>G3^ha#;ot36'ejKWT#UY%9JEm%"W9=09@T:R:Y/(.1Aib'ES/uL4kl[k0"[auae"j?M&MStW5gAsQP@\UG!EetG9q95a0ON3>I;9#@4Os"/qZC<EYVlS6r&-0%7#hhC5[rN.l\YS/"RB35*37#,N48Gd3_hYLOk?j,7+eT$UNm?pApL8K,^4td=N&(3,ff0rc/0R1)T$a^JV:)FlEG1!$pH,'O7IIS%LA'=8h2&hmeP"tj=9&UoM"`39lt4k`*-9C&T&>V$G9uo5N19-?<mRM+XY")c[]!hITZ2.f!]C;/3N?]mG>GKQ)H_k_I]r'OD?"bO%/.s&Jf<`g2DQR!A$>s;'^6*gBD90b<h#bU>G'/$PZ#Bs[&JPlN!Oed1R7fH/)]")rkH1bG_A[)S:u?J(c-J":Lc'[f5C!,TGSoYJ%kIc0)W1N.G[r8Z\-ICWd=QHD5mda$6%N-*M/D01B33$?Bc!9mO`,%K7iGLFfrPR/EW-qJ@2PmsP`C8+!XB(ZLjBL&0D3'V3MBRXa%US#^uIqHMcNs+uNR;Y<=$9C;BK`l[S@XLD`%'U<d<,1VDW&X+..V8p^NEl)m10r+^e^I^JMMiP9/QZ,993KA;`Z!h1j](ft(o)AW%4fe'bgi,8Ck4c0uT9V.`(U-cqO*I4-)M;lplM:S%=C%]ikGH+g&<9D/;l$R.*F0Yc$[9W"Z+=ii,Z7!CgdP&K:M,:,j$CU5;O<N1%4K@m`'rbu-mVlFiYBa!&g9AZn!cojhWC!h.q6MDALVg_%@MKo?26htF2Wd5*5QD+dFEeq5enm\]r-k!>!B't3@VL[)4Vlusrmh?>%]g8iZ_'p.VFQ&(1gpD*UReZ1-luZ`qW`cRgQClFsoBgF1$#['`OZ`\"\d<7d:#Y3WPT(#X)4k$j2YcTt[gN8]E915[,$Jh;_@<dl%=4@qG;=SF"76s&4'ap,s[s\k7cZOgs7)-`3M<;LdI!&5l1M'k\ICqXNN7/m-Z:@fKWs/mq,$?R$^[a^<CL+7hI=6C$E4rT1%a8-Q%8j8U,7E&Fa,=P-f_l7o+]J4rEs29K@EAgAq@JMLS)`gXuUKK.f6$3#LU"i!8:6k`2-&anBF_t4*66592m!+>&$!^OHF35aYm:O_>%Sg][p&h#AE8\1Kjp*.S^M0PDCMpF3Ee1m8R+<EH^N2nP8?#(NjPZmP<W_TVaH(7a6a@)B6,0DUacG"8nrKYG"j]tR"8Eq5DBjf$!%LGq<j0EgqQ.1@V>EY&(*O5YAr0ZLXQ^en8NRf6&d(_,L7C@.,`*pX^-k$=Gckpt8lP0\I['dR<\_sqr-<+hgt6?E9J`PL<sop^X1%!T,C<b@b3cVT0Jq/<el,G%=YdNF3`k;&l)P>Uj)-,gmO-^V?VqAQen2UO8L!^c'Nh;H_S:4BKB$Sh%iaf#0b\XRc$7"AHt)8bJei%h6VnV"B1Phq,k(0#gDWK?VQhDl&5;YQO.8ONg-a+[.4r)@lSB-9>0n.$J3qnGF8lC;O>F-q3iI4;;!EY3U3><FC:jTfRG_u==C)9%K%HT5?1fD/m(Mt$'&G184ti-RPNmi-@ueO]'_q"_^%Gs$09b[tfTVY"^7+l,`r%Yb7=qpH^>SFD;>D-InK"e?@t1pK?hlIV?5@pm%?79/-e]YE?jiaHG)0b0Djm2nm9)4ogRmBPkQ4,G.LTsgm9I;Zmng2/ej3bbka'1!"-In$V!4"YK(j[C<ol]$^F>%!fa,[(pT;g"$%Lo!OYlggi9Q`nRGVt?E1lgc<@4)_EcSb@3\olU5W.XtUt\fFiNEp;nulff`HfsS$<Y,C"j=N8spSR&8UPVNjZMP^HU/l,m07hB)s%KgaF*e2N"9.JEO=U73/LI4k?$Q6:C0)qh\BoZ/<niqMb98>C]r.(t5M!W*KUJhP6P^d$mH\/IGKj_J4$*q=3>qb_c_>u'o\St96i%LAYT(MZToU_tjmi&)`4PPl0GId%@I"l:(BDH<e2i:8d-XqEm3@rrAPeZ)[f-bA0=I&P\LG>5I+^F,SU-J>3#VgG0\Y;!h3!?.Zue%]Dqh`*tEPd'iptL^@#"nB9,TT(]:BMU\[VOQ)PZT(tk1jI?4KfhOVGNYVna]LnXg]!FLo0@j?)9P']PN\UF7)77`K6N6t8fo_7Ci%LlDk,gNgGo]Ij=E>lAGtS((E4rM+VS$/T7P%H$LJo6c+cT;]mR#2-;fH%4?-hA,umbgkBs=4co'TYX-"#euDNQ0!.3/SX6nbq?2h%>uL&@VJ&^`a%9jqh[DIqJJ3c66XKACgft/^C_mS^jNY*2I_(`a,F#0U3?V+V'B1833_1ap^'m$pe!7Z$DKK:oqsnbT1-](?`=]Lc%NjldQC)8OA1*`RM?\KTe:NC5PdHG4Vm.rq=?Zc5N1q>n=C\1Y1/3d2UTO9&KT<<J4e"*.=Vju^1J#0-R8c>1S!j,#'PY[pif="oD%m/T-_CWJ&ajl<*bR&`lJ;>O,n;NFc3I.ipL'MC)qL9#6M<6o?,5n0g-<H%ut]J_a-.iU&dL"-7-BUf8-RYOhI6r,(&i'ZUY_nRWT%n.cAS6n;7sLbV!Spet'(Es(,\jCI:-9dZh;UBYN6PeQW@)QW)6'i?q70Wt=PH0%qXR&NHq-j+F.WLGKh/@H2f&gs3VNF(RrRt`VL%b,FrN-`Y*7.'anK*l24D1t',:R7f#an+92L5(9Kf"+&dO'D0_FX[<q"r%:3^s5/tmS]Ss&19!t0:\*H<omX2.H%(-irtG"cIE?5j%kE"Nh5$F0IqkO&go@*KErI);-s7qlUPH5hV]A6/\EI[k*GQ0$[^$06:@Yu'PG/[UY0XYgV*jY1"cMBis](*S,Q-9gXS"E2X-mO=5%lAsdKOAt^ek`6%P6[u'+*Q,'n-uf&$9mXq`5eneRhRK3-I[eaPr[C]dVp]^Jg-r*Q:qJrj,ekE/\]_\RCu`0*I`e#Q9VN;O$QdkP%]<@4VE#cP<kekK4\d`DOjA.fN\SV5mWj`']8CR4O[SI/-;#GVK](".cJ+ES`<S[2dPJJc!q"_>YO2(-j@.1Ag8iC&YAa]PqOs.,u%52Tn]_1!^=DE4<r=sXcHm_<*QMM6dU"T2FSWq&685L^>QZLtRDPPW95b9ro>p"Yj"N7`(c$K]bZEY1cWBO9d-l44VCKolj%oS&o@%$0I#dhlDY26_=rcf]Lr!0X]7]/[m73>]Rflh/;ItaV>6B0c]EE^3VuMGEH2m'iiQMp9?lCG4r9EjboZ.b%\98NU)jpIj<*:g$:#a%Ld8rU]`S`PmIA>"hAah^_L?d.Jt3J08;*7,n#RJ'<ZOZ^3SR7FU/1-I31<o^lF],=86S1&(NBDmA'Q9ZI9_7oDgbZIWpcibSu<)C%+N`%()nm=TWt9Y(C<LD:cL4Il`eY)r@(\Kj:l1lkd0S2sf4ua5MU60_0ninbBKiYb$=33oRG+.N'GV5D=ncs,5T;\dSTSp(Q8Hko%QS6ql,9*:XlO0XU4\D^[FIpqWEW].ol8TOK_Emi:73L(=W.]VN?&_(d,ebM+[VCJEC0pP,oFpiQ5E@#aS*K$AhaTeZlb#+s!oHM^%5c%9u8?+XgM:jKX<5T9"c[d4>>q6ap-Yl'c)shSk;"&SS+"lnNJ;fsF#a>e"k#KcIZ]%-@r3<HO?2UCT0R=!!3p?>`?gAB6ljG#'%dA#rrT3)sU$QD"b;]L!27iih>:Rfsn1&H9]:s]gi3'bZS&M93>pC<rDI_$BFZqA-kfJX'no`WM#mQc?`p/Y;WrGNtk/luV5M=rea%qrA!t=(8d+9:3M[oG+UtDFe(O\VO(HfV1DJ.$;KE.[RB<$6.pb[J%3*hW!Q7h'[@Fm=^I>8Ui<XH:ZC^&"Qar$!M=:1es0m&4%&a%BSR'Dhi[g4Zfqng2ckR?1$4keb3/n.pHd/:q.I?:VULmW\\@j'H;/l(?Pd9d]jFDYp"4?V2rZOLmK2hd\9np#V$ljM6MZ^*Jj,iS%&PEr_n5MFi7@N^P#=$^1GRUMF6c#-9Z]9dD?c<P%0(]u",Q<[<(3\pe#TNI/"+HXC?q$\_Yf#l[&C!(J%7oTc*<@b0\G/,K%4EO0%^Ep;&_7[\r;-O<#W.7McHe!+;\D9^e,CtGr%,56n3Va[3"gX93&##JPK*qZOW=;)]$%lbX@aD;H;YZDIE;9"O6N6?P/KK<<i=+iP%ITiX6j^4'mR":rs&i),Jn.t71R=i]$g>?E(6*pfT&nuX[K=jo<<$&d=PCoEbW$<XdG@.jjEU\m=M<2R[CJ(A2]A&,HCZKmP,Hj(H%kn"7Nif,u%3F3eZE;f_&M@9O05'\5n&>Usr&?aYO&0CSR5r`M4!8`GN!`2Qa6_LMkFqCea48L(U_cK$s%g)1A"PY=B!bFu9%fm>.%S^:I<_#KO5dQs8McA)&D6020RfY;l`#lN-F0M$%eA.Srdej4XY?V2-@QI>+)i(@l/^+]'`'#cU*!P%k?4Q>_V`f?G\J.#hC?E+s>%M2_bah3IAsmj5Scs.c9agMT-u?<!d,.+'EkO*L?PIDcP93mj;D'cf$,]6j#5_\#!r?`"lan[TXVm#B4#V2gr1g"<p)=MFt8J900A%W!'.air4;`Cd^1K8!N=H+,1"_rE(Xfk_oCW]_o@r>cQ,a[.iNd4;.8Z`nk6#IDFO*rW'+-I<KBGZ*OgTm@5nLbI&ra#DVP62AXBL%\Ah2qFa!Aa*9s'MRhpmh`p>>,Z_tbMAEk1/,PGTW6l^=/rRYd4EK/Z>`l'IoBPZu$GAXl2J%iY2pd>n30D%d02c$"TfgjiQ/;6-<%iV3=ed7>g5LSl#gUV6gn?fm?dc-,j%/)o^i7lui=!nY\`*RpL(,2`=pfrqmNCPK%/Fi2i##5e)Tl,u%>0/"!VmkhRIqtftqq"jU*%IXPK\]SOFuUOAu_?2@0BNGYW!K,n][B4C&F.#*Hg#u/2;<;QKjlL.UWSZ(,.c(4V_'ideIZsmBuWG:/;lCju<Ai!W%>!6u7Wr>s*%=0%+:<lI+7j_FJ8d>Ig4L9&il7k;j-[</g&k\+P/E+W1PLQ5DurG1e8p!D*Do.n56lCk!'2qumJTqbWBqpV]K%iqe)QPlr,%iqd1%(pUboZr6$A9380LN`HeKB^KR-d*\k6<a*":4`n&o)AS^A2%SWujnVdFrJpQJq>p]mbMiEGmjDG')V+6tTATOts*I!#nUKbP3VY9,%S'M#lL!1V^Q%CY<r+l>P(F%K1iPU0Amlp/8[HS'XP1@ZMj8&E3q;_F"o"TZppntrOs1$hYPP[^c(r6[W59Y7tD?O%Y:LWnUNo2cb%p_`e`i.(76^$cd:D\laBdDm[h"2FdfI-JJ&^[S0$q879'[f6ah\Nb:_hgnQorK4Y7T/U+,6U/8I:OE@2$-WYNgOj\*gYD*u^2,im%L&Y\Z[)<>7Qi/."66_,mM1Y<oQ$c?'Ab(-3L7(9)G<aG\8$L_Q4taZE=UtHVAjnGtV>moN!q`#'T#:7$A+,ZmB>)BUiGB*R]Zb(#%TV(=67YD^l;+tW.4Lmuo15S[OPKaFYQVF<a)lEXQFYg[%3h>7)'JIUC?@Q=?+"V:GAN:pW1:4l1dOFSGWBXVB.Z(,m.[A0!n9u5u%_eV28r*XMkMN\[9,f3Pq5u,Or51%bC=PSq3WK'";/0s0R@:Ef99Sh6?W]*WOh<JVD!,?^Rs'TiYBaE7YVuCLPldPp72d?2fEVn5c%C27ne#E.=]a#$s&E=K^<qiesc&W@_280QlnhsS,FGPD,mIR!c+R/F/a?20W%ql9*Lce#AHfAFpCO!O^X`>9VIS3*A@-PZP93-ERd%Dne/r/I3kF6!S[Cd`PcbXh4hjAIBQ1rQK?FO?!Qi?pFUsF=NEh5Dbf0/7g)[.S`Nj/='"9A,.A^)O0bfE`U=JlW-fM]#O;4&soG^%Btg/;@!rQ-;1rB=1Et/AUpT7Nk%h%o8P)VF3$U3)M()c>HIC;#g8IdXB1b]BjA\%,(3rJDM)0l"DmgM!WLGJ0&8tSSD<_UZd)]eI%j"u1>eMr\61d*Zo2d6cO,J6eO8+AXHEh(4R]ER0.&a-S/\*'3?G.SN'pB]2kJm$AAWJF\+!E(m^PEPE%,,&4G_kffs:Kl`\;>PoH%80BU^V)4P$E1c&'-o]3[M@sX9+sWoB,MhM1oG+jf:52Q&!hW5c77k^*5D=`NZ3ZpEV*-+L$E4H#P%F22Bm<QZ:;PKm-05J"aC_8b%2T>8[46[/9,*h9Kg5OI?O:fH2.Lc_dQ96J<a[.n<1)-Z3j9jP"*,$j*&Z%7m_W&nN+Fka`&4P'p>9;-[!W_-l1'cj2!USf2UjC!q%6ii$Ea9p9Xgd\G<o<QSuBfVXqs1fA$`""e6Ol6F."o&tmaPmPX2F$lt"LJ4A6"WT#IeoKIQf9u]oTqBf)J0A\O<qD$X55Vf9d,XR%*bEc?R`f4tauI:snlu5WRt\T:36=QG1_&p'2,dFAY5f`1"0#O#$e#b`YCMpM!M5HH.1=;&>f\d*8JG][EC!`(L*]?n89;Ed$<]?5%VAJ[M'r2l1o!`q&E=7mZTLDErJ!k9[%jRJW;^)HP<8*bT=^Q#Oo)N6?_j=!5)mE6hAlC\2fduBe8<e2e2%k[oOUS9.1_(B="tsr"%^Qc,5@qg1gKl,MTjoNd`*RgYp=n>hZjTL%Zf)(re25p^P2rI,j7m6/K>f"5dQ9f"RVpZHS>f#H<j'Yr$dqQDNdf:PqZm<4*V$(&'%DIR1j9)peO=C(\5O^*NrP73p#`s*g*"Gf+cXIRE=FJ4Ks)&Al#TW##uDbmeGmR=p-=Jb*?TcHsQ!H*.Ea=h)OML]'..)?f,]a_E2%S.Ghu3KkZ.KSrl%&7lL:$9".X]0[4b+5j-F*s)5\8L`:[&p',$84i<&Z3ZU"l@de0T0gLt!+;*JIo67gLbLN30W(@6Y"6I#AMYbH%6;fR&*ouQ:%V6R*RW_t/#]`CfFY9HUngDDmDM>c\#RoXQ,*N$*<X1dG=7Cb#CceUa(1j=a(-7N//qLBpJWi@?8;J7-4_.GEJ/$ku%mBZq1dOA&*,)m]F)i_mn>$cb&@$k_fCS56`0eNR?)&gGk81O2gd3&b"irraa/!-AtA3e74M]%-A4S^#l'Z]7$_YD$9_&]12Um)l"%;^1];&VjPQaWTPuUsk&iK.?p^R3fnC(R-&XiGDi0n/#4H!9G+2j]jo&d3]*"Ug_ZHe3uX*8/[G"==)FG--HX!JN)`a8#Ouao+`nj%d]cj3Pb\BbWu7cd%=:snMKJg5NY1J$'"L8:T*]E@.u2r*E!?0SN^0t4Yjc3f"&C-(K`JUgb?9@:#V\#f,6\aIKi;$6P]e;l4#nn9%,%/$5UMW'ai!S.jd;Y)R=%IfeEcR$d/d!bk_2!h#=f-tiU6Ys;77;=B/"g7NQsjtDC_k-3c<FVmB;"uc$7A&43[EWm_2V6g2>."'%qmKd'DBuhIW.-c[%?+`^4ip?[9Gi6B2TEN4%=$5<!tG%A&2`[1;'e*L)@uc??7VBZ1*Un4g,1o;NBLr?I4Ft`AnE_6>U8?MVa)&8%dee04mKsU`WqCYXQ=/9aQCXe"*@;&!"uEIhU;.0J<g\[CKnoHVQ/+u=^;TELpMKp[oG?A.iB5F]_GK.*0jlql4=B#(9`RnJ[#eaU%el`llV1o#OGu46_`tr#k(VaH^c(-g-d;24?aP\]@GKiX)(qZ\b-f3HgNM4Df=%pt.:-0:40]AkZ!p["G]nTLaN_mXV)pXoiRofZ6%R3dd-`5Hj=\.T?1k>M-N&up_[M!"0r0H']hJUg^:_I5^^daH]f+B,hrJSaI=%b$rNJLh=g[%_?9IEiYVK@-AScurnDprCJ.30)CS%kY9^-`/PVYf\!liIHWFj_':\kb.d*%=GLA%UA#Oh'CfnJ3'Tam!gI]lO0O3jgDgGRbp2[_a>V-SD[HgP]7;8Q*T=)UB`bJ(c9R'N%(PNF*0!DY1mV+ai@@E"nI?HL8R/Sh6dVpNFkVc0cHfsG0Mmle(#/mU?*Wi*Lq@JRA@X2^gSbC6rbhX?U?*W;)`RR#rLg:qb\fQM9%OM%`ojp@<*2OE:_hFPTOEkP"T)^Er9!\ZAJ4L>1GKe\eYr['/rRS[[GX&o?p.Q<<d0[0$PRPkesMkg%7_52dF-,D,_]!-u6DiX<Q%MrJ7l?DZ@^pLqd]qCpKRa>-Eo+$<5dW<*!t3%J)JM#B2B(XptD3VXkiE[S0o00#mZ0pOh\gteWBMR7[\cZ_d.2+Vj;&,e<)5mTlU%d=E4tr@uZc171QSE!:W,?NLRMQ^Js;57`q;cPU#a@Om+*CteS3b^3*jTpf%'1$#2o"A5=4j:n/sK"pBr(DI?'1egge%(&0^Pb=sq%VM7S1P2iRChXN\aX@dCC5oG]9+$H<@F1?@58o\4oJIDt1"u:e!p,Q(VaGQ\E8im:Y.HYG&\Fc`kWXIr0pYb^Qj87TJ:-p_6($+@(%c"dC"4OAe]:)q>X7FjPeS\oQ`@m\)Fk:3N'fVK$$9'_r?kKIkmgb41,ahl&<2pk)'G.^,*(`SR3/.Odq)RUV^d$T5%s2=Wok8q3o%>6XnT%og&jj?\)'n_3pnmZ^u<LLPL;8E3=]Lqn>>`/7-&CNP0d>a2]$T8*=MH[PYfYONh:lQs7BbKKoVpcn;(YU;451lkjbI>]l%%M+4(3QW%:YU+]OWN.n#`">&W,P:^8o^q6>/NVarfQ=YOt$`8n2`@r8gFqZ(nj5@pS[,=54R-'!35>*.F7Ap@uiW<mK&'C:;^aPm>%NLDJem@Fr,:F@G#09c3Tf/E_oTdq#,`P"%Ond#X3W<LGrQNV=WT?1-DeuY-tZRAA"oGj$H&ZA%:Ysa6?JUt]/JkJ?mXXn]oXG4j,%MJNr,\QkA,ATb5b/b[j2OIBdtJt_('oFLpRZD7Jt/X'S/3YQ]]l6P!jfr&DK:BB.S&o:_4;o)fC<\/W*4EVDj<b!!5B_U-p+Js/=%!0:lCQ&m19c)k"Z%65Pg*:5G*G^'@RGp%L9A[0\_(lF=a4M9bL`lh8m2uXAm#5<]Me7Zi4JY(1+$h_F`%-mrV`Ed=gG^_PqN>1fq%DO608fOht:H?2-C=&>=H.F>WcYVK49)S#2?o@\s`0m/oGR5n3>GL,Yp@d:%H<;6V+[r%B^G[`ADn2_[SOAnLV1`cm2To-kZ8Q`2n%'kD-iiJ^Mcg@5@S%[&\!32TB3'Udf)RSh2c#?hTGCrAA`*%s]t('a]GgC\T1q]+<fA^0[Y##UKV"sX6S.)jXDWnerT//(lec:%o.%QEWQfp,CHQVnqH$F01^44f#Vu%r>+ol!<V!Mq%DCA\;X:mTpi,?K,i6H2uN1Q$Jg]Cg;f*64m7hGF=]__.sf?V(gO<mkn`j*AI26%K7*/`C"k]Up1ES8(m01'M%$=Yl"2H^hFqfGBqZQ"Y%*-dI>B7QS:c1,rZlI+XmI[)#T+Om-pZ`O82%G#m`e\31.95:&f>]D?s=RG%.ceB)__P&(nHC:%i+:Wj;6r9d6g_^i\?SMe-bGG7@\\d,2]sr=8tTZNr*#8r\'@VQ1I:(7&]V;#%0B4HVCT:Zh?*82+is19)Za&;%/C_ZW/IU5QN;u";^J7?m<m.AJ/Q^.`:jW$QXGn/$>uoIu;-&g+fA'7uHq@2Pgl`:Njp:,M?_@sN;?j]ecgWc`I;,)G7"eE!X&i'O%:..=MY`2lE#?4H(8JYlSU`1H*PBPnb@#Ua\90X"76;9ge>IbINSIt0<X`/o4PSd^,R*!.%Ws)'V7M`^Qh9Q5C97^m9#'",2O7-dL%`%^!M9Lu/@NNiuT's%o]ODJ;@bj.U?eiIe,&iaq9oB",#67a-5["\.s3jN,s$YkLP.X:mROYpOW>ZtUG0.pDNpconI@&>?ZNL$YS%-ICm[PI4(.2P0_*A1ch.bk]tlGK:[M.2\O_K]&9^bB'D.o%/.3m_'oT*-aTI=cV$,-Xf#DglTnU?%V:%YfuXb2oUfs2$_#CS&a8"%/MnH+4<V'fWkRG"g`5HE54Ck__8NlRc,Q3)jVmP`\G[C4\=DMc0GO9*F1I4tOb:mk96`\Hl<KJC_L#]m*;;O)M&s(!q'$4!VjZOA%.p>Qtgp&XL[1_TSVSc>"XjA^tHh;X$!9asA*"*:ij&IfIe:&h*E%L5l/1cQJcZ6)kWj;)6Fge4d(.[3oY@F5r?uZ8R0,-ATp22et%$dSgp#:=Y`mkLn;mYuq90H^hB_P6sg8,$9jGlpF<1=l6Y*8NUHj):VdUNM9\+L9)gPuM9^=R(P?O<LE.BTj.T+p5LcFWLFr$n7o&%_@<9?Oqrm*dE?r5(HQ&>&J[^Y-&KW[OrCnd6RrE8X9_Tk2o^#D.?Es(^Q-c(^^qR4[@'*5ig:n#W!EppG)&X24kgD(Tsht',9".G%0>0^hY7oD\GA'%eR'UmiX3g03FS#9&0&1-2*755c=hu<Ya>\JobOO;nqD3LHF+5Khkqt<VOo>U?_9sgRDB:@f_'^n'$=T>494S<h%aKnTr[3Rk^"`A%Ha86A*i@?=sEC5!':+2;,;M9g8T]DMq)T'CU79IC7#aku?j'ghVY1&CeI`$CcZjht+jO8kR:d,g$&@jg3T3Z6P%PO#4`=WBZ4m/E$@iN%/q+-Ekkb1nToObprQ+9u"RTe0)cHJ)_cK+=65=7A;"LYB%Ca]<ZJgltE2_M.d\nopusUePD>;<\,[!N.0=%cb!tL6[pr2V*>GZd3":noZ)M"qVu#.@'CKmIiO:'57WGGa1GS_Q'`^[%Rq*S#GDHcKbsl%0pVfb(d/WSN$1Frk!AU-"$$q1JK0X.%5TW7103O+i5RteS+H%roaMSi1A2-E'lt&P:4H-.'(1V'?KCO2J_.XnN@-eYl`E42B?o/C70Z&J/A]'-_N93D97e%T+@<dld0g*Op%bWNs4(`m3BQ3hi(k$Br>aMA]?jC-cCRc[EjMm8Mf_7Vr>30_Kn$mfpJeXZma8n9ZB&m:0j6k7(1,(m.baMB8sj<7j%"tV'@0Zi^E%YD1-Y*ba>=N%n"4f!'p"o'b"ZC8*8E:BD1nnjDUq=BA-XKRDb^noKHS^<iih'`Uhi5`\.k(;o5;*qpa)i$U_aM($3FZWmNYiI/Cp%!m8V":JT4CkD92Z=,$6%Y6#aP/!^Fo'T[c607\('Jg^:gIP;O%4<D2r&0D/D_bpBaGQ6LFK((^WGe#ELIpdL!^eX]phu)WghgG%A%++Et_O'`RSdibaa:Oi2phgPCpHR;>:?N0rA?bZR!a-Y\2s3KU$dpHI2pZFd?l,OgT[>uL2nb^(C>Zj5pqsCkBf\6d<qAA]\huEK3%pE,,p%GU+#E2@;W'HV)j?/-;DJV"#5nl1(NoR=N-)<KuYFJ$7pDu7Ga,5rhQiISr=f<>L;DXg-hMsohe.i-+:BUX2@_pQ]7aVg[s%afcc!d0K^M^NruGT/X1K6![]3-3F*rH'N8rD,8Wbhe9/S2`J=d7W=c!N[tY<DW_8fp+:<=+Wa`K:IDnM>kW'k$B7_iK[cTi@DCLp%i7uVf%MGE_)^/u7]#+C'$#Pdhd4+[p?o&I0M4QYpld!aETZ>m6&'jQ7UrUaBZ?N>bk]sN5_7AA-oMT/iK6-ogY#sqF8CX7S4ug6(%Ci+Rs#iYRP@F"D"\F%Uj`94"&GiB=-RlB=SRO'"M:g\J]aMV/t[a0#`3ACO=i4ZQV/Zg%=*jSL6?s9;RS'"W:=u$r(-.)#Xc2./5%K7=Cq;<9I8[qgpecXIKiOr9XQ%*&!nQ#"2&\80&uX2bsdEh-BRA85:fANI5>aOApja`GI+=k[(C=jBWPj_.h;jnP(jO&)h\IfcYm%h`_3=I/?#inI$TeqV:?*[Cd%sCbf=$fRjk,PKjQp@]$dL7&3l0oE-*g#1=(qCPj]^]=5.:Hm?so-'jd*h/bW%XfO6d+W\/CV'(N*%&;%\ZefI>k[kUAc#UY6UG.;%:]F]Z#l^%G1jSh;P$kj5nRD/J/O'!$)4sG[8,9.h!SK3;!HtNe%mbYs8)7)[AJNkd''/='RE"HH-%]Y:JR6b&L442h,M=.`(\MD72Go9hmWLDV>V,WR>EKFtW.R-s6q+\.4MoT#;Z6l=Gdba9WlW*`%'fc?"a)ao2$1_e_GVVreV0h6nT%:cT_++1Uc($.GZV8t`fqd#gG*:cT^.-8.gNLaWY_0fACe2-j]lNel;Zok>8,,D)OLCNN[$NX,lRk8Y(%:g7@),[<nP;iV,\K-c)`%KOp4f8NOG\"EB5lb8FF'g^RbR#U1m^E[j\;F,l&#*p#9HrXKsBE^UJV-0H#784WG07ms$UJ([Tk%NpAul4t^H-irTI,]N;OJZ\)3%7T1-_$+LrB_16H.OpE@jFUfnbOpD84!jkM:#SAOV7,^5U,Al\-GTrY,7ms&'Hf"K'No6ib7g(4M'k2Pc<]M?0=ft#lg;BH#*"fEr%G6fWah?Te!3?fG2eN"fn9Ug)k&@'2._urtlXs=U,;lEr;ji@g_hc5gF@d4L@.)C4.OpDY'*.(CX9h[SaPX[B,<GO4.4$^F0ZDYfP%15[eX"M6WKaT>WWG9.sZH(L=pi&qT>d((@!H0DE\KDc;(S1K7A=@\4e3/*%.,;?)5.(Y(0&28f?bA49(0Ecr'fcoKeQd")e8JfcA%OiM8M'H(Bf[ogWDY"-Bjfco''o-DD%G\sQ!`[5LbBgUTbk/VQUJtNq3eB4.2_F:D*9F$c(\d0*.V2GmQ%6VI88qW^_+a.#4f"GGR%F7BW[5NgPPAB-d9*imJ%NTBr'/j^,rlcUCa0rKrnI8Gt%,!Cg58f,<m`%1upY\&`0OH]iW\d5Q6bG5T-d:S]9Xdk5^R)i^[(I=mV%ELFF91"<:Y)g0"'W^"tKo_G<T,V)gKR@*,ub//3UHEhL@9F2qWeNoSBXp@'s"D8R1;][\8=Z-s`\/F_KL_GjDa'`ik&Ttqr(Gd@r%+QD%249kDE0uD5%*3+)"#\#:M;Lhf&,<a8<0nKCOSmM=HVE&.>#\;q5m,0m6">LaZFLp=qjrEi"`eYhtc'.fmF34b1;3^0^0Igdi%MqM^Y1:RN<M[;Fd7EKVb#C_a!S?0%d#ShWmPq*MARcc$^s/HL#ar;M*.ZTE-8V&YXNNgW#V`/T-.W9um$$4sZrCoa-#b&Vtmo`WH%LdN4R9RG+K0]n?;,/O'([>V$)erP)$K\iO\n?9@c]FiRJiUEWL4oNlp2o6`,D9a*Zd+,/f7dQp0"kbjJ?<?=&&Ire5F5D`)l*o8-%)KW#OZr%uec5Y_MWZh`\hooTbS2Z%j0_[HY<-]^E=b`GY*Aci;TJaa;jNR2F&S'Z',.LYo??K1l,7(9Ygo&Mi,Yj1@3gFV2Z]a2N%fu`\b6XHdp&Y7Y%2Gdo?bC!NGIbFNg9Yq'1,h#VnS^<Cb,90,EfS[P1.<C0(Hq[qc>-,r9,P\9QS!F)Uc5],j&?_6sIEa]^Np,O(%S1j?Fp-_S''.C;#Z5UAPeQQeVY!-V7hl<7hDp6fUo6Qs.$AsLmT#?a$H#(SQ[cX%1GKcI86DaqUObO%SKU"T:d]O$omo*Uo@$SZ>%oGeK5+D1!%3JYQ=,M8b$)Y8%\M=pI'\DAWX7-K(Yc5D[rGVHKFZNSMWcUQLM!#t7?q\<0]JJ#+14JbM'i<U(N,[:BK'%_P5X`!0-%1nA'cjP.;6LDkDS3H<n7Wd4q'\SdYr8/g1F6As.UMUmt_V)c<rGLNf/j0.l*\@F?-hK\UMq$q"pMl7h+paHM&_g%A1/i&ti%H]q5%b+8s7Jdn7j6hYjrVZ<S&?02;8P\?4b-O3="#(hO*#YB<-*5e($Xu25]LVVt)8Zjd,UNj*sU7ao]8TKbqRANSAeuU.+aQiFXOJh7D%N1Q2;fQ;(E/Y(##p$/,.%^S.*b2l,#$r8*<d4orMKcoD1QftrLVg2uC<om>Gf*'ap*NqE0YSF!VF=4!7V=(Vh9O#pn3\fc<)N5Gt%=m7E^,jJsB#q<4E3!*LcJWU3r_8N-;[kV)l*$Y5eJS3(2E>fI+$)T2o1%&\7ecW\#lt"4!(Ihp4Dn6!<-#n=Z)!+bLs3__paWt7Q%.62crkT83Pnki?\C;[9rRrOp2GQ*<+QQZI*@+sfKP0a\?TCWl,FVZ#3&EcLuh9+;Y\'`,F4iTJB2T<UC/PbPMq6VMe=@n+acN8S7%e1PcJ*qa)Sb1ji7olYK+B=-tECqE7sePUQ10CVCai)eT.<h;7sl2-kO8pXlT;NFCkeAF:o&%m6)SS\2KHfZrepEQlD*%,f&%+jJ\%Lc)46bKR(+P62T[E^0e%$27m%k)hILY$r:TP!Vgu\6RK=;j'P_#hEXUc$PGFF]LTD,D*OgI>CD=P,"S"6q7'Z[8#mk-IL#[/l)4U%m@(uK6?M&&=MuI4-fiM,0TK=6nM'8L0[iuEVDTsgSr?&l/])I&q/tH7ph-ZG69ip092),Yn1<6CKscdI6r)b6dH5E5+,-5[T0)5&%hs2E#,3SDKG[pMg=E5GcaS1roVtlf_2-YUEe1!$Y+DjrhdR+`'S@qM+D_Zmk\tC!-C9b;9mF3g=+(i;bVPsrbBtAOt6jWs'cM_Wi%g,_fd_<[4&lZg$@AS.BZ-CCqt:3$;@I<e%qlY+a@N=8OPTW9j?"rh<U;oAj<h\c-iW"Zj:0^arpV:hP;i'R/p-=(_l'-qT'27f*4%%Wu5B;s##nS7mVo*2IM0'3$D7,TJ#aUXCO)<GL6X;b@_$a;BO!*7uE0Cdp46R5i1.^#HR;7@]_[$M#&TFprA"i*>4dGGI*:L_GsS%D4,;6R6.V&,>KA5Qs)bF@'E:"Iq+:ujQ*&;?3BRu<5])qi4_sC$]JFGqI_i<EHi-CVimGsh@uBRA!rLuC#6c\$FHu5?Dki5,k"Kr%OocNX`(+fI34>T=;bt(0H2tdGSl*<8-\b3Y=m8E8`/^E'gX%8o]h7'H]t2S%4d,lr.9i5!9l+I%D</`l2mJ^X3CSV[:&JZ1C.n_A%G`uNM)Iq>=hLl\MBrJJ3;r?P.GcEac"FASi$"5)SZjPUGkf;0C8VT40*s8FNZF$A59q6mR9j'-VD`B:RUkst&'.)p^L_KXcjq"5u%Ut.W]&1?1;c7ME')b$8@'7$s!KjoiO(P!@$I!DjZi=IB:\4R/g&grf6FSQPRYL'b#G_7u'M,OhlkKZ4(LG-Wd%EIj.0]qjNZ%Pf`%FU\huQc)#2H!Undi]F4?0mlRZo"=fWHqE0"j"-Ie,%'pfRR,DWi_.c9H:3_&,;ii&mOOV5c'Q"ZO!`E(,tXNF-/uWnlHuH2\^O6U%kn4Fmd=bKH-0bl>jjH(HJkMFi!2/CO_PbLQ<D;55_X\M)s2!-]&nb8*cmK:mk`^dil'$`RoZ9ENI<%#r4rK;&:_(DV.#XK!Pk/sE%9l^_pZ5?$'4G5%X(1IQ6K/!MO_e9,5?n?l7R#sXZ5B!`_c8$f#0au2K1kY?ARR&qNbFgE+0IRHA(mN!5%*JQc30]3G*6Q)7%cq(,%L[m-f6TH"$TcB$M:``)I.#XKRPl99U.#Tf"b/;_1<6p^U#@g;hLRC_uK.nRn_&*gH@G44?B@rH$0l5"MBK"s[%%FO>bGJO'@T+>f%YUKgPfp%7`+.Y&9S+88%9mIT#VEB[2;[0#]P_W+Xb(XLij^9p9nhAfgV[SbNJfd"kab1laEkGM#ABmXdd>qQ@lQ4Pl>'r)b`9.=+%^?G[Z(0J@kn@i#V*m1j$pP1+p,s2d-kf+)1//]]Sb=:L/XCV$dYUAN&6oa9ujRP)[+WefUXq,V&*at3RboYgP^^oiuF[rf#;S=7P%n#7NWFbF:STXRHf(`K6:FYag[1W7Hg8l\/;VV"hT5.G9Ds+AQVG_8UCQ2,E00:K&Ip7+Fq])+7kB3KX&@9\1=ai%hAJlD,C^$c4+%1V])XKD%%seTbG0n;\M&_<[&+p0J!_[A-[A3=Rt[V^7T_c*h*_:+IYWQu0lr3%^PW=ACM1&>piJK'C=)1#=FAK%HTefBjGsVZh=I%BVF0m/Ac*k$/MstIWsL"!]R5@#cA[fDEBg/_J/2DHM:c)TgaG-,RX53F(UZGc^D&PrE$(=+/$=HlRQ'86o39W1Z_^+XS$O%Eh:Cs%WTbr7g9V#S/85?M)@Ll<(+ZBR4F5bq8_ga2aDZu.gL5<7)#(.!Y:TkIgWG[p)Ct+pJsP6$%*399Y>VNr]-6l%<7@)J\1ODp<j#]Q%5T6OHK=O%uG2!p\]RCol4R0A(]Bq'1G-@h)G,KEJm;D+.m7r/`gYMkm3@IT<R(M0,i6@;3c-<E@TCZ:dZDfe6ccs8s`$=,f$=)IP%)q+TV3M"aISRl0Om]j4tONN<:4gVR_Cq.i?LjJ_o$VIt4h5sQ&M)>T$>ANX-+9KXm)Sm[C"e#ac/!=(lP`4ZmmT%ciDeEM6lZ)@M%+n;R%/qn97\l[i^H/T27+9)o/fcO35mLV#jHLu>VjIsbGY"_Gm$ER7nV-!nA((lL@0=bjOIfl:C.`C4B`i"OA4dl!V$<%g]2T0?f%):Z/X?SN6FWB.VDPd))B0eC*$>q@2<eD1RW?OmC+mTWe_"Gh/LD8,GfK8G/.$U.aS\f!,<59#\L^/.H7^T&o3DA/6r$R772V8FV0%$J^/J[gAisAo%,dF1P^$QnL.9o^i*cBsS]i6kp4/I4nV="d0cfGB]ge8o5^A-oEusG17'JU_VG^h2e158.)Hb!V&^7M/PRh4MUnQ%csE6QZIJ*jT:+H2>CYY;(,MVnn`=Cha1@<dM.Zj9.cJt.S%\g2:BWfu'3%.[IF?GC:\Mf8jY.K@,_7PpEMI_\K.2V'i;JR4UZ3\$%.L,3MC386Uf&-%iE2V/3?)6N#*E<qBSm%CB!l.e"\E+1WT+=HX*Ma=Th]sp@4f47L='MR)/@7_&=RV%$ni2=aDP<Bn!YoMAY]a"2%\0V@P^fZhK]#j58*Od4)S.j:,[5r2iGM)D8Z3PQB@N@CRZ:,V2Qqmrr?*+4(Ke@t8jFVVQXlCar3q1G,iKHT8\m,Ks#B.:-7o;=V%?H91PVX*U2D[L[C6@_XX;MI=Dr(F6GE=4nbj;H'_Q.XO>LT?[!AEK_``0[XZET?"2o+g5(C%iKF,s1TAem?Dp'@*>H\n21WS\guZ%l$/Gqfl=njjh@i#;V<E+Ve?<8/f41E\n[!7Y?mN\/iQd/[Gt:i9*o>X?E3nO@,Di3%n2BO$H4`24"->t69p]lTVkG'G#SQZP?h\g%`@9RcZGX>`/J@CnSu8H+a,OuKXH^0]oBhH7\cXN=RnXe+XJt$,!SllhH&1V%WSJ_TZ`k+[ku;>RGMF$"`C28j<TNf#X*9A+_g\.G%lGY40EGGuY3?0XFZ>I1%#>>1q-'-&@ml$LXq&Pd/o.p,P?,>Pjh_GPKk8!1neg3FrCPMWc.dahr0;aI/bl^YpUj/bma/qb$SK+fP%@dHc'&(/$u5?_fb_?/L0j8`uK64X0\Rro_^AmbZtfpK_=W-PE/Ghg5u"kG!mA<Lh%1U2c2"86Wgp8AY:$W">GlJYjo.urjl*]FS`%/[R$1g8X0Wio@rkO0gNG0b:-Mg@iH^_67c(K-@RGlr?*.eN>8V(t,'h:,riP(m^H+"B4?d(EPC*4Dq5l)<kFi;VO@0<C)Zbb>$uu%\3=-j@d9hb8!GcfiCNn+(-1DO@(f-*Q4gCHB;q%82^t&>7)^7%d.C;bg7<qOQ]ns@76T#ZN)%Qt;OgX/f'XJ4X$kQIGu0N/LS#_D%aKh\FE7KZV.]l@siD"m@MZgK#n[bQ&"f+h\-;N?D@q!Vj)E#G>9-Yc(4+ir,i^=/V(;*KZ8#PD\-\BdCR`-LH0O,PNi'`uQ'%J:'%)sa07.cn@Vj[#EHH,j`'j6(+86qhF[jR\`u'g.#'%/(%KRQ-!ig^N\kV[dM%,gFgAgU`t7cS?l)<R0&SdkW;L$&)9nV,(E-R+%?d%K@/@+`+9GdE0q;/@nl-Z3LCJtnQ5fP8HEUp8aX@[_A"[o61@Y?%!SH"jdAJOm_f+L=rJ(SUcgV&F!kZKSQRfHa&qoNcGXD5W]@L/%r+F+b9b]W%'VJZTO$)6#Zub/h_.?E$dY:TFEm2.9P!/=r#5">8`$8&^;PVqj:MbOB-9,i?DU0kZ6;(1pr*/_[UK?$1J34rMO<2+F%)BNITk)h%=(FI<E%[%k+6pL@$kZ[N[A"<t5QQC%?-[B/>XEp=]QTU*.`:m]^[-T:\9:iYKc"(Z]aG*'Rl6]*s7Zu\k-Wo<Lr'Fmj%HVL*MhK#0MY,\sg4DdcD`_KmeX;.$`TfY8qN7r!f'CGFD+U8>dp8AED:NRgFSZqhiVj]`)J<a-AltMZ*'bGAIA=bu3_Y9<NIur^.%^nk2gF//JtgTm_o',%q3f@;G_]3A];c0H7XB@p.lBCkuAdO.R+?TOTNThi<2it_9@`=M/G\c]!pP:+!78PK)jacd_@`,Fe$^%EX[%eY>pL/MO(<f%[GMnMuVNLL`G0X7&)L@`^_?7eX@=F8/\mKX$YQV>,j2[8gu!m\rt!ae'\;]g)?$L_TCiBJF9Vm]=?um+^W#$KL_,%#Gh0[KigNM0b0gr5^%NWOP,G10Qn\`!HgTf>W7&Q@N7RC6&&/q&AtCs`pbD^jR#>q+?_hLOMdtIkg:%pT<];h:K`e9Mt/!F:K`Xo%V_#pY.1]taPRGoeaodc%H.NM#E^=;!b(?/N-jSfe.L0K%Pm'1,b(<kfAO)\^H([p3lue(]3?YXMjaa`4UB<68aobd=jah#9jZs<O%E^1\BE^7mamSGA@16fobfaTA<ZBWK4)+s"B5%2V'.$XrR9'(W(5A,5*b(:U*AO5(OPD5o5%`kDE(8N@D$i,H9_qU?[T]GjmUIqk.%"Ef-lg?hkBnjm3[J\r&h0370ckI(.ki)'5S=2ch78so\An\a_d)pQ@b6=e4PhNP_P'!rjX70QhMN#!-SnW]!(aD:TiY7`Euf!I5Y%eCQml'WiCF+8eG&@)2["fGjA\*`cf$dY>c<I(A675Nl:Xl??7/p(g^9]A?WP7l8XAs6d8_'XbW.%4d.;'ijAA!`WtcO+lTk*:oCj%_0?Le=-pi'XNtt1pR)Qen>[&^P-3Z"W8F#(1ptn5h=X?DkCmkZYo'AbP6/R9aoaY@WE=YR,n'7sd6[/;9+K$Wb=$:G4`<WXe;&Km%3e%&gh7&'0bF->rp6sTfJN3%amVj(b0MY9@4.LI&_J;SaL"D@(3%^PYE6"<]3%[;Vs7U#PbKJZ;QC#)T/MD&2>Fs_9]IL\0qg/6H%6+t)SpF.of=0Kl%T/+GIDo:KJT$R.AFNLS*CI&Kbi[,UF`,"]4c#67-r3kgd'Nkj?-VP"f>6a/tQ,N@.>t'"N[LD@cM;`epCH0Hg%\`,@][jCHG?>!*^X`\G6NZ-RL1DP*3r_r4:^2r#uqJL2kkr7@WgM_-p:7p3_gcc*e).V-&:)RQ>^SY&%^+uh#IJ)*;Q_0XqIYq7b%-`5MAIDjlA9$V?^.65.k+E%0fQ'-'R[I)OG;sqJb?E%Ie_Rcg/YqT[kd\mMk&eZ">4)j2N!7oYf[1K6>nq2,*R^X<CXr*nh2r9kG%m19[tb_eQkVc,9P^1pkRI/)R(.HB/+;65U,R&kdYl6S6jW8Ok[i/CSgR@k;P#G\pn?(%G,K]Kl%mJ]$2,<1C@D^j\b?sq<J-)Yc=%61sdZNN4Y%9ZYqJ!n4igW;0t)86AXL?W?RV>@\/^'obI_DoHTZ[dsX-`3<=Q$]Yi2_K=n;Q^^o==[8*U^.0MsX-*N5XlNt^hQ"#8%3&Qs!G34?F8;!l#iQURPG`]^/peoBl*!1S#<',5e4j\gJb."aOj3Jh_=lEL[A/W-VBtGjkgr&[SS%\[.:BWfu;3a=0AG&Ss=d!d4%6D)Q'>;k1%/HdL"HI^#`EO+Dp*KlmUYkECpF1,;![BFu0_1bjd]0.^n\fEC]:;5HsmWF=8atHN(>Hu\^-K':_9.et#<aq:kJ]H3X%,eUgE.&m'`TV$5)#J-)QhVdh;A83]5+L=SFj.72sB=qds6?[J^pCS-A)/jF%oK=1GGI99HQ8YTV5SJK*q%kF?/\Q]h\*S7Fq[;_S%[g\J[/9gH1jVK<-m4HjMX`<)k0r61eoMusE=Eq>Hop/o^@E<c<W0bZJi3_XZ-ZD#V@/7NS,uEX>SgrKj]`gjF,;9MeUY`?!H^bA6%ZqX*tFPbak$ct:8L2bX:FqW]h=J3+"`cL&_6+b6d$g"Ec^GR'h7%MQ2/9eS^(%r<)N_u3_)<\SsAK#l)l<D9o>ffo52CA+a%JXLe%b$^eS2rYW$p[*t5'ff!\74t.l[l7>KjIhB#Ad9^\/PB$KRb)NbA5_=A=NgB=4ktZ79^Z,d,V`?:?K/UVUiYF:ceurL&?J_^mHE?7%[k+G7B?CZhH&4g>Ql'&P=%t0.rKcCm&5:qj`nf'9X<4YNd"9)P;K&25e.0uN#lSb#0>XHf=9/(^%e;$=r\h"EbSb!AgR6OJ8t\;)%0>o*$hT:7?'A8W)\4M4ofasYS]GY4]oTC2(#$aX/YRC/trVjYp"YOS6P_,Ttg>Q%L$SW=dF-_)YHJlAu!gdi<@F3Qt.emXP!a(kj%6BTRs%8IO@J7r;M\#sTXVSJ)QXAc]8+ga9<0#Q/Rna_jsO]9;1_7`D\@bB/+VP?c<PQmJJ_422/%H46*@Ii@)ZnCsOBCb!;W4DO-%h`ni)qj[p.T:TI?5r11+@l!!Y<n)"cSM5Ca6L$ga:LidH3>Lrkg/7E<XQ;`^!>nH<S[b_/O1<TJE1,<$8!2*m51;\jA'jB[+k/ls%IL2:,DLhmG*&Z2.DFG2dcCnE)D?UTk/nTICC"u]lP:LTRW,t#M@`]ir=DJ:#+$qCb\H3&cmrASh\EliCI.8IUC?oau%(citW<TIX%r?^8lQBG*Z!FOOIYGPCl+HTogSVIp`0QjW'0h1aM(d/j$Jd#!!kMhq=nV)al;&k<:Z1i%94g8<AF.-P="JH;]QR,c3lk!doBa>Kd%oI>j[f<^_1>%W!WM-s2'g,UZPY;0&VW(_em(/M1DMpC"C.*(aT$qo<biq.Qe+AK*B/%jtaB#o3^Yo%>$-IHKJ`Bm3Kk/EFPFG+oV%N[:=4%=?MUab#YqU59*N/DW@M/G\qZ8a\WLZn.,A)I(L6jj;:</^):7R;EB!G?EG="nZ,OAnS-4AbFHY:?rP9[&@R?]mlo7EL7Nu%M7J,eE<nU)$W`t^HL,R[FU"Wff\97l-Eb>>3SbRJ9=;D;)6P7pS`)`RX4JWae2=Trr7nD3+POYZ&;)_V[O"t<e]fh7o:@Htdk+c!%KctG;]V_N0lrFrpo[:8o[<.<s-qZlPgO^&jn7+VC-&+X0CeI`[20K1H2KVUA'h](EF;FDPI#Abr2;e,O)qF%S*;/'&2D*h'YeIH9%b?k.tj'2*E))G3KkBW%1>hon7\M5)D`C9M.:#+%Ui68]EL,aYl7ob:`ogC<qd@Fou@u#(ZIg.:N\/r7#L2tD[JkrL9+r!b^n4Maq%grCAtP]9Ek13/5?cW[Z0F7J9LmV?)!U#B8I1m!r3't/C`9?)aIB/[e^)/Y"rF;s_-LspBX(b89dCX119@N+8^0b:(IQif':be[C.%k(*pSZQRH0*/nH<%VT<\hX?2U=cC8:/4_QO&#,JZK<\+o!Eh2?JIEE;5Rn[<TS\VQ^M>Ue?lUq65_b4X&51"_N$2[@a<>%/ABC2D%o#R1&c",&tDTS7NZ<LWNABC2@Z=M/]))C?)//`LoQAg)36cLZj-=b?iQAmmIbJlY@I8(S"2WfN@)tQ=PNB%Qn`Z1(O@ihRs>_\Q)%3?Uu84HQ7H%`m'Q$ZbHu$ds.@"'I\IJ.*Ii5j@<mMaPNIOJ-/*8CK:0A*B9^13C_BBfbBc$lsCSL5pPPmGmerXU#*4SCpcIrkfWU%\JSCr7`.HKd>rVRqV++K,*m\?[A>@Z4A<&<_)QqBf.bO)7&>C^'rS.O()&Z;-)NCm9'lSW>#[tCc,L]9!G]^Aor27<i?(8*:je/:%q#j@\$23N]a-a4]h"nGSUnD\Yn,G39lIUNJE43p%2J^2ELFIQ(R%8N!nLG1uTTWW/GfL@]W%ug/L+VRt0u(+5XB+d9QWt>o'l*Yb%mB\t[j#lY>GJF0=n,CeZhu8u2^\bp@^I-oX_q.-PktPD6PP2/m,\UKu2W11;9=$7Q"S%U2689<IE1o0c%Z`6s(;HMeZo@J#*\7@=%=_5Q]!)&^('@0;-e3[nc@YWsoq\Y5'3S<I9>lHb&'=?rT8&XEr47h^^:bW`!8==+=$KgLlG&QgNSj(a0r3sFdpT%[$rVAbYm^muF%mFVC$gE1=BGJF")5CEFMDu]?_YQ+P"gE5;NnZQ="mr)RIrpDkn1Z/08^V'L7LN!3MB79[Jf0=]`0>)m@%f!5VolpH'^V9T[H!fS5~>%AI9_PrivateDataEnd