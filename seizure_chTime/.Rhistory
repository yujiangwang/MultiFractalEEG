"Study 021",
"Study 023",
"Study 026",
"Study 004-2",
"Study 016",
"Study 029",
"Study 020",
"Study 019",
"Study 022",
"Study 033"))
MFdfBP$patName <- factor(MFdfBP$patName,
levels = c("pat_1",
"pat_2",
"pat_3",
"pat_4",
"pat_5",
"pat_6",
"pat_7",
"pat_8",
"pat_9",
"pat_10",
"pat_11",
"pat_12"),
labels = c("Study 028",
"Study 038",
"Study 021",
"Study 023",
"Study 026",
"Study 004-2",
"Study 016",
"Study 029",
"Study 020",
"Study 019",
"Study 022",
"Study 033"))
LLdf$patName <- factor(LLdf$patName,
levels = c("pat_1",
"pat_2",
"pat_3",
"pat_4",
"pat_5",
"pat_6",
"pat_7",
"pat_8",
"pat_9",
"pat_10",
"pat_11",
"pat_12"),
labels = c("Study 028",
"Study 038",
"Study 021",
"Study 023",
"Study 026",
"Study 004-2",
"Study 016",
"Study 029",
"Study 020",
"Study 019",
"Study 022",
"Study 033"))
LLdfBP$patName <- factor(LLdfBP$patName,
levels = c("pat_1",
"pat_2",
"pat_3",
"pat_4",
"pat_5",
"pat_6",
"pat_7",
"pat_8",
"pat_9",
"pat_10",
"pat_11",
"pat_12"),
labels = c("Study 028",
"Study 038",
"Study 021",
"Study 023",
"Study 026",
"Study 004-2",
"Study 016",
"Study 029",
"Study 020",
"Study 019",
"Study 022",
"Study 033"))
sRate500 <- c("Study 038", "Study 021", "Study 023", "Study 004-2", "Study 022", "Study 033")
sRate499 <- c("Study 028", "Study 026", "Study 016", "Study 029", "Study 020", "Study 019")
MFdf$time[MFdf$patName %in% sRate500] <- MFdf$time[MFdf$patName %in% sRate500]*(1024/500)
MFdf$szDur[MFdf$patName %in% sRate500] <- MFdf$szDur[MFdf$patName %in% sRate500]*(1024/500)
MFdf$time[MFdf$patName %in% sRate499] <- MFdf$time[MFdf$patName %in% sRate499]*(1024/499.907)
MFdf$szDur[MFdf$patName %in% sRate499] <- MFdf$szDur[MFdf$patName %in% sRate499]*(1024/499.907)
MFdfBP$time[MFdf$patName %in% sRate500] <- MFdfBP$time[MFdfBP$patName %in% sRate500]*(1024/500)
MFdfBP$szDur[MFdf$patName %in% sRate500] <- MFdfBP$szDur[MFdfBP$patName %in% sRate500]*(1024/500)
MFdfBP$time[MFdf$patName %in% sRate499] <- MFdfBP$time[MFdfBP$patName %in% sRate499]*(1024/499.907)
MFdfBP$szDur[MFdf$patName %in% sRate499] <- MFdfBP$szDur[MFdfBP$patName %in% sRate499]*(1024/499.907)
LLdf$time[LLdf$patName %in% sRate500] <- LLdf$time[LLdf$patName %in% sRate500]*(1024/500)
LLdf$szDur[LLdf$patName %in% sRate500] <- LLdf$szDur[LLdf$patName %in% sRate500]*(1024/500)
LLdf$time[LLdf$patName %in% sRate499] <- LLdf$time[LLdf$patName %in% sRate499]*(1024/499.907)
LLdf$szDur[LLdf$patName %in% sRate499] <- LLdf$szDur[LLdf$patName %in% sRate499]*(1024/499.907)
LLdfBP$time[LLdf$patName %in% sRate500] <- LLdfBP$time[LLdfBP$patName %in% sRate500]*(1024/500)
LLdfBP$szDur[LLdf$patName %in% sRate500] <- LLdfBP$szDur[LLdfBP$patName %in% sRate500]*(1024/500)
LLdfBP$time[LLdf$patName %in% sRate499] <- LLdfBP$time[LLdfBP$patName %in% sRate499]*(1024/499.907)
LLdfBP$szDur[LLdf$patName %in% sRate499] <- LLdfBP$szDur[LLdfBP$patName %in% sRate499]*(1024/499.907)
data <- data.frame()
for (i in 1:length(szPCs$chNames)){
c1 <- szPCs$MFcoeff[[i]][[1]][,1]
c2 <- szPCs$MFcoeff[[i]][[1]][,2]
c3 <- szPCs$MFcoeff[[i]][[1]][,3]
c <- szPCs$chNames[[i]][[1]][1:length(szPCs$coeff[[i]][[1]][,1])]
d <- unlist(do.call(cbind, c),
recursive = TRUE,
use.names = TRUE)
z <- szPCs$resect[[i]][[1]]
dataTemp <- data.frame(cbind(d,
c1,
c2,
c3,
z,
rep(szPCs$id[[i]][[1]],
length(szPCs$resect[[i]][[1]]))))
names(dataTemp) <- c("ch","x","y","z","col","pat")
data <- rbind(data,dataTemp)
}
data$x <- as.numeric(as.character(data$x))
data$y <- as.numeric(as.character(data$y))
data$z <- as.numeric(as.character(data$z))
dataPlot <- data %>%
group_by(pat) %>%
ungroup() %>%
mutate(order = sort(row_number(), decreasing = TRUE))
dataPlot$pat <- factor(dataPlot$pat,
levels = c("Study 028",
"Study 038",
"Study 021",
"Study 023",
"Study 026",
"Study 004-2",
"Study 016",
"Study 029",
"Study 020",
"Study 019",
"Study 022",
"Study 033"),
labels = c("P2",
"P6",
"P7",
"P8",
"P9",
"P10",
"P11",
"P12",
"P13",
"P14",
"P15",
"P16"))
# Plot
ggplot(dataPlot, aes(x = x, y = y)) +
geom_point(aes(colour = factor(col))) +
scale_fill_brewer(palette = "Set1",
direction = -1) +
theme_bw() +
facet_wrap(~pat, scales="free") +
xlab("Electrodes") +
ylab("Loadings") +
guides(fill = FALSE)
ggplot(dataPlot, aes(x = x, y = z)) +
geom_point(aes(colour = factor(col))) +
scale_fill_brewer(palette = "Set1",
direction = -1) +
theme_bw() +
facet_wrap(~pat, scales="free") +
xlab("Electrodes") +
ylab("Loadings") +
guides(fill = FALSE)
ggplot(dataPlot, aes(x = y, y = z)) +
geom_point(aes(colour = factor(col))) +
scale_fill_brewer(palette = "Set1",
direction = -1) +
theme_bw() +
facet_wrap(~pat, scales="free") +
xlab("Electrodes") +
ylab("Loadings") +
guides(fill = FALSE)
library(plotly)
axx <- list(
gridcolor = 'rgb(255, 255, 255)',
zerolinecolor = 'rgb(255, 255, 255)',
showbackground = TRUE,
backgroundcolor = 'rgb(235,235,235)',
range = c(-0.2,0.4),
title = "PC1"
)
axy <- list(
gridcolor = 'rgb(255, 255, 255)',
zerolinecolor = 'rgb(255, 255, 255)',
showbackground = TRUE,
backgroundcolor = 'rgb(235,235,235)',
range = c(-0.2,0.4),
title = "PC2"
)
axz <- list(
gridcolor = 'rgb(255, 255, 255)',
zerolinecolor = 'rgb(255, 255, 255)',
showbackground = TRUE,
backgroundcolor = 'rgb(235,235,235)',
range = c(-0.2,0.4),
title = "PC3"
)
pal <- c("#67001f","#053061")
pal <- setNames(pal, c(1, 0))
p1 <- plot_ly(dataPlot, x = ~x[dataPlot$pat == "P2"],
y = ~y[dataPlot$pat == "P2"],
z = ~z[dataPlot$pat == "P2"],
scene='scene1',
color = ~col[dataPlot$pat == "P2"],
colors = pal)
p2 <- plot_ly(dataPlot, x = ~x[dataPlot$pat == "P6"],
y = ~y[dataPlot$pat == "P6"],
z = ~z[dataPlot$pat == "P6"],
scene='scene2',
color = ~col[dataPlot$pat == "P6"],
colors = pal)
p3 <- plot_ly(dataPlot, x = ~x[dataPlot$pat == "P7"],
y = ~y[dataPlot$pat == "P7"],
z = ~z[dataPlot$pat == "P7"],
scene='scene3',
color = ~col[dataPlot$pat == "P7"],
colors = pal)
p4 <- plot_ly(dataPlot, x = ~x[dataPlot$pat == "P8"],
y = ~y[dataPlot$pat == "P8"],
z = ~z[dataPlot$pat == "P8"],
scene='scene4',
color = ~col[dataPlot$pat == "P8"],
colors = pal)
p5 <- plot_ly(dataPlot, x = ~x[dataPlot$pat == "P9"],
y = ~y[dataPlot$pat == "P9"],
z = ~z[dataPlot$pat == "P9"],
scene='scene5',
color = ~col[dataPlot$pat == "P9"],
colors = pal)
p6 <- plot_ly(dataPlot, x = ~x[dataPlot$pat == "P10"],
y = ~y[dataPlot$pat == "P10"],
z = ~z[dataPlot$pat == "P10"],
scene='scene6',
color = ~col[dataPlot$pat == "P10"],
colors = pal)
p7 <- plot_ly(dataPlot, x = ~x[dataPlot$pat == "P11"],
y = ~y[dataPlot$pat == "P11"],
z = ~z[dataPlot$pat == "P11"],
scene='scene7',
color = ~col[dataPlot$pat == "P11"],
colors = pal)
p8 <- plot_ly(dataPlot, x = ~x[dataPlot$pat == "P12"],
y = ~y[dataPlot$pat == "P12"],
z = ~z[dataPlot$pat == "P12"],
scene='scene8',
color = ~col[dataPlot$pat == "P12"],
colors = pal)
p9 <- plot_ly(dataPlot, x = ~x[dataPlot$pat == "P13"],
y = ~y[dataPlot$pat == "P13"],
z = ~z[dataPlot$pat == "P13"],
scene='scene9',
color = ~col[dataPlot$pat == "P13"],
colors = pal)
p10 <- plot_ly(dataPlot, x = ~x[dataPlot$pat == "P14"],
y = ~y[dataPlot$pat == "P14"],
z = ~z[dataPlot$pat == "P14"],
scene='scene10',
color = ~col[dataPlot$pat == "P14"],
colors = pal)
p11 <- plot_ly(dataPlot, x = ~x[dataPlot$pat == "P15"],
y = ~y[dataPlot$pat == "P15"],
z = ~z[dataPlot$pat == "P15"],
scene='scene11',
color = ~col[dataPlot$pat == "P15"],
colors = pal)
p12 <- plot_ly(dataPlot, x = ~x[dataPlot$pat == "P16"],
y = ~y[dataPlot$pat == "P16"],
z = ~z[dataPlot$pat == "P16"],
scene='scene12',
color = ~col[dataPlot$pat == "P16"],
colors = pal)
p <- subplot(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12) %>%
layout(title = "",
scene = list(domain=list(x=c(0,0.25),y=c(0.667,1)),
xaxis=axx, yaxis=axy, zaxis=axz,
aspectmode='cube'),
scene2 = list(domain=list(x=c(0.26,0.5),y=c(0.667,1)),
xaxis=axx, yaxis=axy, zaxis=axz,
aspectmode='cube'),
scene3 = list(domain=list(x=c(0.51,0.75),y=c(0.667,1)),
xaxis=axx, yaxis=axy, zaxis=axz,
aspectmode='cube'),
scene4 = list(domain=list(x=c(0.76,1),y=c(0.667,1)),
xaxis=axx, yaxis=axy, zaxis=axz,
aspectmode='cube'),
scene5 = list(domain=list(x=c(0,0.25),y=c(0.334,0.666)),
xaxis=axx, yaxis=axy, zaxis=axz,
aspectmode='cube'),
scene6 = list(domain=list(x=c(0.26,0.5),y=c(0.334,0.666)),
xaxis=axx, yaxis=axy, zaxis=axz,
aspectmode='cube'),
scene7 = list(domain=list(x=c(0.51,0.75),y=c(0.334,0.666)),
xaxis=axx, yaxis=axy, zaxis=axz,
aspectmode='cube'),
scene8 = list(domain=list(x=c(0.76,1),y=c(0.334,0.666)),
xaxis=axx, yaxis=axy, zaxis=axz,
aspectmode='cube'),
scene9 = list(domain=list(x=c(0,0.25),y=c(0,0.333)),
xaxis=axx, yaxis=axy, zaxis=axz,
aspectmode='cube'),
scene10 = list(domain=list(x=c(0.26,0.5),y=c(0,0.333)),
xaxis=axx, yaxis=axy, zaxis=axz,
aspectmode='cube'),
scene11 = list(domain=list(x=c(0.51,0.75),y=c(0,0.333)),
xaxis=axx, yaxis=axy, zaxis=axz,
aspectmode='cube'),
showlegend = FALSE,
scene12 = list(domain=list(x=c(0.76,1),y=c(0,0.333)),
xaxis=axx, yaxis=axy, zaxis=axz,
aspectmode='cube'))
p
pnames <- c("Study 028",
"Study 038",
"Study 021",
"Study 023",
"Study 026",
"Study 004-2",
"Study 016",
"Study 029",
"Study 020",
"Study 019",
"Study 022",
"Study 033")
surOut <- c("Unknown",
"Good",
"Good",
"Good",
"Good",
"Bad",
"Bad",
"Bad",
"Bad",
"Bad",
"Bad",
"Bad")
sinhaNum <- c("P2",
"P6",
"P7",
"P8",
"P9",
"P10",
"P11",
"P12",
"P13",
"P14",
"P15",
"P16")
eDistDF <- data_frame(pnames,sinhaNum,surOut)
a <- szPCs$allSet[[2]][[1]]
b <- kmeans(a[,1:3], 2)
p
citation(R.matlab)
citation("R.matlab")
citation("Rcolorbrewer")
citation("RColorBrewer")
citation()
citation("PerformanceAnalytics")
setwd("~/Documents/GitHub/MultiFractalEEG/seizure_chTime")
rm(list = ls())
library(ggplot2)
library(RColorBrewer)
swSpotDataFrame <- dget("swSpotDataFrame.R")
swSpot <- swSpotDataFrame("effSize_I001_P005_D01_ch_1.mat","1")
temp <-swSpotDataFrame("effSize_iI001_P005_D01_ch_1.mat","1")
swSpot <- rbind(swSpot, temp)
temp <-swSpotDataFrame("effSize_i2I001_P005_D01_ch_1.mat","1")
swSpot <- rbind(swSpot, temp)
temp <- swSpotDataFrame(paste("effSize_I001_P005_D01_ch_2.mat",
sep=""),"2")
swSpot <- rbind(swSpot, temp)
temp <-swSpotDataFrame(paste("effSize_iI001_P005_D01_ch_2.mat",
sep=""),"2")
swSpot <- rbind(swSpot, temp)
temp <-swSpotDataFrame(paste("effSize_i2I001_P005_D01_ch_2.mat",
sep=""),"2")
swSpot <- rbind(swSpot, temp)
temp <- swSpotDataFrame(paste("effSize_I001_P005_D01_ch_3.mat",
sep=""),"3")
swSpot <- rbind(swSpot, temp)
temp <-swSpotDataFrame(paste("effSize_iI001_P005_D01_ch_3.mat",
sep=""),"3")
swSpot <- rbind(swSpot, temp)
temp <-swSpotDataFrame(paste("effSize_i2I001_P005_D01_ch_3.mat",
sep=""),"3")
swSpot <- rbind(swSpot, temp)
ggplot(data = swSpot, aes(x = timeAnal, y = values, color = patName)) +
geom_point(data = swSpot, aes(shape = as.factor(sampRate)), size = 3) +
scale_shape_manual(values=1:nlevels(as.factor(swSpot$sampRate))) +
ylim(c(-0.5,2.5)) + xlim(c(0, 4.5)) + theme_bw(base_size = 20) +
theme(panel.border = element_rect(size = 2)) +
theme(legend.background = element_rect(fill="white",
size=1, linetype="solid",
colour ="black")) +
geom_smooth(se=FALSE, size = 2) +
scale_color_manual(values = c("#ca0020", "#92c5de", "#0571b0")) +
xlab('Time (s)') + ylab('Effect Size') +
labs(color = "Channel") + labs(shape = "Sampling Rate (Hz)") +
theme(legend.title = element_text(size = 16),
legend.text = element_text(size = 14))
View(swSpot)
ggplot(data = swSpot, aes(x = timeAnal, y = sampRate, color = patName)) +
geom_point(data = swSpot, aes(shape = as.factor(sampRate)), size = 3) +
scale_shape_manual(values=1:nlevels(as.factor(swSpot$sampRate))) +
ylim(c(-0.5,2.5)) + xlim(c(0, 4.5)) + theme_bw(base_size = 20) +
theme(panel.border = element_rect(size = 2)) +
theme(legend.background = element_rect(fill="white",
size=1, linetype="solid",
colour ="black"))
ggplot(data = swSpot, aes(x = timeAnal, y = sampRate, color = patName)) +
geom_point(data = swSpot, aes(shape = as.factor(sampRate)), size = 3) +
scale_shape_manual(values=1:nlevels(as.factor(swSpot$sampRate))) +
ylim(c(-0.5,2.5)) +
#xlim(c(0, 4.5)) +
theme_bw(base_size = 20) +
theme(panel.border = element_rect(size = 2)) +
theme(legend.background = element_rect(fill="white",
size=1, linetype="solid",
colour ="black"))
ggplot(data = swSpot, aes(x = sampRate, y = values, color = patName)) +
geom_point(data = swSpot, aes(shape = as.factor(sampRate)), size = 3) +
scale_shape_manual(values=1:nlevels(as.factor(swSpot$sampRate))) +
ylim(c(-0.5,2.5)) +
#xlim(c(0, 4.5)) +
theme_bw(base_size = 20) +
theme(panel.border = element_rect(size = 2)) +
theme(legend.background = element_rect(fill="white",
size=1, linetype="solid",
colour ="black"))
ggplot(data = swSpot, aes(x = sampRate, y = values, color = patName)) +
geom_violin()
ggplot(data = swSpot, aes(x = as.factor(sampRate), y = values, color = patName)) +
geom_violin()
ggplot(data = swSpot, aes(x = as.factor(sampRate), y = values, color = patName)) +
geom_violin()
ggplot(data = swSpot, aes(x = as.factor(sampRate), y = values, color = patName)) +
geom_violin() +
ylim(c(-0.5,2.5))
ggplot(data = swSpot, aes(x = as.factor(sampRate), y = values)) +
geom_violin() +
ylim(c(-0.5,2.5))
ggplot(data = swSpot, aes(x = as.factor(sampRate), y = values)) +
geom_violin() +
geom_jitter() +
ylim(c(-0.5,2.5))
ggplot(data = swSpot, aes(x = as.factor(sampRate), y = values)) +
geom_violin(trim = FALSE) +
geom_jitter(aes(colour = ID,
shape = segment,
size = I(2.5))) +
ylim(c(-0.5,2.5))
ggplot(data = swSpot, aes(x = as.factor(sampRate), y = values)) +
geom_violin(trim = FALSE) +
geom_jitter(aes(colour = timeAnal,
shape = patName,
size = I(2.5))) +
ylim(c(-0.5,2.5))
ggplot(data = swSpot, aes(x = as.factor(sampRate), y = values)) +
geom_violin(trim = FALSE) +
geom_jitter(aes(colour = timeAnal,
shape = patName,
size = I(2.5))) +
scale_colour_viridis_c() +
ylim(c(-0.5,2.5))
ggplot(data = swSpot, aes(x = as.factor(sampRate), y = values)) +
geom_violin(trim = FALSE) +
geom_jitter(aes(colour = log(timeAnal),
shape = patName,
size = I(2.5))) +
scale_colour_viridis_c() +
ylim(c(-0.5,2.5))
ggplot(data = swSpot, aes(x = as.factor(sampRate), y = values)) +
geom_violin(trim = FALSE) +
geom_jitter(aes(colour = log(timeAnal),
shape = patName,
size = I(1.5))) +
scale_colour_viridis_c() +
ylim(c(-0.5,2.5))
ggplot(data = swSpot, aes(x = as.factor(sampRate), y = values)) +
geom_violin(trim = FALSE) +
geom_jitter(aes(colour = log(timeAnal),
shape = patName,
size = I(1.5))) +
scale_colour_viridis_c() +
geom_boxplot(width = 0.05,
outlier.shape = NA) +
theme_bw(base_size = 20) +
theme(panel.border = element_rect(size = 2)) +
ylim(c(-0.5,2.5))
ggplot(data = swSpot, aes(x = as.factor(sampRate), y = values)) +
geom_violin(trim = FALSE) +
geom_jitter(aes(colour = log(timeAnal),
shape = patName,
size = I(1.5))) +
scale_colour_viridis_c() +
geom_boxplot(width = 0.05,
outlier.shape = NA) +
theme_bw(base_size = 20) +
theme(panel.border = element_rect(size = 2)) +
ylim(c(-0.5,2.5)) +
xlab("Sampling Frequency (Hz)") +
ylab("Cohen's D Effect Size")
