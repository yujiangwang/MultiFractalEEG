%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: sup_pModel.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: Lucas França
%%CreationDate: 12/12/2017
%%BoundingBox: 0 0 1122 865
%%HiResBoundingBox: 0 0 1121.0832 864.5372
%%CropBox: 0 0 1121.0832 864.5372
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.1 x249 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 100 8%%BeginData: 13516 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FFFD04A8FD3DFF7D7DA8A8FD3AFF52FF2752A87DFD3BFF7D522752%7DA8FD39FF7DA85252FF7DFD3BFF7DA852527DA8FD39FF527DA87D52A8FD%3BFF7D527D7D7DA8FD3AFFA8FFFFA8FD0EFF525252764B7D7D7D52FD067D%A87D7D52527DA87DA8527D52527DFD11FFA8FFFFFFA8FD09FF5252527D4C%777D7D527D7DA87D7D52A87D7D52527D7D527D7D7D777DA8A8A1A1277D52%52A8FD14FFA8FFA8FFA8FFA8FFA8FFA87D525227FD05527D5227FD04527D%5252277D52527D525252277DFFFFA8FFA8FFA8FFA8FFA8FD0DFFA8FFA8FF%A8FFA87DFD05527D52527D5227FD04527D5252277D525227FD04527D527D%7DFD0452A8FFFFA8FFA8FD16FFA8FD57FFA8FFFFFFA8FD07FFA8FFA8FFFF%FFA8FD0AFFFD05A8FD25FFA8FD0BFFA8FD09FFFD05A8FD1DFFA1CAA1A852%527D52527D7DFFFFFFA8FD05FFA8FD0AFF7D7D7DFD25FFAFFD09FFAFFD0D%FF7D7D7DFD1DFFA8FFCAFFA87D7DA87DA87DFD05FFA8FFFFFFA8FD0CFFA8%FFA8FD19FFA8FD09FFA8FFAFAFA8FD06FFAFA8FFA8FD0BFFA8FFA8FD1DFF%A8AFA9A9FD047D527D7DA8FD2FFFAFAFFD0CFFA9FD05FFA8FFAFAFA8FD2B%FFA8FFFFFFA85252A1527D527DFFFFFFA8A8FFFFFFA8FD0AFFFD05A8FD19%FFA8FFFFFFA8FD05FFA9FFA8FFA9FFFFAFA8FFA8FFA8AFA8FD09FFFD05A8%FD1DFF84A984A87DFD0452A8FD0552FD04FFA8A8FD0AFF7D7D7DFD19FFA8%AFA8A9A9AF84AFA9AF84AFA8A984A9A8AF84A9A8FFA9FF84FD0BFF7D7D7D%FD1DFFA8AFA8AFA8FFFD09A8FFA8FFFFFFA8FD0CFFA8FFA8FD18FF84A8FF%A9AFA8FFA9FFA8FFFFFFA9FFA9FFA8FFFFFFAFFFFFFFA8FD0BFFA8FFA8FD%1DFFCAFD13FFA8FD26FF84FFFFFFA9FFFFFFA9FD07FFA9FD47FFA8FD0AFF%A8FFFFFFA8FD17FFA8A9FD18FFA8FD09FFA8FFFFFFA8FD31FFA8FD0AFF7D%A87DFD19FFA8FD23FF7DA87DFD31FFA8FD0AFFA8A87EA8A8FD17FFA9A9FD%18FFA8FD09FFA8A87EA8A8FD58FF84FD57FFA8FD0CFFA8FFA8FD17FFA8A9%FD18FFA8FD0BFFA8FFA8FD31FFA8FD0AFF7DFF7DFD19FFA8FD23FF7DFF7D%FD31FFA8FD0BFFA87DA8A8FD17FFA9A9FD08FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FD0AFFA87DA8A8FD31FFA8FD26FFA8FD09FFCAFFFF7D277D%7D5252A8FD04FFA8FD3FFFA8FD08FFA87DA8FFFFFFA8FD17FFA8A9FD08FF%A8CAA2FF7D527DA87D7D7DFFFFFFA8FFA8FD07FFA87DA8FFFFFFA8FD31FF%A8FD08FF7DFFFFFFA8FD19FFA9FD0CFFA8527DA87D52A8FD04FFA8FD09FF%7DFFFFFFA8FD31FFA8FD08FF7D7DA8FFA87DA8FD17FFA8AFFD08FFA8FFA9%FF7D527DA8527D52FD04FFA8A8FD07FF7D52A8FFA87DA8FD3AFF7DFFFFFF%A8FD18FFAFA8FD09FFAFFFAFA87D7D7DA8A8A87DA87DA8A8FD08FFA87DFF%FFFFA8FD31FFA8FD0EFFA8FD17FFA8AFFD08FFA8AFA8AF7D7D527D527D7D%52527D7DA8A8FD0DFFA8FD31FFA8FD0AFFA8FFA8FD0DFFA9FD0AFFAFA9FD%09FFCFFFA8FD0BFFA8FD0BFFA8FFA8FD2DFFA1CBCBFFA8FD0AFFA87D527D%A8FD05FFAFFD05FFA9FFA8FD05FFA8FFA8AF84AFFD18FFA8FD09FFA87D52%7DA8CAA2FD10FFCAA8FD17FFA1A1A1CAFFA8A8FD0CFFA8A984A9A8AF8485%A8AFA8A9A8AF84A984AFA8A984AF84AFA8A9FD26FFA8FFA1C4FD10FFA1C3%FD14FFA1FFFFCAA1C3A1FFA8FD0EFFA8FFA9AFA8FFA8AFA8AFA9FFA8FFA9%AFA8A2A8FFA8FFFFFFAFFD19FFA8FD0DFFA8C39BFD05FFA8FD0AFFA19BFD%13FFA89BFFFFA1A19AC3FFFFA8FD0AFFA8FFA8FD11FFA2FD2BFFA8FFA8FF%A1C3FD05FFC3A1CACAFD07FFA1CA9BFFA8CAFFC3FD0BFFCACAFF9AFFFFCA%A1C3A1FFA8FD0AFFA87D527DA8FD09FFCAFD06FFC3A8FFCAFD19FFCAFFFF%FFA8FD09FFA87D527DA8C3A1FFA8FFFFCA9BCA9BA1FD06FFA1C3A19ACAA1%9BFF9ACAFD0AFF9AC4A89BCAFFA1C49ACAA89BFD0BFFA8FD05FFA1FD06FF%CACAFD05FFA1FFCAC4A1FD17FFA8CACAFD0DFFA8FFFFFFA1CAA1A1FFFFA1%FFA1CAA2FD04FFCAA1CAFFC39ACAA2CAA1CAA1FD07FFCAC4CAC3CAFF9AFF%CACAA1C3CACA9AFD0EFFA8FFA8A1A8FD05FFA1CAFD05FFA1A8CBA1A1A8FD%15FFA8C3A1CAFFFFA8FD0DFFA1C49BA1A1FFA8C4FFA1A1CAA8FFFFC4A1A1%A8FFA1C494FFA89BA8C4A8FD05FFA8C4A1CA9BCAA8A1A8CAA8A19BCAA1A1%A8FD10FFA2CAFD04FFA8FFCAFD05FFA1FFCAFFFFCAFD10FFCAFFFFCACAFF%A1CAA2FD10FFA1A1FD04CAFFA1FFA1FFCAFFFFFFA1FD06FFC3FFFF94FFCA%C3CAFFFFFFA1C3CAFF9BFFCACAA2CACAFFA1CACAC3A8FD0AFFA87D7D7DA8%FFA8CAA8FFFFFFA1A1A8CACAFFFFFFCACAA8CACAFFA1FD0FFFA1C4FFCAA1%CACAA1A1CAFFFFA8FD09FFA87D7D7DA8CAA8FFA1CAA8CAFFFFFFCAA2FFA8%CAFD06FFCAFFFFC3CAFFA1A19AA19BFFFFFFCA9AFFCAA1FFA1A1FFCAA8FF%CAAFA8FD0AFF7DA87DFFFFC3CAFFCAFFA1CAA2FD04CAC4CAFFA2CAA8FFFF%CACAFD0EFFCAA1FFA1CAA1FFA1CAA1C3FD0CFF7DA87DFD05FFA1CAA8FFFF%FFCACAA2C3CAFD0FFFA8FD05FFA1FFA1C3FFFFCAFD05FFA8FD0EFFA8CAA1%FFA8CACACAFFC4A8CB9BC4A1A1A1CAA1CAFFFFA8CAA1CAFD06FFA8A1CAFF%FFFFA2CAA2C4A1CAA8C3A1A19BFFA8FD0DFFA8FD04FFCA93FD05FF9A9B94%FD18FFCA70FD09FFA8FD0CFFA8CBCAFFFFFFCAFFA8FFA2CBCBC3A1FD06CA%FFFFFFA1CAA1CACACBFFCACAFFCACACBFFFFCACBCAA1CAA8FFA1CAA8CACB%FD0DFFA8FD06FFCAFD05FFCACAFD1AFFCAFD13FFA87D7D7DA1C4FFFFFFCA%A2CAFFFFFFCAA1C4A8FFA1CAA1CAFFFFFFC3A8FFA2A1A1FFA1C4A1FFA8A1%A1FFA2FF9BCAA1CAA1C4A1FFA8CAA8FD09FFA87D7D7DA8FD0BFFA9FFAFFF%FFFFAFFFFFFFAFFFA9FD24FF7DA8A8CAA1FFFFFFCAC3FD04FFCBCAFD04FF%CACAFD07FFCBA1CAA1FFCACAFFCAA2CACAFFFFCAA2CACACAA2CAFFFF9AFD%0BFF7DA8A8A9848584857E8584A97E8584A97E858485848584857E858484%84AFA9AFA8AFA9AFA9FFA9AFA8AFA9AFA9FFA9AFA8FFA8A984FD0EFFA8CA%A8FFA8FFA1FFA8FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFFFFFA8C4FFA1A8CA%A8FFA1CAA8A1A8FFFFFFA8FFA1CAA1FFA8A1A8FD0DFFA8AFA8FFA8AFA8A9%A8AFA8FFA8AFA8AFA8A9A8FFA8AFA8AFA8A87EA884847E847E847E847E84%7E847E845A847E845A848484A8FD0EFFA8FFA8FFA8FFFFFFA8FFA8FFA8FF%FFFFA8FFA8FFA8FFFFFFA8FFA8FFA8FFFFFFA8FFA8FFA8FFFFFFA8FFA8FF%CAFFFFFFA8FD0FFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFCAFFFFFFCFFFFFFFA8FD07FFA8FD07FFCAFD14FFA8A8A8FD05FFA8A8%A8FD05FF7DA8A8FD05FF7DA8A8FD04FFA87DA8A8FD04FFFD04A8FD15FFA8%A8A8FD05FFA8A8A8FD05FF7DA8A8FD05FF7DA8A8FD04FFA87D7EA8FD04FF%FD04A8FD15FFA852A8FD05FF7D52A8FD05FF7D52A8FD05FF5252FD05FF7D%7D52A8FD04FF7D7D52A8FD15FFA852A8FD05FF7D52A8FD05FF7D52A8FD04%FFA85252FD05FF7D7D52A8FD04FF7D7D52A8FD15FFA8FFA8FD07FFA8FFFF%FFA8A8A8FD05FFA8FFA8FFA8FD05FFA8FFA8FD05FFA8FFA8FD15FFA8FFA8%FD07FFA8FFFFFFA8A8A8FD05FFA8FFA8FFA8FD05FFA8FFA8FD05FFA8FFA8%FD08FFA87D7DA8FD18FF7D7D52A87DA87D7DA8FD1CFF7D52A8A8FD17FF7D%7D527D7DA87D7DA8FD1AFF7D7D7DA852A8FD17FFA87D7D7DA8A87D7DA8FD%1BFF7D52FD047DFD16FFA87D7D7DA8A87D7DA8FD1AFF7D7DA8A8A87DFD3B%FF7DA87D7D7DA8FD39FF52A852A87DA8FD0CFFFD04A87DA8A8FFA8A8A8FF%A8FFA8FFA8FFA8A8A8FFA8FFA8A8A8FFA8A8FD11FF7D527D7DA87DFD07FF%A8FD32FFA8FFFFA8FD0DFFA8FD0527FD04527D27FD04527D5252272752A8%527D275252277DFD11FFA8FFFFFFA8FD09FFFD05527D7D7D77A8FD057DA8%527D7D767DA8527D7D7D52527DA87DA8527D52527DFD14FFA8FFA8FFA8FF%A8FFA8FFFD04A87DFD06A87D7DFD05A87D7D7DA87D7DFD04A87DA8A8FFA8%FFA8FFA8FFA8FD11FFAFFFFFFFA87D5252527DFD04527D27275252527D52%5227277D7D52F8FD04527D52527D7D525227A1FFFFA8FD18FFA8FD1BFFA8%FFAFFFA8FFA8FFA8FFA8A8A8FFA8FD0FFFA2CAA8FFA8FFA8FD07FFA8FFA8%FD05FFA8FFA8FD05FFA8FFFFFFA8FD07FFA8FFA8FFA8FFA8FD0AFFA8FFFF%FFA8FD21FFA1CAA1CA77527D7D527DA8FFFFFFA8A8FD0AFFA8FFFFFFA8CA%A1FD10FFCAA8FD1DFFA8FD0AFF7DA87DFD26FF7D52A87D5252A8FD04FFA8%FD0BFF7DA87DFFA1CAFD10FFA1C4FD1CFFA8FD0AFFFD05A8FD10FFCBCAFD%0FFFA8FFA9FF52527D7D275252FD04FFA8FD0AFFFD04A8AEC3A1FD05FFA1%CAFD06FFCAFFFFA1A1CACAFFCAFD13FFA8FD24FFA1FD14FFA87DFFA8FFA8%A8FD04FFA8FD0FFFA1C3FD05FFA1A1FD06FFCAA8FFA1C3A1FFA2CAFFCAFD%11FFA1A2CACAFFA8FD0EFFA8FD10FFA1A8FD0FFF84AFA8AF7D7652524B7D%765252767DA8A8FD0DFFAFA19BFD04FFCBA1CAA1C3FD04FF9BA1FFA1A19A%CAC3A1FF9AFD11FF9BCAA1CAFFFFA8FD1EFFA1FD11FFA8FFA8FFFD0BA8FD%0FFFA1C4CAFFFFFFCACAA8CAA1FD04FFC3A1FFA1C49AFFA1C4FFBDFD10FF%CBC3CAC4CAFFA8FD0EFFA8FD09FFA8FD06FFA1A8FD0FFFCAFD0FFFA8FD0D%FFA8C3A19BA1FFFFCAA8C4A1C4CBFFFFFF9BA1A1C3A19AA8C4A1FF94FD09%FFCBFFFFFFCAC4FFFFA1CA9ACAFFFFA8FD0CFFA8FD0AFFC3CAFD05FFA1FD%18FFCBFD06FFA8FD0FFFA1C3A1CAFFFFA1FFA1CAA1FD04FFC3A1C3CACA9A%CAA1CACA9BCAFD08FFC3FD04FF9BFFCACAA8A1A1FFA8FD0CFF7D7DA8FFFF%CACAFD05FFA1CAFD04FFCBA1CAFD17FFA1CAFD05FFA8A8FD0BFFA8A8A8C4%9BA1A1FFCAC4A8A1A1CAA8FFFFFFA1A1A1FF9AA1A1CAA1CA9AFD08FFCA6F%FFFFFFA89AFFCBA1CA9AC4FFFFA8FD0BFFA8A8FFFFFFA1FD06FFCAA8FD05%FFA1FFCAFD16FFCACAFD05FFA8FD0CFFA87DFFA2C3A1CAFFFFA1FFA1CAA8%FFFFFF9BCA9BCAFFC3A1C3CACAA2C3CAFD07FFA8C3FD04FF9AFFCACAA1C3%A1FFA8FD0EFFA8FFFFA1CAFD05FFA1CAFD04FFCAC3FFCAA1C4FD14FFA1CA%FD12FFA8A8A1CA9ACAA1FFCAC4FFA1A1CAA8FFFF94A1C3A8FFA1CA9AFFA8%C3A1CAFD07FFCAA1CA9ACAA89BFFCAA8C49ACAFFCAFD11FFA1FD05FFCBCA%CAFD05FFA1FFCAC39BFD14FFCACAFD05FFA8FD0EFFA1A1FD04CAFFA1FF9A%CACACBFFFFA1FFCAFFFFCAA89AFFFF9ACAA1FD07FFA2CAA1CACAFF9AFFCA%FFA1C3CACA9AFD0EFFA8FFA8CAA8FD04FFCBA1CAFD04FFCAA1A8CAA8CAA8%FD13FFA1CAFD06FFA8FD0DFF76C3A1FFA1FFA8CAFFA1A2CAA8FFA8CAFD06%FF9AFFCA9AA8C4CAFFFFFFCAA1A8CAA89BA2CAA8A1A8CAA8A19ACAA1A8A8%FD10FFCACAFFFFFFCAA1CBCAFD05FFA1FFCAFFCBCAFD13FFCACAFD05FFA8%FD0EFFA1A1FFFFCACAFFA1FFA2FFCACAFFCBCAFD06FFCAFFFF9AFFA1FD05%FF94CBCAFF9AFFCACAA1FFCAFFA1C3A1CAAFFD0EFFA8FFA8CAA8FFFFFFA1%CAA8CBFD04FFCAC4A8CAFFFFA1FD05FFA8FD0DFFA1CAFFFFA1FFFFFFA8FD%0DFFA1C4FFFFA1CAA8CAFFFFFFCAA2FFA2CAFD08FFCA9ACACAA1FFFFFFA8%A19BCAFF9AA8CAA1CAA2CACBCAA1C3CAFFA8FD0AFF7DA87DFFFFCACACAFF%FFA1CAA2FFA8FD05FFA1CAA8FFFFCAFD05FFC4FD0DFFCAA2FFFFC3A2FFA8%FD0BFFA8FF7DFD04FFCACAFFA2FFFFFFCACAFFCAA8FD09FF9BFFFFC49ACA%FFCACAA1A1FFA1FFA1CACACAA1FFCACAFFFFA8FD08FF7DFFFD05A8FFA8FF%A1FFCACACAC3A8CAA8FFA1FFA8CAA1CAFFFFA1FFA8FFFFFF9BFD09FFA8CA%FFFFA1CAFFFFA1A1A1FFA8FD07FF7DA8A87D7D7DA8FFFFFFA8CAA8CAFFFF%FFCBA1CA9AFD09FFCBCACAFFFFFFA1CAA1FFA1C4FFFFFFCAA1FFA19AA8FF%CAFFFFA8A8FD07FFA852FD06FFCAFFFFCBFFA8FFA1FFCACAA2CACAFFCACA%CAFFFFCAFFCAA2FFFFC3FD04FFA1FD04FFCAA1CAFFCACAFFCACAA1CAFD09%FFA852FD09FFA1C3CAFFFFFFCACAA19AFD10FFA1CAFD06FFA1C3FFFFA1FD%0EFF7D52A8FFFFFFA8FFA2FFA8CAFFCAFFC3CACBA1C3CACAA1CAA1FFFFFF%A2FFA8CAFFFFA1FFFFFFA8C4FFC3A8FFA1A19BFFA8CAA1CAA8A1A1FD09FF%7D52A8FFFFFFA8FD05FF9ACAFD04FFA1C39AFD10FFA1A1FD07FF9AFD12FF%A8FD05FFA8FFFFFFA8FFCAFFA1FFCAC49BFFFFCAA8C4FD04FFCACAA8FFFF%C4CAFFFFCAA1FFA1CAFFCAA1CAA8CACACAA2CA9BCAA8FD09FF7DFD09FFCA%9AFD05FFC39BC4FD22FFA8FD0EFFA8CAA8FFFD04CAFFA1A8CAA1A1A8FFA1%CA9AFFFFFFA8CAA8CAA8FFA1CACAFFA8CACACAA2FFA2CAA8CAA8CAA1CAA8%A1A1A8A8FD0DFFA8FD05FF94FD05FF9BA1FD24FFA8FD0DFFA8A2FFFFFFA8%FFCAFFA1FFA8A8AFFFFFCAA8CAA9FFAFFFA8FFA8FFA8CAA2CAFFCAA8FFA8%CAA8CAFFFFA2FFA2CAA8CAA8CAA8FD14FFC3CAFD04FFCACAFD23FFA8FD0C%FF7DA87D7E84AFA8A87EA8A8A884A87DA984AF77A87DAFA8A9A8A17EA8A2%A8A87E7DA984A87EA8A2A87DFFA8A2A2A8A8A2A2AFA2A8A8FD0BFFA8A8A8%FD05FFA8FD2BFFA8FD0BFFA8A8FFA8FFA8AFA2CAA8FFAFFFA8A2AFFFAFA2%A2A8A8FFAFFFA1CAA9A8A8FFA1A8A2CAA8A8A8CAA8A8AFFFA1A8AFFFA2A8%AFCAA1FD0CFFA87DFD31FFA8FD0EFFA8FD04FFCAA8CBFD04FFA8FFFFFFA8%FFA1FD07FFA1CACAC3CACAA8FFA8CAA8CACAFFFFCAA1FFFFCAA2FFA8CAA8%FD0BFFA8FFA8FD2FFFA8FFA8FD12FFCACACAFD12FFCAA2FFA1FFA2FFFFCA%CAFFA8FFFFFFCACAFFFFA2CAFFFFA1FD29FFA8FFFFFFAFFFAFFFAFFFA9AF%AFFFAFFFAFFFAFFFA8AFA8FD0EFFA8FD05FFA1FD13FFA8CAFFA1CAC4A8FF%A1CAA8CACAFD06FFCAA1FFA8CACAFD0DFFA8FD18FF845A847E857E8484A9%84A95A847EA984A984A97EFD0584AFFD12FFCAC3FD16FFA1FFA1CAFFCACA%FFA1FD07FFA1CAFFFFA1FD27FF7EFFFFFFA8FD05FFA9FFAFFFA9FFAFFFFF%FFA9AFFFFFA8FD0CFFA8FFA8FD05FF9BFD18FFC4A8FFA1CACAA1A8FD06FF%C4A1FFA8A1A8FD0DFFA8FFA9FD13FFA8FFA884FD07FFAFA8FFFFFFA8FFAF%A984AFA8FFA8FFFFFFA8FD09FFA87DA87DFD06FFC3FD18FFCAFFFFCACAFF%A1FD07FFA2CAFFCBA1FD0BFF7DFFA8AFAFFFAFFD08FFAFAFFD0AFFA984FD%17FFA8FD0AFFA8A87DA8A8FD05FFA1FD1BFFA8FFCAA1FD07FFCAA8FFA2A1%A8FD09FFA8537DA8A8A9A8AF84848485A8A984A984847EA9A8A97EA984A9%84FF5AAFFD04FFA8FFA8A87DA8A8A87DA8A8FFA8FFA8FD04FFA8A8FD13FF%C4CAFD1DFFA2FD0AFFCAA1FD0EFFAFA9AFA8AFA9AF848584AFA8AF84A984%8584A984AF84A9A8AFFD04FFA8CAA1CAA152527D525252A8FD04FFA8FFFF%FFA8FD0EFFA8FD05FFA8FD29FFA1A1FD0EFFA8FD1DFFA8FFA8FF7DA87DFD%04A8FFFFFFA8FD05FFA8FD3DFFCBA1FD2BFFA8FFAFFFA852527D5252527D%A8FD07FFA8FD0EFFA8FD2FFFA1A1FD0EFFA8FD1DFFA8FFA8FF7DFD06A8FF%FFFFA8FD43FFCBA1FD2BFFA8A984A97E7D2752277D7DFD04527DA8FFFFFF%A8FD0CFF7DA8A8FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFFFFFA8FFA8FFA8FF%FFFFA8FFA8FFA8FFFFFFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8A1AFFD0BFF%A8A8A8FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFFFFFA8FFA8FFA8FFFFFFA8FF%FFFFA8CFFD04A87DA87DA8A8A87DA8A8FFA8FFFFA8A8FD0BFFA87DFFA8FF%A8FFA8FFFFFFA8FFA8FFA8FFFFFFA8FFA8FFA8FFFFFFA8FFA8FFA8FFFFFF%A8FFA8FD05FFA8FFA8FD05FFA8FD0CFFA87DFFA8FFA8FFA8FFFFFFA8FFA8%FFA8FFFFFFA8FFA8FFA8FFFFFFA8FFA8FFA8FFFFFFA8FD0FFFA8FD0CFFA8%FD07FFA8A8A8FD05FFA8A8A8FD05FF7DA8A8FD05FF7DA8FD05FFA87E7DA8%FD04FFFD04A8FD0DFFA8FD07FFA8A8A8FD05FFA8A8A8FD05FF7DA8A8FD05%FF7DA8A8FD04FFA87D7EA8FD04FFFD04A8FD15FF7D52A8FD05FF7D52A8FD%05FF5252FD05FFA85252FD05FF7D7D28A8FD04FF7D7D52A8FD15FFA852A8%FD05FF7D52A8FD05FF7D52A8FD04FFA85252FD05FF7D7D52A8FD04FF7D7D%52A8FD15FFA8FFA8FD07FFA8FFFFFFA8A8A8FD05FFA8FFA8FD07FFA8FFA8%FD05FFA8FFA8FD15FFA8FFA8FD07FFA8FD05FFA8FD07FFA8FFA8FD05FFA8%FFA8FD05FFA8FFA8FD24FF7D7D52A87DA87D7DA8FD37FF7DA8A8FFA8FFA8%A8A8FD37FFA87D7D7DA8A87D7DFD38FFA87D52527DA87D52A8FD77FFA8FF%A8FFFFFFA8FFA8FD99FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="Ôªø" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2017-12-12T02:12:13Z</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>200</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAyAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8Am+q+YvO9zomjX2jfpK7u&#xA;bC+TWfMywrfGp+vJBLplusEEsdwsMfqxyW4ZePEO1WBxV6b5KvZriTXYBPNc2NpqJWwmuefqiOa2&#xA;guZImMgD/uZp3QBt1A4HdDirJcVdirsVdirsVdirsVdirsVdirsVdirsVdirx/8ANW41m71a8tba&#xA;+1S1mspdJWzttLXU5aW1zLK13dT2+kyQXMsfCJoz8YA40Uh23VTL8pL3zIGtbPV5r2SeXTPrF9ba&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmp:MetadataDate>2017-12-12T02:12:13Z</xmp:MetadataDate>
         <xmp:ModifyDate>2017-12-12T02:12:13Z</xmp:ModifyDate>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1121.083122</stDim:w>
            <stDim:h>867.210938</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>TimesNewRomanPSMT</stFnt:fontName>
                  <stFnt:fontFamily>Times New Roman</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.01.3x</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Times New Roman.ttf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>TimesNewRomanPS-BoldMT</stFnt:fontName>
                  <stFnt:fontFamily>Times New Roman</stFnt:fontFamily>
                  <stFnt:fontFace>Bold</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.01.3x</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Times New Roman Bold.ttf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <dc:format>application/postscript</dc:format>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:DocumentID>xmp.did:534d5358-fc80-4bbb-9429-3ac88467cb0a</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:534d5358-fc80-4bbb-9429-3ac88467cb0a</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:534d5358-fc80-4bbb-9429-3ac88467cb0a</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:534d5358-fc80-4bbb-9429-3ac88467cb0a</stEvt:instanceID>
                  <stEvt:when>2017-12-12T02:12:13Z</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -864.537 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 864.537 li
1121.08 864.537 li
1121.08 0 li
cp
clp
.0831222 440.58 mo
560.083 440.58 li
560.083 860.58 li
.0831222 860.58 li
.0831222 440.58 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
73.0831 806.08 mo
507.083 806.08 li
507.083 472.08 li
73.0831 472.08 li
73.0831 806.08 li
cp
f
1.5 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
479.527 472.08 mo
479.527 476.42 li
410.639 472.08 mo
410.639 476.42 li
341.75 472.08 mo
341.75 476.42 li
272.861 472.08 mo
272.861 476.42 li
203.972 472.08 mo
203.972 476.42 li
135.083 472.08 mo
135.083 476.42 li
479.527 806.08 mo
479.527 801.74 li
410.639 806.08 mo
410.639 801.74 li
341.75 806.08 mo
341.75 801.74 li
272.861 806.08 mo
272.861 801.74 li
203.972 806.08 mo
203.972 801.74 li
135.083 806.08 mo
135.083 801.74 li
73.0831 472.08 mo
507.083 472.08 li
73.0831 806.08 mo
507.083 806.08 li
.149 .149 .149 rgb
@
.301961 .301961 .309804 rgb
%ADOBeginSubsetFont: TimesNewRomanPSMT Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /TimesNewRomanPSMT def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 40 /parenleft putdup 41 /parenright putdup 48 /zero putdup 49 /one putdup 50 /two putdup 52 /four putdup 54 /six putdup 56 /eight putdup 84 /T putdup 101 /e putdup 105 /i putdup 109 /m putdup 115 /s putdef/FontBBox {-568 -307 2000 1007} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings15 dict dup begin/.notdef <1C60D8A8C9B6FF86FBD66B095379F45880CA28D0F0C4629F99B72EFEDBB222483BD74F8B> |-/space <1C60D8A8C9B8707C25> |-/parenleft <1C60D8A8C9B81F2C3AC09B674C4ECE2BEF4D70AD3508D915EA9AE12419376F6EEF231ECE8179CA4531F29291ACACE060AEF98AD6F2FFF2BEA533946FFA1C8BC3953D72A31BB8ABD9782D71B2146F964D99646263E2D414F84FA049D36B9B13B7F6C8AA7A4A5EB0> |-/parenright <1C60D8A8C9B81F2C3CA029BC286E27661FD7F18B990CFF4A0AF58404A2F35E11D14FBA406192D392AD203A879E34B8FA3132863211808E5BD63BDAA607B8E04E23E92C61AAA8B57E5E7609689020D20EB927A1EC6CC0BC06B540A016D558248DC4A3E8183F5F> |-/zero <1C60D8A8C9B7A73DAAFDCA97EBBC8D8E35A41D9404C5638B059E1CA50B5366543C3D584AD9E19987218AC5999BB0F2477597AB6F8DD868788C8440CBF4A338EF64ACD9BF2268656755741DB71FD86387D4A7AA1CFD19937BFD209E4FBCD1952717C8CF8C0555CB2D0238DC43B2A6A2DE4D7366DB210D2673870D0B0C58344E6AEF91B916BAAEAEF37B22F065E870AFE6638E56D0B4AE01785D59EE23402242D396440157FC51> |-/one <1C60D8A8C9B7A73DB92A3F8C4B412A6756A4F8D8439622AB29A83C93F589D112DBEAB54F9ACF0D9BFA06C28638F8F8CA9EE7AFD734575522301B5C02720FA00A934493EC3D856AF45EEE1D7462FF2375B7250579D34D9C249B6BEBF8EF41DB28C0847307B8DCBC66> |-/two <1C60D8A8C9B7A73DB6F198797B24E7DF20E340C763AB9A17095FFDDA6B4B0E4D4AC4BE83AF302018AACAF29AB5FCEB98A93FCCD2C9A968B7CB1B433E25003CA8A63287F6BD1729C8188A209A7171C9BFB11D2FACEF2FADF63141D976A0F90EDDE709834FFBF963952A5213F00F39F098C30D0F91D40A57CAEF920CE11EC41D90433CE0F55F0A42A96AF852FD50FA> |-/four <1C60D8A8C9B7A73DB6B62B7A95EE6C20B94EAC94CA9AB50BFD020369D6A63C8EA15A0D9A89B2ED9293078F8D3EE629592E255C65B246> |-/six <1C60D8A8C9B7A73DB682174C160AB8115D90A4524BD5B352C23110F23EE4E20266716093AE0643A076F6C57BA527F49BB819243E28C4CA7F711F41FA01318856C15674E51D546E83D25FE9DB7A4B9EDFDDE57E488CC507C2304526D6E80E07D1EEFCA86373B2F664DD3DA4646061C700F112AB44ED3896FA596FE814436AD1F1DC5FEDB207A575A17735F66E79BF0D0E423C92F1E9255D38F15B49459F3693E95DCE92EBF25C243713EDA9138A49C42AA83683249878EEA825672AC6D99C32B9109B3D5797A7> |-/eight <1C60D8A8C9B7A73DAB2BA6B835CAFB4C9A41096F555C470FE6294A707AE711C017C95446B200870C2B6A47FB931BCEBEB5BBC6B53605850C75701306FD83F9DC906687C2B3A2C9C0DB9DB68E95D3478DEA01153491C8534F5AD899980F04C195BFB522EDEF282420AA1F12E08397ECA941D5934294BD451B3952E6229D3E7987DD36FC8E43559904E0205D3416EDD1402AB05184D2018B2C7B816330FD0C2740A24C74F80E34F93317BBB1D6B8C4D916C15B7FF1D533D7762324A1017022A27246D93B9768262BFCC673CAD6781894C98679A5889F9338F377D1995AEDF5695FBA7A65628522691535557B2045419DD63F87D7A64B6A962B> |-/T <1C60D8A8C9B7D8BE514ED6977CE9F9E5860FEBB6D8EBF5879FDED6C1E48F6AFEEE7B65DB6C9D492058CAA103CB13A7A80B0015E85F272BB9775991CD97556EC3CFB46A4E1606F006216EABEB711074247C72C159202F32CC7F5F403FAE58110685510DDB32C57700D5067C975D7063A496FE85C1E5> |-/e <1C60D8A8C9B77FE2C19119FE019B929F076F8319E8913467AECA41BE2BEAD3EC175346E3F888D3AD76D215AD69034A954DFD661ECBEA3B145468480B6A15F5C865D2083DC0B04744AA76DE4CC9E0C9DBDCC2C59DAA00F28A6A47092C7FFA0397DC47C5CBBA69AD805D3DD20D56411E92B0DE9E3F19C2FDEE1FA501318984A59E1CFFFD06EA629758085868D3F5F7204292> |-/i <1C60D8A8C9B854D0F4318DEB2BF4A8C14C2FAB601E0ED2FF31B9BA2C4F4D9D824A65F9E753CDA6D59F3AE6B969EC176D4AA1F064BFADF6F4B6A5454B78F98C4B41AC403B87C0044C2A2776BF32D7D2C5370D6DB44827DB4719A169BBE365B0C0BED49A30732BB5E35B7101E488713F0203C9161D1F92C48C80A640085090E2C5D79817DC05EB1FC5E4D24EE71772E51241DF9FD4D574115CFC53427DCBCB8CA3E9F85837FAC6> |-/m <1C60D8A8C9B6FF86F5D75501F5946D14C10E01941D6F8F408CE11167932D24264D7EFCAC2AE86125FDD757A8758D869BC4213413CCB2A6A255440BA1816E9DC45844CC319542821B45F7B81EE7391A0EDD08008613940B7EF538F41747A2556BE4D609FA0E86A3720064373B35B3C09F29E00670FDA88D75DD91439C68FD574D15688B76675600DF49F10BE44872E462D2FA9EDC453EEFA6E997D8F249107C6F71C5B180EF91CFB08123DB5F12D5248BB769BCDBF86D09B3C1EE1D61D18CE6632A82186FF826CE8FF5C9F24094455D2446DAB1258D7CEF6AB64018AE955617323D2765A0C9FC9EE9EFC157214A4EF1A088A6CBE09BD12BF0618C85527D987ABAA0F84BBDB3F467CD6D1AFC5F01D6CD6E91196626F968CD9EC222C872FAFEC679ED97966B06F7D45253DA82AACAAC774A43132A3F4B4FB40FD07B5AFDAE82B335C3B8E42DF7C6FCB1E78E5819FAE1E5B06EBADF2F71F0A59372AEE76B517996> |-/s <1C60D8A8C9B7361F027554B74948DF9D509740193A97E4C5A946CCDAC22ACE16A97A38CAF70766C30631C22477718670FA129F481BA880FC6C2A8C233A039A7A46ACD6F3CA0422B1CD13AB9E5980A98B78F274FD5FB0A519013427E3DF40BD973F22C9B236BE3D27B0A78749138244A4ED344575D4F7F677439F8C2359FAAB210EA03D2DAABF38A6B5B4F0819D6E85CC68A9859B12239E01058FD0C7C593B22AC00DE1C2A90508610457C5DFEA41C78C4C677B338B4C0ED41B0474AF509B93D8B3403DD443273DAE4F97B7CDCA81379AB0933639> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/BGZFAX+TimesNewRomanPSMT /TimesNewRomanPSMT findfont ct_VMDictPut/BGZFAX+TimesNewRomanPSMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero /one /two /.notdef /four /.notdef /six /.notdef /eight 27{/.notdef}rp /T 16{/.notdef}rp /e 3{/.notdef}rp /i 3{/.notdef}rp /m 5{/.notdef}rp /s 140{/.notdef}rp]BGZFAX+TimesNewRomanPSMT nfBGZFAX+TimesNewRomanPSMT*1 [20 0 0 -20 0 0 ]msf125.083 830.08 mo(20)[10 0 ]xsh193.974 830.08 mo(40)[10 0 ]xsh262.856 830.08 mo(60)[10 0 ]xsh331.747 830.08 mo(80)[10 0 ]xsh395.638 830.08 mo(100)sh464.528 830.08 mo(120)shBGZFAX+TimesNewRomanPSMT*1 [22 0 0 -22 0 0 ]msf252.083 855.58 mo(Time \(s\))sh507.083 496.821 mo
502.743 496.821 li
507.083 558.673 mo
502.743 558.673 li
507.083 620.524 mo
502.743 620.524 li
507.083 682.376 mo
502.743 682.376 li
507.083 744.229 mo
502.743 744.229 li
507.083 806.08 mo
502.743 806.08 li
73.0831 496.821 mo
77.423 496.821 li
73.0831 558.673 mo
77.423 558.673 li
73.0831 620.524 mo
77.423 620.524 li
73.0831 682.376 mo
77.423 682.376 li
73.0831 744.229 mo
77.423 744.229 li
73.0831 806.08 mo
77.423 806.08 li
507.083 806.08 mo
507.083 472.08 li
73.0831 806.08 mo
73.0831 472.08 li
.149 .149 .149 rgb
@
.301961 .301961 .309804 rgb
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginBGZFAX+TimesNewRomanPSMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/period <1C60D8A8C9B8707CC95A9B5DFDE3A4AF8C8BB7D0C82C30C322ED94985BC6C2F162CD480F8280AD954FE8DC511B40B423DB4A6012D9C419E4DF4F375C6ADD098717CA70F621> |-/five <1C60D8A8C9B7A73DB97C1FD4849B14157B765BEEE66B9438731A1E1DBF6D904609867EBF49E3E19DC6BA786F7382AB36C8CFA3690DF4F8E7A258691DFDD71792965BBA1DCE407BE309901C1513A762BED3C73A852D4EDA1BE20A2B364C59E2224D36D9C8BEE5DE8D6C54C49D0F66DB7448A8FCE0E63D5DEE7BBBA026A808CDA9AD5556005639017FF42B963FB833B4B64B6445B350600BDCDD563F> |-systemdict /gcheck known {setglobal} if end {end} ifendBGZFAX+TimesNewRomanPSMT /Encoding getdup 46 /period putdup 53 /five putpop%ADOEndSubsetFont
/BGZFAX+TimesNewRomanPSMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /.notdef /zero /one /two /.notdef /four /five /six /.notdef /eight 27{/.notdef}rp /T 16{/.notdef}rp /e 3{/.notdef}rp /i 3{/.notdef}rp /m 5{/.notdef}rp /s 140{/.notdef}rp]BGZFAX+TimesNewRomanPSMT nfBGZFAX+TimesNewRomanPSMT*1 [20 0 0 -20 0 0 ]msf57.083 812.58 mo(0)sh42.083 750.729 mo(0.5)sh57.083 688.869 mo(1)sh42.083 627.025 mo(1.5)sh57.083 565.174 mo(2)sh42.083 503.314 mo(2.5)sh32.317 649.939 mo
32.317 638.346 li
20.6451 644.142 li
32.317 649.939 li
32.317 649.939 li
cp
34.0831 651.392 mo
34.0831 651.507 34.026 651.564 33.9112 651.564 cv
33.9005 651.564 33.8903 651.562 33.88 651.557 cv
33.8693 651.552 33.8536 651.549 33.8331 651.549 cv
18.567 643.971 li
18.4112 643.908 18.3331 643.778 18.3331 643.58 cv
18.3331 643.283 li
18.3331 643.075 18.4112 642.94 18.567 642.877 cv
33.8331 635.299 li
33.8536 635.299 33.8693 635.296 33.88 635.291 cv
33.8903 635.286 33.9005 635.283 33.9112 635.283 cv
34.026 635.283 34.0831 635.346 34.0831 635.471 cv
34.0831 651.392 li
34.0831 651.392 li
cp
.149 .149 .149 rgb
f
.301961 .301961 .309804 rgb
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginBGZFAX+TimesNewRomanPSMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/f <1C60D8A8C9B81F2C3A6EB915F5DDF05E4CD39F13547A7EF54F9D79FF32092BEC553783B472AF53E99B3070692992C4C512F2D79447B5EC673AA5FA8274BFE5BA294793E06A2CD85C961166E35F08CE852DFFE5F2678D2E0B1687083D40FC628A3BE0EDFC936C866DE25768CCC0F39E7FAD6F5686BB7C64B79625F56C5573F9A5214AA079CAA28A8468CCF29829FD2A747DD586D41C21A37BF93A8AC8FDD941D5FFB6450DF53658C2420EB0E5E88807E727AED5F7> |-systemdict /gcheck known {setglobal} if end {end} ifendBGZFAX+TimesNewRomanPSMT /Encoding getdup 102 /f putpop%ADOEndSubsetFont
/BGZFAX+TimesNewRomanPSMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /.notdef /zero /one /two /.notdef /four /five /six /.notdef /eight 27{/.notdef}rp /T 16{/.notdef}rp /e /f 2{/.notdef}rp /i 3{/.notdef}rp /m 5{/.notdef}rp /s 140{/.notdef}rp]BGZFAX+TimesNewRomanPSMT nfBGZFAX+TimesNewRomanPSMT*1 [0 -22 -22 0 0 0 ]msf34.083 633.58 mo(f)sh.137255 .121569 .12549 rgb
%ADOBeginSubsetFont: TimesNewRomanPS-BoldMT Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /TimesNewRomanPS-BoldMT def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 45 /hyphen putdup 77 /M putdup 97 /a putdup 99 /c putdup 100 /d putdup 101 /e putdup 102 /f putdup 103 /g putdup 104 /h putdup 105 /i putdup 108 /l putdup 111 /o putdup 112 /p putdup 114 /r putdup 115 /s putdup 116 /t putdup 117 /u putdup 124 /bar putdef/FontBBox {-558 -307 2000 1026} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings20 dict dup begin/.notdef <1C60D8A8C9B6FF86FBD66B095379F45880CA28D0F0C4629F99B72EFEDBB222483BD74F8B> |-/space <1C60D8A8C9B8707C25> |-/hyphen <1C60D8A8C9B81F2C3A728CE9B4C36D54571D30223019EB> |-/M <1C60D8A8C9B5D6EF42037EF8CB1D58C3B1520FAE759CBD55AED848DEBF5BC04F5A96DDF9D44AEE96B27030E4665082FD38C1E77B3E625D115F72339BB1049AD297E94CF95F7FA5E93AE64088982F3EAB1FD38BE8ABC4EA9CB45EB33BB1EC97D93513A915DE0561EE6E95F14B8C0ED1B7AA32968B65D98E6B775ED420A3A05912EFAA8732322BB12AE50F3C62A8BD9A3D8A386A6AC22B2C4C5AC1C76F15385D5876D8EB5356450AC8FA23BC4813785E5FFC5E46CFAF7FDC942EA3F2CB35A30512CB7D6039FEFCDD949CFD9F58A96808DF3739CB> |-/a <1C60D8A8C9B7A73DB9E86B7E36429A2884771404E6FF662B8AA7E7384C3659F637EBD399261C63A35B069A69F76ED1A82E238E7EE163D317BE064E3858C7F7730B3F4964EB20955A37792E7E1687D8ADC075DDB7D7FB25258139553D3CB2FA10ED804622949E5930CF99F28E8A477603C46FC4F5A92DC2A1E35DB06F67F3E51B82DE37C2C17EC2E5C923B58246C88B9A4601B0D1A14F5724D07DAB747376B8430740055D15C3763245B66F59402378EFADB8789CFB2CE89C326A037B9EA75216356106F9269249DDBB95B13318EE882CB697F95419AED017DFE8527A8D8EF87BA96F46A6F3C6B37E5DC3CF5F042CB4BC684A4C1AF54058E7FE4B16C2ABDA5E4C6AEB6AC099DB4A66DB29E012598F2F12A231> |-/c <1C60D8A8C9B77FE2CEE96C7945B0435FFDDE211B8F948D1DBC8485861892F6D99960D947D725C2B400D72D2E2033C9690A49A5B9AEDD48C99E1E12194AA92AD9E1221612038A683F14C558C3BE52A1D282380EB81ECDEF9B33E298B18379F2DEE9473052CB47C57B3F66F7E9B2774464DA469F0AEDB78DBA5D5DA222391213D6F7DC6F471B1C2EAA711F193F31D398A5700FBD884113FD59850678DCA0650A6DD9CB70CA> |-/d <1C60D8A8C9B7EF322BB34349F3168A7602BC7BF4226017FE1BF22B84054523B23705583072888EE49ACE6F151BEB11E6C7498E6C09135BDFDB836D2D49BE2EABEE67608F4396105B0DB3E7762F239216C0DD50120AD2B9D413DB01C86A05F67787C78F145B0F86FFE91A800E141AE20ED29E6F68C9A2A75337AC51AED174C1393EBB7530A0D447EFE3403D02A5ABF7A566F9E721F532F6AE8AD6A21AF6AE574484093EF0056C2D7EB4A61B4032F6ABA859D517A62FF24D6F4DCB748055764ED96954395DB4DB> |-/e <1C60D8A8C9B77FE2C1A0FFE616EB00E9CC30AEE6296E704D5E8E6E2A25CD5B841666118E2FAE181ECDCA295C531BAEC8AA2C391851649F7A3F6C1D06B8F53311D73A0F775B337F21892F2D55D51BAAE57B9A38BC3FBC0F8B7058E4F9E704709FA2F144D9397D8E7CC8EE685293C980753BDE3858AD8D5DB11A1F649D597DE968E74B3A3B8C5A39BDCB85B6D8AE6FFD00E4F0A287> |-/f <1C60D8A8C9B81F2C3A7A16DF5F18027D7405F5154A11909C9D43E6CD25A6DC277D5C0D48ABA58AEE1CA72D408CE01901163AA965E83A2C6AAEA910B92B4EF79F353F4FB8A479B6F513D6AC0F4E00F27FD509B6ACD1D2962CF1F34CEA6C3F6B06B3DB2F91E3E30F78B9D3043A400CA83256FC3945A449B29060C9C3F19D5089143FF9136555CA79A07E37AAF575E69BBD63975C591AC7D22CD72FBC808BA3758157C1B9215D9858D17483CA724AA4EDFDB31ABF4F75> |-/g <1C60D8A8C9B7A73DB95827D165CBA94F37D43D972EAAE57339132B24EEB3269751BCA927C1513B63503B83734FF72F82FBA710B5424F96FFF7E943411B7E7A713EED12F14B2BD28BCE56F0FA669D4B45D498AE948AE55ED3A2127E7CF255B1E21C2384D44F86D6310CF1BD75C3CFB0483D4C181B588B6DBE0BAEBDD7FB8EE6D3C70C5C2013030F092ACC4E08AD772DA82F9167E24DA30D2630801B833E8FB36BFAE3B375A19AD81EB8DA4C979D041FFC7C9B1A73EF1C5B7E751A31335A96371ACAE038F1C6D7312CCAE42C476D35BAF7EE8303BD721B3C9901074E92A47F3ECA65FBFAD1842104F257AA28C400F288CED8FAB47E7B0F9AC674B2AD758DDC4D82DD0D261718553330B37938706C656304353A29170CAF539CB305CE1DDFAACEE39BF9E79C6CCE45F70BFBD2BD4A513EEAE24D2E98156B2FDBD7BA4B869481F19FB826F47EF5D2624958A3959A8F6D4DC2F78300ED78925E0F8B8B401EF0> |-/h <1C60D8A8C9B7EF3272AF7F25204A2579374FCC2D8DC58257D5328C73837DF5E151F5C4B59935D79D509479A4CF58D2F57CA30B7004F0CECA507A0A14CFFA1C1991F686B3799B13C981FE5F1A5BF53CEC0E9AAEB667BFBDC7A5B4E500A01BF3041032C409B459737BFBB5ED5ED3F0772BAAAB5B9BFF765B3251725E6DE1893256D90156097AA53D4F8FFDCBD851B4E61228F325CAC2820CD2D27D8E9832789A128B427F415B9370CB527F20D87D99F84108664AF4195426E156> |-/i <1C60D8A8C9B854D0E61042376B1E283FB3F4BBB7CB3487BC74EE7E391A93B180B577E22955D0FA3199DCD5C6BBEA2EDAEAAD70CAC2D387D654CFD6D585A60CE5094378FB8BA8FD5D1CAFC6A05D463B8B2BF660BFB6FA4902B50766CB22600DE6B8533451B6F73A6A051EB16DBCEA0EFC6C89350A34CB9DF0A7738E953A8F7AB6ADA51E7F> |-/l <1C60D8A8C9B854D09CC77F32FE56EAFD8F160C72BECE8873AE417AE0D21D5337605639AD1A151DC364880F2C65200EF41B3343ACE730AF8052A8FF79376915451BDA8AAC02C68E> |-/o <1C60D8A8C9B7A73DA75A812B0D9E0D72950C400992B64791CE4BE936E35EC58E93177DA216CA6EA116FD0299C2317BCD42A8DF8FC302833AED60D02FEBA6105DB891946C90338F674D705E1347FE9120F0544578B7DAA3AE7563B3048B2698F9445592B7A6749491B2DE1FE4A1FD150BB3E20FEF7BE4E02D604E63E559C8B95FBFA7494AE1EEF5610DCF16F48AC01BFAB48671FA48799F609CBC8530028A5C8DBEF01BFDEE2A> |-/p <1C60D8A8C9B7EF322B8F3C1339CC0CC7FB87CEAD61AE2C891E70162319DDE1D773CD4C58B5D0C89F873363F696C9E4C6105ECC9F5414989962E4C7357374118FB8D6045447C557B79E23B00D6AED55D3610DB59773C4F03101D9258DBC7B32C1285C0C65052E26A4E5597E87FB915026E59C0C25DE3FDABFFCE1168F7A679C1B11DF8CAEE010E5B1F08558A9CD1ECAE6DAF8F59760015B341E27E7BD65504717C3E0E98D597B37446179E7CBC19C105B8A11F14785E84DD33ED43C7F991A380380592F35D096D19F> |-/r <1C60D8A8C9B77FE2960E00E3A8DCFC480C099B33BBDDEDCBBEDD2A0D472C0A7B73DA6C507A02DE3334237527983B6592EE1B2F262F9019257EF00896B753BA1EE7B97E00D2814390DFE8166E795665E9161989E492FE9CF41E80A3FAC0B9410A0D35E8758FA16A6EBCF6A32D78AB8563CF90B05BC9CE7CBF6CAB662900B3B6694F1FC2BDC482D5EA0481674C5822C4D45FD0EE1F9108A4ECF4F95EA02DB223FEC06EA06FE96C26DCC8DC8D15> |-/s <1C60D8A8C9B7361F0274264DFD1E2F12F4038CC3C2CC64F8E8B1EB247282BBD631FA3240975506A5A512CB2808310E488A51FE18729B6606AFD56EB1722AE1D8ABC20744FDC6CBF3951E8F8BD520E7CF9D93CF33B4900AFA5C5C4D000CCAD0ED41D50E319EB8B858BFAC6C03AFB2E197690568AF5E2BE9F4C558829874D2932ED897622551043851C0CC72FF3440821220BE6AECCD9E27B0282336CF762B277D88192B83BEB39BF3A8D350E4CD0CFD13DA7EB0A8BEB03D5FAECB2BB99C89132A2E8C5DCDE91DE17F55FBEFBDA6CAE805794F42115FBC221DB69DBD3240613F374A> |-/t <1C60D8A8C9B81F2C3AE0D71D60A6D0809ACA0FF6B89A38F7E3BC89850C1DD34D082ECFCC2A4F531E37217E8E3CD02D42FE76F828E185B10A17EE368D50D1536CFAF78DF5C03ED49FE0A24E371BB0887E07856C5D39D6E9C2D58E0CAD3CB98DB35234BA12CF62ED06495FE95A32> |-/u <1C60D8A8C9B7EF322BA0905ED0DC683347CE70FA474511E47D7F16FABA80631D8B81EF4E26BB958E5CD419A29585E75FE6367FE08A7CCFFE45262AE333F224F7158401337079DCB57A01C4153127AD91F464BC7389BDB2B1F912E0435254BC5B90C25CFA9CF36838EB1DC267155E152B4A4C084F64F36BC4A1C665448CADD0DC39A2B4C68518BC7B0B05DE633BA8500EE54DA457E79EC9CBA6> |-/bar <1C60D8A8C9B88EAF9485C47EFF3DEFBF2310357F03A72A> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/BGZFAY+TimesNewRomanPS-BoldMT /TimesNewRomanPS-BoldMT findfont ct_VMDictPut/BGZFAY+TimesNewRomanPS-BoldMT*1 [32{/.notdef}rp /space 12{/.notdef}rp /hyphen 31{/.notdef}rp /M 19{/.notdef}rp /a /.notdef /c /d /e /f /g /h /i 2{/.notdef}rp /l 2{/.notdef}rp /o /p /.notdef /r /s /t /u 6{/.notdef}rp /bar 131{/.notdef}rp]BGZFAY+TimesNewRomanPS-BoldMT nfBGZFAY+TimesNewRomanPS-BoldMT*1 [16 0 0 -16 0 0 ]msf163.083 466.08 mo(Multifractal spectra height | p-Model)sh3 lw
0 lc
2 lj
[3 3 ] 0 dsh
500.893 806.12 mo
507.083 682.603 li
73.0831 663.339 mo
79.9723 685.712 li
86.861 645.946 li
93.7501 639.438 li
100.639 557.563 li
107.527 600.223 li
114.416 642.489 li
121.305 701.445 li
128.194 765.34 li
135.083 613.245 li
141.972 617.805 li
148.861 594.872 li
155.75 677.956 li
162.639 539.05 li
169.527 565.926 li
176.416 696.309 li
183.305 627.677 li
190.194 666.408 li
197.083 624.475 li
203.972 635.187 li
210.861 647.373 li
217.75 697.848 li
224.639 503.872 li
231.527 700.217 li
238.416 613.462 li
245.305 564.091 li
252.194 590.192 li
259.083 569.734 li
265.972 611.717 li
272.861 671.558 li
279.75 689.853 li
286.639 631.312 li
293.527 636.881 li
300.416 694.533 li
307.305 716.099 li
314.194 672.249 li
321.083 608.74 li
327.972 727.038 li
334.861 664.49 li
341.75 686.183 li
348.639 739.079 li
355.527 669.38 li
362.416 631.064 li
369.305 714.238 li
376.194 747.561 li
383.083 639.281 li
389.972 680.627 li
396.861 760.783 li
403.75 685.022 li
410.639 624.267 li
417.527 661.167 li
424.416 631.978 li
431.305 664.545 li
438.194 708.256 li
445.083 545.276 li
451.972 682.932 li
458.861 656.934 li
465.75 633.739 li
472.639 752.578 li
479.527 605.308 li
486.416 673.161 li
493.305 615.936 li
499.724 806.12 li
.792157 0 .12549 rgb
@
73.0831 670.764 mo
79.9723 676.68 li
86.861 676.584 li
93.7501 677.854 li
100.639 684.849 li
107.527 686.992 li
114.416 686.727 li
121.305 675.176 li
128.194 675.111 li
135.083 681.979 li
141.972 681.706 li
148.861 680.944 li
155.75 676.095 li
162.639 681.033 li
169.527 671.296 li
176.416 672.671 li
183.305 667.529 li
190.194 680.719 li
197.083 669.271 li
203.972 675.52 li
210.861 677.022 li
217.75 672.167 li
224.639 676.853 li
231.527 681.671 li
238.416 672.275 li
245.305 666.396 li
252.194 672.834 li
259.083 673.958 li
265.972 667.097 li
272.861 672.877 li
279.75 667.052 li
286.639 679.722 li
293.527 668.54 li
300.416 666.874 li
307.305 670.15 li
314.194 673.715 li
321.083 668.708 li
327.972 676.001 li
334.861 678.541 li
341.75 669.528 li
348.639 671.981 li
355.527 674.184 li
362.416 673.239 li
369.305 671.585 li
376.194 674.334 li
383.083 671.245 li
389.972 663.908 li
396.861 672.015 li
403.75 662.401 li
410.639 671.573 li
417.527 668.036 li
424.416 673.215 li
431.305 669.279 li
438.194 670.008 li
445.083 666.794 li
451.972 668.869 li
458.861 672.24 li
465.75 669.17 li
472.639 666.646 li
479.527 665.387 li
486.416 668.511 li
493.305 672.038 li
500.194 664.619 li
507.083 673.243 li
.572549 .772549 .870588 rgb
@
73.0831 683.104 mo
79.9723 683.104 li
86.861 683.104 li
93.7501 683.104 li
100.639 683.104 li
107.527 683.104 li
114.416 683.104 li
121.305 683.104 li
128.194 683.104 li
135.083 683.104 li
141.972 683.104 li
148.861 683.104 li
155.75 683.104 li
162.639 683.104 li
169.527 683.104 li
176.416 683.104 li
183.305 683.104 li
190.194 683.104 li
197.083 683.104 li
203.972 683.104 li
210.861 683.104 li
217.75 683.104 li
224.639 683.104 li
231.527 683.104 li
238.416 683.104 li
245.305 683.104 li
252.194 683.104 li
259.083 683.104 li
265.972 683.104 li
272.861 683.104 li
279.75 683.104 li
286.639 683.104 li
293.527 682.377 li
300.416 682.377 li
307.305 682.377 li
314.194 682.377 li
321.083 682.377 li
327.972 682.377 li
334.861 682.377 li
341.75 682.377 li
348.639 682.377 li
355.527 682.377 li
362.416 682.377 li
369.305 682.377 li
376.194 682.377 li
383.083 682.377 li
389.972 682.377 li
396.861 682.377 li
403.75 682.377 li
410.639 682.377 li
417.527 682.377 li
424.416 682.377 li
431.305 682.377 li
438.194 682.377 li
445.083 682.377 li
451.972 682.377 li
458.861 682.377 li
465.75 682.377 li
472.639 682.377 li
479.527 682.377 li
486.416 682.377 li
493.305 682.377 li
500.194 682.377 li
507.083 682.377 li
.0196078 .443137 .690196 rgb
@
499.583 532.08 mo
499.583 479.08 li
369.083 479.08 li
369.083 532.08 li
499.583 532.08 li
cp
1 1 1 rgb
f
.137255 .121569 .12549 rgb
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginBGZFAX+TimesNewRomanPSMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/hyphen <1C60D8A8C9B81F2C797FA61189B8881D0DB497EEC4F8> |-/A <1C60D8A8C9B6079F6D0C3DD1DA701F2FEF50BE2CCF679467EAB463D54C495B1FC98737C4805A67EB9B211579E256E1BCD120087B7083980EFC748D95F15A9738703A6CB4125517112E8D63595864B93D16C7B325AB1759098D24D8A43A63AEECA533864B64013C499C4207455D5210408E58672A172F78CB14D73985071102DFA93B6532> |-/D <1C60D8A8C9B6079F62679EB6BE171B70F78590F81AB62F69F1BD2EFC86EAE566847745E296D0CF61872DA4D8690C62AB23EE8E1DEB0EAD4BD93A2494CA759A81248BAF55E0D2E2E5FE71261287BF00F8CDF501793AB3272F80F7AE3E407CA730AC3648B3AC2D58C8D1FD60CD7DB1F886A79A4080D8870256B6E127906D500379950803F077453028FB6169> |-/F <1C60D8A8C9B7EF322BE6235043C5A7A6ECCDDDC390BE41D3E01CEDAA91CB335118BB7C10CD87A1A789356A0826D033ECDD0352DC64AE55B383C11F3EB18A6F42CD78A260CB051779A3B4D92350DD65D27B671C1609DC36FBFF44C40F44FB014C0462CFF40EA9650CDFB895B99B69FA8BD3EB8152DF452581818551FCC7745E9E79F62FD5E1668E4EFD8B2F33AB5D5ED30AB06AFD78EF98B1A68AA26FC8B4D7DDC1356637FA048F199EDF19A428> |-/M <1C60D8A8C9B59F85E8A8526E50FEB33438675EDBBD0866093A4555E3EA3A35849B91EFFB88205281CC77395AC14DF328B50F1F179210F0307F50BFB242AA7F76F18203303EF0BF46B76E61FB539D568EF9F434EC657F4C5CDE1BCAA90A83BAFEB02869664DC06CC8CA4FA1E876C39F3F5371AD261F117CDAF8F6A4E96ECA4F5088752E105CDEB8FBEB2F7F82D31A2FEB6DF3C053295A006D723DEE7CEF30A9F16E8C6EE80DDA09053247> |-systemdict /gcheck known {setglobal} if end {end} ifendBGZFAX+TimesNewRomanPSMT /Encoding getdup 45 /hyphen putdup 65 /A putdup 68 /D putdup 70 /F putdup 77 /M putpop%ADOEndSubsetFont
/BGZFAX+TimesNewRomanPSMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period /.notdef /zero /one /two /.notdef /four /five /six /.notdef /eight 8{/.notdef}rp /A 2{/.notdef}rp /D /.notdef /F 6{/.notdef}rp /M 6{/.notdef}rp /T 16{/.notdef}rp /e /f 2{/.notdef}rp /i 3{/.notdef}rp /m 5{/.notdef}rp /s 140{/.notdef}rp]BGZFAX+TimesNewRomanPSMT nfBGZFAX+TimesNewRomanPSMT*1 [14 0 0 -14 0 0 ]msf406.083 493.58 mo(MF-DFA)sh373.083 489.08 mo
403.083 489.08 li
.792157 0 .12549 rgb
@
.137255 .121569 .12549 rgb
BGZFAX+TimesNewRomanPSMT*1 [14 0 0 -14 0 0 ]msf406.083 510.08 mo(MF-DMA)sh373.083 505.58 mo
403.083 505.58 li
.572549 .772549 .870588 rgb
@
.137255 .121569 .12549 rgb
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginBGZFAX+TimesNewRomanPSMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/C <1C60D8A8C9B64EDFFBA6F0CF8A2CDA79A069460245F5373797A9E71DEA345031885496623E7C65FDB470FC6BFF7BE37B20FF363C43CAB08BA8E918FCBA9DEB0021B12355971EB2945D0594E78D2EE4D593C49790304E106026BC942097158DDBF12F8B83C9752B02212C28957008FA70A685356583CB4C7D6F55B12AC7399ECFE4B69C91B472A6132E65C9F7B697AE783582C9D65C392064A7C49C83B283409DD22AD16B7DD28B54D5FC454C> |-/J <1C60D8A8C9B7361F02BE73C4CFD35D33EC00415B3CA6C152F65E48AE8D6C4B6496036675C5C8F5E597063106A19B1BA3F0EE04532306F107DAD9A65C072D06B9FB644D70E38B84756493EFE51AD825A2D0A3C49BF5AC9839A3D4E170FA5A71858A97C57537B2C6868525AE4970995137FD1FB1D499789D521C401B0622ABE206084830544BAB810C8807A7CEA0D0FD4C6EE8D48ABB> |-/a <1C60D8A8C9B77FE2CEA139CB15A16492F485162FE605BA10F460B6DC550DEC7BA0BCA1B89C8429260417FE96BA758C22F6762386C9F1CAF53456C89D4C6B177AA810FBB608A57F053C4DA17FD8A122DD63CD2EE0563B0FFA48FEF5CBDB333E4EF010579993E238020BE59CA5D3F31F329BD506C436A3A2AAAB6CBD385FDB0E5188BC3D34A31214C941C253FAF1F818F84A3F73340CA7F3B7A85C87022E70BF3FF56918287082AAA1D7B6CDE998BE3D8663592D3F0DEFC69D87A351A29895DE83B0D7478C3C01D85F944C563EFCF85986470E4B8EDEEDC025A0FB3217B737B99EB7B6E2243F66B907475D1C465D1D07EDFEFC5123FE5A4D48A8B15BE3272EF1EF1464C3F0D45D7CBB8749AF571E09> |-/b <1C60D8A8C9B7A73DB90B311171EB67EB8746E2EC8FC994CCA7A632F7C7E8F4A5D28D725796F2BC8526696060F460C892CC5686CD97F757C6EFB11E42DD9AF110BE11F49DAEFA324F62E3046D4E2410C0923EDB87332B0381414594D399924398EF0A71772EF0EFEA72F5940C288418E4FCC7A2DE1E6A1AEA513FBDA0D6603C38C9676D3489A418D7163D5E50FB679144E02901D98844D885CA3AAF379A83F23AED1F56FC130F21> |-/h <1C60D8A8C9B7A73DB904DA2C7A38531EB5E07DB80E9375E00037710435E027FD1F7B471BB2C47AEA703B8CB5C9C005CAA0B77F572194961F7C30413194A0134D3FF9BA81F629AD195D96BD3C1285904670FEB33C334E260F33EE9AB1A2D9C0C66E38CE4D3CA583879DAF16CE988CC2A14E39FED6599F4B0F3F8F061B585E2410824AE8C179E66BD3AD9F6E34CD8CBF79298E3E4553D0E9DCA292805DED8E36C58209B17E38B2DFAFEB881CA5FB9EC7A76A0CF0C4BFE83CE749EBD15B15E97FBEA4E90F2186A54E69C28F4083AB76DBE019E4C57B27760FED872C4483796F735A795EACD82F245D81FB43B5> |-/n <1C60D8A8C9B7A73DB913C38909CDA29FD53BC2807766C389AFB9ED86F7BC81642DEC755C464ECEF36210D9B2C516FEA8C1248DF87B00C42E8B7B13BCCD9D4DADECDD469C646397E88CF560CD28B02CAE7D1B9203699A1DE9CF796CD494DF60582CAFD70B7F17C1569B79CFC1B11937F06CBBF98FB3F8ABA83215B280026130687B8B88299FC622B1B9C743E6B4E2D3E657B3D5566E1938323637D7929F2E277006B7F4C91822AAA6911E494E2AD0998CB1FC1434E1920012738BB988F6A0027198438FE663C2EACF82CEB86F7C727594> |-/r <1C60D8A8C9B81F2C3A9916C4CB28F21023538C2A69D3E08B0A448624D2CE6C19473DC07A6A4C3E0D8D2DFD7B9589F2461E064A251BFFB4F1472DE500E983E2E667F5383BBA338778795701927E45FB048834AFB7FF5E045C79CAD4F90B53A8A93629365ECF1B64B7916DE5DAB65845D9DB9B71D2B7B722597153CE4BA455AAC1333D36087A511839B6E1301E787D03299ED6FB7E787777CDACC74EC37D8C360275B503E4954E912CD342> |-systemdict /gcheck known {setglobal} if end {end} ifendBGZFAX+TimesNewRomanPSMT /Encoding getdup 67 /C putdup 74 /J putdup 97 /a putdup 98 /b putdup 104 /h putdup 110 /n putdup 114 /r putpop%ADOEndSubsetFont
/BGZFAX+TimesNewRomanPSMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period /.notdef /zero /one /two /.notdef /four /five /six /.notdef /eight 8{/.notdef}rp /A /.notdef /C /D /.notdef /F 3{/.notdef}rp /J 2{/.notdef}rp /M 6{/.notdef}rp /T 12{/.notdef}rp /a /b 2{/.notdef}rp /e /f /.notdef /h /i 3{/.notdef}rp /m /n 3{/.notdef}rp /r /s 140{/.notdef}rp]BGZFAX+TimesNewRomanPSMT nfBGZFAX+TimesNewRomanPSMT*1 [14 0 0 -14 0 0 ]msf406.083 526.58 mo(Chhabra-Jensen)sh373.083 522.08 mo
403.083 522.08 li
.0196078 .443137 .690196 rgb
@
1.5 lw
0 lj
[] 0 dsh
369.083 532.08 mo
369.083 479.08 li
499.583 479.08 li
499.583 532.08 li
369.083 532.08 li
cp
.149 .149 .149 rgb
@
561.083 20.5801 mo
1121.08 20.5801 li
1121.08 440.58 li
561.083 440.58 li
561.083 20.5801 li
cp
1 1 1 rgb
f
634.083 386.08 mo
1068.08 386.08 li
1068.08 52.0801 li
634.083 52.0801 li
634.083 386.08 li
cp
f
2 lc
1 lj
1040.53 52.0801 mo
1040.53 56.4199 li
971.639 52.0801 mo
971.639 56.4199 li
902.75 52.0801 mo
902.75 56.4199 li
833.861 52.0801 mo
833.861 56.4199 li
764.972 52.0801 mo
764.972 56.4199 li
696.083 52.0801 mo
696.083 56.4199 li
1040.53 386.08 mo
1040.53 381.74 li
971.639 386.08 mo
971.639 381.74 li
902.75 386.08 mo
902.75 381.74 li
833.861 386.08 mo
833.861 381.74 li
764.972 386.08 mo
764.972 381.74 li
696.083 386.08 mo
696.083 381.74 li
634.083 52.0801 mo
1068.08 52.0801 li
634.083 386.08 mo
1068.08 386.08 li
.149 .149 .149 rgb
@
.301961 .301961 .309804 rgb
BGZFAX+TimesNewRomanPSMT*1 [20 0 0 -20 0 0 ]msf686.083 410.08 mo(20)[10 0 ]xsh754.974 410.08 mo(40)[10 0 ]xsh823.856 410.08 mo(60)[10 0 ]xsh892.747 410.08 mo(80)[10 0 ]xsh956.638 410.08 mo(100)sh1025.53 410.08 mo(120)shBGZFAX+TimesNewRomanPSMT*1 [22 0 0 -22 0 0 ]msf813.083 435.58 mo(Time \(s\))sh1068.08 70.6362 mo
1063.74 70.6362 li
1068.08 107.747 mo
1063.74 107.747 li
1068.08 144.858 mo
1063.74 144.858 li
1068.08 181.969 mo
1063.74 181.969 li
1068.08 219.08 mo
1063.74 219.08 li
1068.08 256.191 mo
1063.74 256.191 li
1068.08 293.302 mo
1063.74 293.302 li
1068.08 330.413 mo
1063.74 330.413 li
1068.08 367.524 mo
1063.74 367.524 li
634.083 70.6362 mo
638.423 70.6362 li
634.083 107.747 mo
638.423 107.747 li
634.083 144.858 mo
638.423 144.858 li
634.083 181.969 mo
638.423 181.969 li
634.083 219.08 mo
638.423 219.08 li
634.083 256.191 mo
638.423 256.191 li
634.083 293.302 mo
638.423 293.302 li
634.083 330.413 mo
638.423 330.413 li
634.083 367.524 mo
638.423 367.524 li
1068.08 386.08 mo
1068.08 52.0801 li
634.083 386.08 mo
634.083 52.0801 li
.149 .149 .149 rgb
@
.301961 .301961 .309804 rgb
BGZFAX+TimesNewRomanPSMT*1 [20 0 0 -20 0 0 ]msf603.083 374.025 mo(0.2)sh603.083 336.908 mo(0.4)sh603.083 299.799 mo(0.6)sh603.083 262.689 mo(0.8)sh618.083 225.58 mo(1)sh603.083 188.471 mo(1.2)sh603.083 151.354 mo(1.4)sh603.083 114.244 mo(1.6)sh603.083 77.1348 mo(1.8)sh593.318 232.939 mo
593.318 221.346 li
581.645 227.142 li
593.318 232.939 li
593.318 232.939 li
cp
595.083 234.392 mo
595.083 234.507 595.026 234.564 594.911 234.564 cv
594.901 234.564 594.89 234.562 594.88 234.557 cv
594.869 234.552 594.854 234.549 594.833 234.549 cv
579.568 226.971 li
579.411 226.908 579.333 226.778 579.333 226.58 cv
579.333 226.283 li
579.333 226.075 579.411 225.94 579.568 225.877 cv
594.833 218.299 li
594.854 218.299 594.869 218.296 594.88 218.291 cv
594.89 218.286 594.901 218.283 594.911 218.283 cv
595.026 218.283 595.083 218.346 595.083 218.471 cv
595.083 234.392 li
595.083 234.392 li
cp
.149 .149 .149 rgb
f
594.755 212.111 mo
594.755 210.539 594.109 209.033 592.818 207.596 cv
592.734 207.606 592.63 207.619 592.505 207.635 cv
592.38 207.65 592.307 207.658 592.286 207.658 cv
589.911 207.658 li
587.255 207.658 585.927 208.372 585.927 209.799 cv
585.927 210.664 586.294 211.417 587.028 212.057 cv
587.763 212.697 588.641 213.182 589.661 213.51 cv
590.682 213.838 591.614 214.002 592.458 214.002 cv
593.094 214.002 593.635 213.838 594.083 213.51 cv
594.531 213.182 594.755 212.715 594.755 212.111 cv
594.755 212.111 li
cp
595.333 212.158 mo
595.333 212.845 595.169 213.46 594.841 214.002 cv
594.513 214.543 594.068 214.963 593.505 215.26 cv
592.943 215.557 592.307 215.705 591.599 215.705 cv
590.609 215.705 589.627 215.426 588.653 214.869 cv
587.679 214.312 586.888 213.572 586.278 212.65 cv
585.669 211.728 585.364 210.762 585.364 209.752 cv
585.364 209.012 585.56 208.358 585.95 207.791 cv
586.341 207.223 586.859 206.793 587.505 206.502 cv
588.151 206.21 588.844 206.064 589.583 206.064 cv
591.052 206.049 li
590.355 205.539 589.633 205.111 588.888 204.767 cv
588.143 204.424 587.369 204.158 586.568 203.971 cv
586.484 203.94 586.443 203.882 586.443 203.799 cv
586.443 203.533 li
586.443 203.398 586.51 203.33 586.645 203.33 cv
586.655 203.33 586.677 203.34 586.708 203.361 cv
587.375 203.528 588.018 203.741 588.638 204.002 cv
589.257 204.262 589.859 204.564 590.443 204.908 cv
591.026 205.252 591.552 205.632 592.02 206.049 cv
593.844 206.049 594.755 205.835 594.755 205.408 cv
594.755 205.137 594.675 204.914 594.513 204.736 cv
594.351 204.56 594.151 204.406 593.911 204.275 cv
593.672 204.145 593.552 204.059 593.552 204.017 cv
593.552 203.752 li
593.552 203.637 593.62 203.58 593.755 203.58 cv
594.12 203.58 594.474 203.791 594.818 204.213 cv
595.161 204.635 595.333 205.049 595.333 205.455 cv
595.333 205.986 595.161 206.426 594.818 206.775 cv
594.474 207.125 594.026 207.361 593.474 207.486 cv
594.058 208.173 594.513 208.918 594.841 209.721 cv
595.169 210.523 595.333 211.335 595.333 212.158 cv
595.333 212.158 li
cp
f
.137255 .121569 .12549 rgb
%ADOBeginSubsetFont: TimesNewRomanPS-BoldMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginBGZFAY+TimesNewRomanPS-BoldMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/parenleft <1C60D8A8C9B81F2C3AB57AB194F4783E7EF4F7F496E46883007B2A25484D7BF68B081B28F5DB84B2C80700F68B2197F4D5CDE8072954A020DE0D3E3CB207940EF85417B418A5B02AD6D1C3844667EA2970DE7A684C392F5B21> |-/parenright <1C60D8A8C9B81F2C3ADC97069E12CE0DE37CDD25CB66FAD03CBE544A231EDF24E1BA640B8D926E8D777032E3B9409EC63880C3259694808B94C1D41F805DA76250378D90AB113EE8D71F0E2FC8ACB9947680B1A1D4CA4C7E> |-/m <1C60D8A8C9B6B41CFC233988897FCBA530F02D147BB7AF85B9F517BBC5781B669435810CBC26041E0605B47BFA77587843C8DEA6872E30E60DD3D438C9BB8D13A068E6A5DF937094A6E524E8ED70D26936C5F28437339B2ED9ED1E128381B71F88ADC4859CF09A4E9326C601E9D02E557D79FA0D35091D0B26C944D8570192EAF995CE2C1A28E65FB43759B59A0ACE7537852DDA0B768658473254AD7FE36D21B03DE50FD99C20BFBFC79E7047873A2A479A6E5438E97C747AF67AF1E9F512A67523095886E0EB0825820E96F6092D3A65884FA0731DE0D706D105190F4ED332E7352597BF7A2CFCF63D8F04FA067E8E861F1051B59BE9483406573D7AF1F5E466CF87BB2E2A90613071400F60D968E12D6DC015950B65998FFE4EF29FD521C9F9EA96F784A5C9> |-/w <1C60D8A8C9B6079F6D1F621B170CB35947B55D052DF392E017902F6F975AC64F077E1FF87E171895F207CF85ABE44D38692537A394CBF81BF5D9ADB660D72C3F66ECCCFB2BF3BC0B4E00C87D5A73FDF948DF300A42969D859A09A97158EA71D4DC1648828FDE6171EF5FDC42A26BD894CE97EF3105467DFFB3EADC01E0D28D0C16187E8AB119B61A02CA08402054436AFEBDF728AAC9C1D014007B8B6FF14979A032B9DCC4FAD23EDAAF332D299B58FE897D391520> |-systemdict /gcheck known {setglobal} if end {end} ifendBGZFAY+TimesNewRomanPS-BoldMT /Encoding getdup 40 /parenleft putdup 41 /parenright putdup 109 /m putdup 119 /w putpop%ADOEndSubsetFont
/BGZFAY+TimesNewRomanPS-BoldMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 31{/.notdef}rp /M 19{/.notdef}rp /a /.notdef /c /d /e /f /g /h /i 2{/.notdef}rp /l /m /.notdef /o /p /.notdef /r /s /t /u /.notdef /w 4{/.notdef}rp /bar 131{/.notdef}rp]BGZFAY+TimesNewRomanPS-BoldMT nfBGZFAY+TimesNewRomanPS-BoldMT*1 [16 0 0 -16 0 0 ]msf692.083 46.0801 mo(Multifractal spectra width \(sigmoid\) | p-Model)sh3 lw
0 lc
634.083 310.161 mo
640.972 327.845 li
647.861 254.991 li
654.75 325.894 li
661.639 303.684 li
668.527 295.244 li
675.416 337.14 li
682.305 339.933 li
689.194 354.603 li
696.083 304.341 li
702.972 290.076 li
709.861 279.273 li
716.75 324.017 li
723.639 284.418 li
730.527 293.89 li
737.416 337.766 li
744.305 354.63 li
751.194 335.69 li
758.083 353.448 li
764.972 316.89 li
771.861 306.227 li
778.75 304.409 li
785.639 312.027 li
792.527 294.166 li
799.416 296.095 li
806.305 256.84 li
813.194 314.848 li
820.083 279.845 li
826.972 324.28 li
833.861 303.024 li
840.75 284.069 li
847.639 305.644 li
854.527 329.797 li
861.416 281.226 li
868.305 296.354 li
875.194 314.483 li
882.083 329.726 li
888.972 324.069 li
895.861 331.352 li
902.75 324.889 li
909.639 335.366 li
916.527 323.889 li
923.416 320.471 li
930.305 315.222 li
937.194 323.318 li
944.083 303.167 li
950.972 303.096 li
957.861 337.839 li
964.75 311.076 li
971.639 283.067 li
978.527 336.121 li
985.416 353.997 li
992.305 264.495 li
999.194 319.603 li
1006.08 331.798 li
1012.97 331.65 li
1019.86 287.864 li
1026.75 246.508 li
1033.64 329.005 li
1040.53 248.152 li
1047.42 315.5 li
1054.3 325.443 li
1061.19 288.651 li
1068.08 315.955 li
.792157 0 .12549 rgb
@
634.083 362.969 mo
640.972 363.724 li
647.861 368.966 li
654.75 367.667 li
661.639 370.602 li
668.527 375.053 li
675.416 370.409 li
682.305 370.19 li
689.194 373.499 li
696.083 373.111 li
702.972 376.077 li
709.861 373.157 li
716.75 369.689 li
723.639 371.205 li
730.527 365.994 li
737.416 366.388 li
744.305 364.173 li
751.194 372.169 li
758.083 364.957 li
764.972 370.041 li
771.861 373.378 li
778.75 371.467 li
785.639 376.263 li
792.527 365.822 li
799.416 371.68 li
806.305 366.438 li
813.194 373.777 li
820.083 370.965 li
826.972 365.624 li
833.861 369.095 li
840.75 365.509 li
847.639 369.725 li
854.527 376.527 li
861.416 377.101 li
868.305 377.656 li
875.194 376.18 li
882.083 377.986 li
888.972 380.953 li
895.861 379.665 li
902.75 377.896 li
909.639 380.616 li
916.527 379.866 li
923.416 383.009 li
930.305 382.491 li
937.194 380.208 li
944.083 381.399 li
950.972 375.155 li
957.861 378.144 li
964.75 375.877 li
971.639 382.349 li
978.527 378.201 li
985.416 378.676 li
992.305 383.481 li
999.194 380.864 li
1006.08 384.131 li
1012.97 379.675 li
1019.86 380.934 li
1026.75 376.583 li
1033.64 381.25 li
1040.53 381.269 li
1047.42 374.162 li
1054.3 375.455 li
1061.19 375.503 li
1068.08 379.088 li
.572549 .772549 .870588 rgb
@
634.083 374.334 mo
640.972 374.334 li
647.861 374.334 li
654.75 374.334 li
661.639 374.334 li
668.527 374.334 li
675.416 374.334 li
682.305 374.334 li
689.194 374.334 li
696.083 374.334 li
702.972 374.334 li
709.861 374.334 li
716.75 374.334 li
723.639 374.334 li
730.527 374.334 li
737.416 374.334 li
744.305 374.334 li
751.194 374.334 li
758.083 374.334 li
764.972 374.334 li
771.861 374.334 li
778.75 374.334 li
785.639 374.334 li
792.527 374.334 li
799.416 374.334 li
806.305 374.334 li
813.194 374.334 li
820.083 374.334 li
826.972 374.334 li
833.861 374.334 li
840.75 374.334 li
847.639 374.334 li
854.527 377.608 li
861.416 377.608 li
868.305 377.608 li
875.194 377.608 li
882.083 377.608 li
888.972 377.608 li
895.861 377.608 li
902.75 377.608 li
909.639 377.608 li
916.527 377.608 li
923.416 377.608 li
930.305 377.608 li
937.194 377.608 li
944.083 377.608 li
950.972 377.608 li
957.861 377.608 li
964.75 377.608 li
971.639 377.608 li
978.527 377.608 li
985.416 377.608 li
992.305 377.608 li
999.194 377.608 li
1006.08 377.608 li
1012.97 377.608 li
1019.86 377.608 li
1026.75 377.608 li
1033.64 377.608 li
1040.53 377.608 li
1047.42 377.608 li
1054.3 377.608 li
1061.19 377.608 li
1068.08 377.608 li
.0196078 .443137 .690196 rgb
@
1028.08 112.08 mo
1028.08 59.0801 li
890.583 59.0801 li
890.583 112.08 li
1028.08 112.08 li
cp
1 1 1 rgb
f
.137255 .121569 .12549 rgb
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginBGZFAX+TimesNewRomanPSMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/asterisk <1C60D8A8C9B7A73DB96A9BE2741D30049DF7EB3D49542C4E997965F360CDF01353F56E0042CFF11E8B4F51F996B11FDEE72CFCC78686D676EEC3484B7F19B8A5C84F247A3A01B806F435D2D29EB7FEA972206EB1E521EB68924398589A105B8618C067AD5089479518D26E7069132D6367F6E8567A6BCA200B56FA0959E88530C6CDAF56D201F0260F15F65A2F68978DC9FFA3B6BE0039E2632239B9B3D3A614215C65ECCC4826872DD75E382DBCECEC495BD438943C0B852EF66581DC9AE333E3E59CE06DBC76FD5288764EACC6D920257C19C8418F9CECC987960A35E70D830E3345E4924D24BADA5407D6F188B0846870A7410D17893669E9BD70541F6F1E92E22F0668DAE327A0157A5AA01532384766BC967CFD08613EFCBB67EF2E876EB0971F185AB15CF5D35DC2053C1F2C5FC1E76272F35AEEE47E08D4B4806B92E12E31A114B54D9E2A54907008A32B197FB6D5479DC7B18E574EAAD480B5B2182ADAF4FAC2C9FC56D0B1B40EB580> |-systemdict /gcheck known {setglobal} if end {end} ifendBGZFAX+TimesNewRomanPSMT /Encoding getdup 42 /asterisk putpop%ADOEndSubsetFont
/BGZFAX+TimesNewRomanPSMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /asterisk 2{/.notdef}rp /hyphen /period /.notdef /zero /one /two /.notdef /four /five /six /.notdef /eight 8{/.notdef}rp /A /.notdef /C /D /.notdef /F 3{/.notdef}rp /J 2{/.notdef}rp /M 6{/.notdef}rp /T 12{/.notdef}rp /a /b 2{/.notdef}rp /e /f /.notdef /h /i 3{/.notdef}rp /m /n 3{/.notdef}rp /r /s 140{/.notdef}rp]BGZFAX+TimesNewRomanPSMT nfBGZFAX+TimesNewRomanPSMT*1 [14 0 0 -14 0 0 ]msf927.583 73.5801 mo(MF-DFA*)sh894.583 69.0801 mo
924.583 69.0801 li
.792157 0 .12549 rgb
@
.137255 .121569 .12549 rgb
BGZFAX+TimesNewRomanPSMT*1 [14 0 0 -14 0 0 ]msf927.583 90.0801 mo(MF-DMA*)sh894.583 85.5801 mo
924.583 85.5801 li
.572549 .772549 .870588 rgb
@
.137255 .121569 .12549 rgb
BGZFAX+TimesNewRomanPSMT*1 [14 0 0 -14 0 0 ]msf927.583 106.58 mo(Chhabra-Jensen*)sh894.583 102.08 mo
924.583 102.08 li
.0196078 .443137 .690196 rgb
@
1.5 lw
0 lj
890.583 112.08 mo
890.583 59.0801 li
1028.08 59.0801 li
1028.08 112.08 li
890.583 112.08 li
cp
.149 .149 .149 rgb
@
1.08312 20.5801 mo
561.083 20.5801 li
561.083 440.58 li
1.08312 440.58 li
1.08312 20.5801 li
cp
1 1 1 rgb
f
74.0831 386.08 mo
508.083 386.08 li
508.083 52.0801 li
74.0831 52.0801 li
74.0831 386.08 li
cp
f
2 lc
1 lj
480.527 52.0801 mo
480.527 56.4199 li
411.639 52.0801 mo
411.639 56.4199 li
342.75 52.0801 mo
342.75 56.4199 li
273.861 52.0801 mo
273.861 56.4199 li
204.972 52.0801 mo
204.972 56.4199 li
136.083 52.0801 mo
136.083 56.4199 li
480.527 386.08 mo
480.527 381.74 li
411.639 386.08 mo
411.639 381.74 li
342.75 386.08 mo
342.75 381.74 li
273.861 386.08 mo
273.861 381.74 li
204.972 386.08 mo
204.972 381.74 li
136.083 386.08 mo
136.083 381.74 li
74.0831 52.0801 mo
508.083 52.0801 li
74.0831 386.08 mo
508.083 386.08 li
.149 .149 .149 rgb
@
.301961 .301961 .309804 rgb
BGZFAX+TimesNewRomanPSMT*1 [20 0 0 -20 0 0 ]msf126.083 410.08 mo(20)[10 0 ]xsh194.974 410.08 mo(40)[10 0 ]xsh263.856 410.08 mo(60)[10 0 ]xsh332.747 410.08 mo(80)[10 0 ]xsh396.638 410.08 mo(100)sh465.528 410.08 mo(120)shBGZFAX+TimesNewRomanPSMT*1 [22 0 0 -22 0 0 ]msf253.083 435.58 mo(Time \(s\))sh508.083 70.6362 mo
503.743 70.6362 li
508.083 107.747 mo
503.743 107.747 li
508.083 144.858 mo
503.743 144.858 li
508.083 181.969 mo
503.743 181.969 li
508.083 219.08 mo
503.743 219.08 li
508.083 256.191 mo
503.743 256.191 li
508.083 293.302 mo
503.743 293.302 li
508.083 330.413 mo
503.743 330.413 li
508.083 367.524 mo
503.743 367.524 li
74.0831 70.6362 mo
78.423 70.6362 li
74.0831 107.747 mo
78.423 107.747 li
74.0831 144.858 mo
78.423 144.858 li
74.0831 181.969 mo
78.423 181.969 li
74.0831 219.08 mo
78.423 219.08 li
74.0831 256.191 mo
78.423 256.191 li
74.0831 293.302 mo
78.423 293.302 li
74.0831 330.413 mo
78.423 330.413 li
74.0831 367.524 mo
78.423 367.524 li
508.083 386.08 mo
508.083 52.0801 li
74.0831 386.08 mo
74.0831 52.0801 li
.149 .149 .149 rgb
@
.301961 .301961 .309804 rgb
BGZFAX+TimesNewRomanPSMT*1 [20 0 0 -20 0 0 ]msf43.083 374.025 mo(0.2)sh43.083 336.908 mo(0.4)sh43.083 299.799 mo(0.6)sh43.083 262.689 mo(0.8)sh58.083 225.58 mo(1)sh43.083 188.471 mo(1.2)sh43.083 151.354 mo(1.4)sh43.083 114.244 mo(1.6)sh43.083 77.1348 mo(1.8)sh33.317 232.939 mo
33.317 221.346 li
21.6451 227.142 li
33.317 232.939 li
33.317 232.939 li
cp
35.0831 234.392 mo
35.0831 234.507 35.026 234.564 34.9112 234.564 cv
34.9005 234.564 34.8903 234.562 34.88 234.557 cv
34.8693 234.552 34.8536 234.549 34.8331 234.549 cv
19.567 226.971 li
19.4112 226.908 19.3331 226.778 19.3331 226.58 cv
19.3331 226.283 li
19.3331 226.075 19.4112 225.94 19.567 225.877 cv
34.8331 218.299 li
34.8536 218.299 34.8693 218.296 34.88 218.291 cv
34.8903 218.286 34.9005 218.283 34.9112 218.283 cv
35.026 218.283 35.0831 218.346 35.0831 218.471 cv
35.0831 234.392 li
35.0831 234.392 li
cp
.149 .149 .149 rgb
f
34.755 212.111 mo
34.755 210.539 34.109 209.033 32.817 207.596 cv
32.734 207.606 32.63 207.619 32.505 207.635 cv
32.38 207.65 32.3068 207.658 32.2862 207.658 cv
29.9112 207.658 li
27.255 207.658 25.9269 208.372 25.9269 209.799 cv
25.9269 210.664 26.2941 211.417 27.0279 212.057 cv
27.7628 212.697 28.6403 213.182 29.6612 213.51 cv
30.6818 213.838 31.6139 214.002 32.4581 214.002 cv
33.0934 214.002 33.6349 213.838 34.0831 213.51 cv
34.5314 213.182 34.755 212.715 34.755 212.111 cv
34.755 212.111 li
cp
35.3331 212.158 mo
35.3331 212.845 35.1691 213.46 34.8409 214.002 cv
34.5133 214.543 34.068 214.963 33.505 215.26 cv
32.9425 215.557 32.3072 215.705 31.5992 215.705 cv
30.609 215.705 29.6271 215.426 28.6529 214.869 cv
27.6793 214.312 26.8873 213.572 26.2779 212.65 cv
25.6686 211.728 25.3639 210.762 25.3639 209.752 cv
25.3639 209.012 25.5597 208.358 25.9503 207.791 cv
26.3409 207.223 26.859 206.793 27.505 206.502 cv
28.151 206.21 28.8439 206.064 29.5831 206.064 cv
31.0519 206.049 li
30.3541 205.539 29.6329 205.111 28.8883 204.767 cv
28.1427 204.424 27.3693 204.158 26.567 203.971 cv
26.4835 203.94 26.442 203.882 26.442 203.799 cv
26.442 203.533 li
26.442 203.398 26.5099 203.33 26.6451 203.33 cv
26.6559 203.33 26.6769 203.34 26.7081 203.361 cv
27.3746 203.528 28.0182 203.741 28.6383 204.002 cv
29.2574 204.262 29.8585 204.564 30.442 204.908 cv
31.0255 205.252 31.5514 205.632 32.0201 206.049 cv
33.8434 206.049 34.755 205.835 34.755 205.408 cv
34.755 205.137 34.6744 204.914 34.5133 204.736 cv
34.3512 204.56 34.1505 204.406 33.9112 204.275 cv
33.672 204.145 33.5519 204.059 33.5519 204.017 cv
33.5519 203.752 li
33.5519 203.637 33.6197 203.58 33.755 203.58 cv
34.1197 203.58 34.4737 203.791 34.817 204.213 cv
35.1612 204.635 35.3331 205.049 35.3331 205.455 cv
35.3331 205.986 35.1612 206.426 34.817 206.775 cv
34.4737 207.125 34.026 207.361 33.4742 207.486 cv
34.0572 208.173 34.5133 208.918 34.8409 209.721 cv
35.1691 210.523 35.3331 211.335 35.3331 212.158 cv
35.3331 212.158 li
cp
f
.137255 .121569 .12549 rgb
BGZFAY+TimesNewRomanPS-BoldMT*1 [16 0 0 -16 0 0 ]msf166.083 46.0801 mo(Multifractal spectra width | p-Model)sh3 lw
0 lc
2 lj
[3 3 ] 0 dsh
473.663 386.12 mo
480.527 296.554 li
487.416 356.878 li
494.305 330.432 li
501.194 383.21 li
508.083 368.294 li
400.41 386.12 mo
404.75 366.361 li
411.639 318.202 li
418.527 339.694 li
425.416 373.2 li
432.305 326.216 li
439.194 380.691 li
446.083 315.37 li
452.972 368.73 li
459.861 385.581 li
466.75 301.148 li
473.613 386.12 li
377.461 386.12 mo
384.083 356.99 li
390.972 374.091 li
394.478 386.12 li
74.0831 354.057 mo
80.9723 377.892 li
87.861 338.513 li
94.7501 342.747 li
101.639 298.276 li
108.527 320.078 li
115.416 344.55 li
122.305 368.685 li
129.194 380.634 li
136.083 333.462 li
142.972 336.124 li
149.861 320.479 li
156.75 359.528 li
163.639 296.906 li
170.527 308.749 li
177.416 373.933 li
184.305 335.19 li
191.194 369.485 li
198.083 333.222 li
204.972 352.084 li
211.861 343.339 li
218.75 370.903 li
225.639 267.033 li
232.527 376.588 li
239.416 344.522 li
246.305 297.861 li
253.194 314.956 li
260.083 300.032 li
266.972 319.337 li
273.861 363.126 li
280.75 363.41 li
287.639 340.026 li
294.527 359.102 li
301.416 352.623 li
308.305 383.621 li
315.194 353.51 li
322.083 371.261 li
328.972 381.97 li
335.861 356.444 li
342.75 353.804 li
349.639 377.881 li
356.527 354.541 li
363.416 342.034 li
370.305 358.006 li
376.918 386.12 li
.792157 0 .12549 rgb
@
404.839 52.04 mo
411.639 116.26 li
418.527 77.209 li
425.416 95.1553 li
432.305 130.452 li
439.194 124.685 li
446.083 127.497 li
452.972 94.208 li
459.861 109.713 li
466.75 84.4331 li
473.639 96.7681 li
480.527 96.6738 li
487.416 73.3149 li
494.305 105.24 li
501.194 82.8398 li
508.083 110.128 li
74.0831 265.406 mo
80.9723 256.957 li
87.861 270.072 li
94.7501 269.114 li
101.639 271.746 li
108.527 280.666 li
115.416 275.853 li
122.305 260.889 li
129.194 275.057 li
136.083 278.037 li
142.972 280.884 li
149.861 277.023 li
156.75 269.531 li
163.639 269.698 li
170.527 256.154 li
177.416 258.873 li
184.305 243.895 li
191.194 277.731 li
198.083 252.238 li
204.972 271.082 li
211.861 278.599 li
218.75 271.696 li
225.639 281.128 li
232.527 264.357 li
239.416 269.554 li
246.305 253.279 li
253.194 265.791 li
260.083 267.055 li
266.972 250.339 li
273.861 262.225 li
280.75 252.504 li
287.639 267.871 li
294.527 102.526 li
301.416 80.7402 li
308.305 104.097 li
315.194 107.643 li
322.083 111.92 li
328.972 130.035 li
335.861 122.122 li
342.75 99.8999 li
349.639 121.319 li
356.527 127.478 li
363.416 132.409 li
370.305 119.901 li
377.194 108.741 li
384.083 102.159 li
390.972 85.645 li
397.861 84.4072 li
404.574 52.04 li
.572549 .772549 .870588 rgb
@
74.0831 268.016 mo
80.9723 268.016 li
87.861 268.016 li
94.7501 268.016 li
101.639 268.016 li
108.527 268.016 li
115.416 268.016 li
122.305 268.016 li
129.194 268.016 li
136.083 268.016 li
142.972 268.016 li
149.861 268.016 li
156.75 268.016 li
163.639 268.016 li
170.527 268.016 li
177.416 268.016 li
184.305 268.016 li
191.194 268.016 li
198.083 268.016 li
204.972 268.016 li
211.861 268.016 li
218.75 268.016 li
225.639 268.016 li
232.527 268.016 li
239.416 268.016 li
246.305 268.016 li
253.194 268.016 li
260.083 268.016 li
266.972 268.016 li
273.861 268.016 li
280.75 268.016 li
287.639 268.016 li
294.527 110.537 li
301.416 110.537 li
308.305 110.537 li
315.194 110.537 li
322.083 110.537 li
328.972 110.537 li
335.861 110.537 li
342.75 110.537 li
349.639 110.537 li
356.527 110.537 li
363.416 110.537 li
370.305 110.537 li
377.194 110.537 li
384.083 110.537 li
390.972 110.537 li
397.861 110.537 li
404.75 110.537 li
411.639 110.537 li
418.527 110.537 li
425.416 110.537 li
432.305 110.537 li
439.194 110.537 li
446.083 110.537 li
452.972 110.537 li
459.861 110.537 li
466.75 110.537 li
473.639 110.537 li
480.527 110.537 li
487.416 110.537 li
494.305 110.537 li
501.194 110.537 li
508.083 110.537 li
.0196078 .443137 .690196 rgb
@
500.583 245.58 mo
500.583 192.58 li
370.083 192.58 li
370.083 245.58 li
500.583 245.58 li
cp
1 1 1 rgb
f
.137255 .121569 .12549 rgb
BGZFAX+TimesNewRomanPSMT*1 [14 0 0 -14 0 0 ]msf407.083 207.08 mo(MF-DFA)sh374.083 202.58 mo
404.083 202.58 li
.792157 0 .12549 rgb
@
.137255 .121569 .12549 rgb
BGZFAX+TimesNewRomanPSMT*1 [14 0 0 -14 0 0 ]msf407.083 223.58 mo(MF-DMA)sh374.083 219.08 mo
404.083 219.08 li
.572549 .772549 .870588 rgb
@
.137255 .121569 .12549 rgb
BGZFAX+TimesNewRomanPSMT*1 [14 0 0 -14 0 0 ]msf407.083 240.08 mo(Chhabra-Jensen)sh374.083 235.58 mo
404.083 235.58 li
.0196078 .443137 .690196 rgb
@
1.5 lw
0 lj
[] 0 dsh
370.083 245.58 mo
370.083 192.58 li
500.583 192.58 li
500.583 245.58 li
370.083 245.58 li
cp
.149 .149 .149 rgb
@
561.083 442.791 mo
1121.08 442.791 li
1121.08 862.791 li
561.083 862.791 li
561.083 442.791 li
cp
1 1 1 rgb
f
634.083 808.291 mo
1068.08 808.291 li
1068.08 474.291 li
634.083 474.291 li
634.083 808.291 li
cp
f
2 lc
1 lj
1040.53 474.291 mo
1040.53 478.63 li
971.639 474.291 mo
971.639 478.63 li
902.75 474.291 mo
902.75 478.63 li
833.861 474.291 mo
833.861 478.63 li
764.972 474.291 mo
764.972 478.63 li
696.083 474.291 mo
696.083 478.63 li
1040.53 808.291 mo
1040.53 803.95 li
971.639 808.291 mo
971.639 803.95 li
902.75 808.291 mo
902.75 803.95 li
833.861 808.291 mo
833.861 803.95 li
764.972 808.291 mo
764.972 803.95 li
696.083 808.291 mo
696.083 803.95 li
634.083 474.291 mo
1068.08 474.291 li
634.083 808.291 mo
1068.08 808.291 li
.149 .149 .149 rgb
@
.301961 .301961 .309804 rgb
BGZFAX+TimesNewRomanPSMT*1 [20 0 0 -20 0 0 ]msf686.083 832.291 mo(20)[10 0 ]xsh754.974 832.291 mo(40)[10 0 ]xsh823.856 832.291 mo(60)[10 0 ]xsh892.747 832.291 mo(80)[10 0 ]xsh956.638 832.291 mo(100)sh1025.53 832.291 mo(120)shBGZFAX+TimesNewRomanPSMT*1 [22 0 0 -22 0 0 ]msf813.083 857.791 mo(Time \(s\))sh1068.08 499.032 mo
1063.74 499.032 li
1068.08 560.883 mo
1063.74 560.883 li
1068.08 622.734 mo
1063.74 622.734 li
1068.08 684.587 mo
1063.74 684.587 li
1068.08 746.438 mo
1063.74 746.438 li
1068.08 808.291 mo
1063.74 808.291 li
634.083 499.032 mo
638.423 499.032 li
634.083 560.883 mo
638.423 560.883 li
634.083 622.734 mo
638.423 622.734 li
634.083 684.587 mo
638.423 684.587 li
634.083 746.438 mo
638.423 746.438 li
634.083 808.291 mo
638.423 808.291 li
1068.08 808.291 mo
1068.08 474.291 li
634.083 808.291 mo
634.083 474.291 li
.149 .149 .149 rgb
@
.301961 .301961 .309804 rgb
BGZFAX+TimesNewRomanPSMT*1 [20 0 0 -20 0 0 ]msf618.083 814.791 mo(0)sh603.083 752.939 mo(0.5)sh618.083 691.08 mo(1)sh603.083 629.236 mo(1.5)sh618.083 567.384 mo(2)sh603.083 505.525 mo(2.5)sh593.318 652.149 mo
593.318 640.557 li
581.645 646.353 li
593.318 652.149 li
593.318 652.149 li
cp
595.083 653.603 mo
595.083 653.717 595.026 653.774 594.911 653.774 cv
594.901 653.774 594.89 653.772 594.88 653.768 cv
594.869 653.762 594.854 653.76 594.833 653.76 cv
579.568 646.182 li
579.411 646.119 579.333 645.988 579.333 645.791 cv
579.333 645.494 li
579.333 645.286 579.411 645.15 579.568 645.087 cv
594.833 637.51 li
594.854 637.51 594.869 637.507 594.88 637.501 cv
594.89 637.496 594.901 637.494 594.911 637.494 cv
595.026 637.494 595.083 637.556 595.083 637.682 cv
595.083 653.603 li
595.083 653.603 li
cp
.149 .149 .149 rgb
f
.301961 .301961 .309804 rgb
BGZFAX+TimesNewRomanPSMT*1 [0 -22 -22 0 0 0 ]msf595.083 635.791 mo(f)sh.137255 .121569 .12549 rgb
BGZFAY+TimesNewRomanPS-BoldMT*1 [16 0 0 -16 0 0 ]msf690.083 468.291 mo(Multifractal spectra height \(sigmoid\) | p-Model)sh3 lw
0 lc
647.901 474.25 mo
654.75 598.044 li
661.639 529.832 li
668.527 544.428 li
675.416 628.854 li
682.305 634.354 li
689.194 676.01 li
696.083 554.497 li
702.972 514.377 li
709.861 499.979 li
716.75 602.072 li
723.639 525.069 li
730.527 519.654 li
737.416 624.207 li
744.305 670.979 li
751.194 621.575 li
758.083 657.413 li
764.972 563.372 li
771.861 580.63 li
778.75 507.44 li
785.639 581.021 li
792.527 538.865 li
799.416 546.058 li
806.305 484.572 li
813.194 583.563 li
820.083 500.643 li
826.972 601.565 li
833.861 553.68 li
840.75 508.402 li
847.639 563.379 li
854.527 627.293 li
861.416 512.011 li
868.305 577.625 li
875.194 605.999 li
882.083 619.427 li
888.972 613.965 li
895.861 620.588 li
902.75 629.105 li
909.639 648.762 li
916.527 628.545 li
923.416 590.149 li
930.305 608.618 li
937.194 630.693 li
944.083 566.039 li
950.972 542.894 li
957.861 621.803 li
964.75 574.1 li
971.639 567.714 li
978.527 632.23 li
985.416 648.375 li
992.305 535.201 li
999.194 609.667 li
1006.08 628.232 li
1012.97 633.703 li
1019.86 508.963 li
1026.75 511.356 li
1033.64 622.167 li
1040.53 508.58 li
1047.42 613.389 li
1054.3 594.243 li
1061.19 576.013 li
1068.08 590.734 li
634.083 571.247 mo
640.972 612.876 li
647.825 474.25 li
.792157 0 .12549 rgb
@
634.083 737.239 mo
640.972 744.179 li
647.861 745.748 li
654.75 737.96 li
661.639 740.079 li
668.527 751.411 li
675.416 743.945 li
682.305 749.456 li
689.194 747.394 li
696.083 744.239 li
702.972 760.929 li
709.861 756.198 li
716.75 749.128 li
723.639 750.519 li
730.527 743.505 li
737.416 747.515 li
744.305 737.836 li
751.194 755.937 li
758.083 745.963 li
764.972 750.48 li
771.861 760.763 li
778.75 749.897 li
785.639 755.247 li
792.527 744.542 li
799.416 757.321 li
806.305 746.054 li
813.194 753.628 li
820.083 759.933 li
826.972 735.079 li
833.861 731.603 li
840.75 741.303 li
847.639 749.515 li
854.527 715.326 li
861.416 718.26 li
868.305 714.482 li
875.194 706.793 li
882.083 711.38 li
888.972 724.25 li
895.861 719.783 li
902.75 713.824 li
909.639 719.225 li
916.527 720.081 li
923.416 730.41 li
930.305 731.905 li
937.194 723.188 li
944.083 729.714 li
950.972 704.782 li
957.861 723.205 li
964.75 702.496 li
971.639 732.956 li
978.527 720.566 li
985.416 720.245 li
992.305 734.976 li
999.194 721.762 li
1006.08 736.536 li
1012.97 725.381 li
1019.86 730.337 li
1026.75 708.071 li
1033.64 722.87 li
1040.53 729.53 li
1047.42 699.092 li
1054.3 700.819 li
1061.19 705.245 li
1068.08 722.223 li
.572549 .772549 .870588 rgb
@
634.083 753.929 mo
640.972 753.929 li
647.861 753.929 li
654.75 753.929 li
661.639 753.929 li
668.527 753.929 li
675.416 753.929 li
682.305 753.929 li
689.194 753.929 li
696.083 753.929 li
702.972 753.929 li
709.861 753.929 li
716.75 753.929 li
723.639 753.929 li
730.527 753.929 li
737.416 753.929 li
744.305 753.929 li
751.194 753.929 li
758.083 753.929 li
764.972 753.929 li
771.861 753.929 li
778.75 753.929 li
785.639 753.929 li
792.527 753.929 li
799.416 753.929 li
806.305 753.929 li
813.194 753.929 li
820.083 753.929 li
826.972 753.929 li
833.861 753.929 li
840.75 753.929 li
847.639 753.929 li
854.527 711.146 li
861.416 711.146 li
868.305 711.146 li
875.194 711.146 li
882.083 711.146 li
888.972 711.146 li
895.861 711.146 li
902.75 711.146 li
909.639 711.146 li
916.527 711.146 li
923.416 711.146 li
930.305 711.146 li
937.194 711.146 li
944.083 711.146 li
950.972 711.146 li
957.861 711.146 li
964.75 711.146 li
971.639 711.146 li
978.527 711.146 li
985.416 711.146 li
992.305 711.146 li
999.194 711.146 li
1006.08 711.146 li
1012.97 711.146 li
1019.86 711.146 li
1026.75 711.146 li
1033.64 711.146 li
1040.53 711.146 li
1047.42 711.146 li
1054.3 711.146 li
1061.19 711.146 li
1068.08 711.146 li
.0196078 .443137 .690196 rgb
@
1028.08 801.291 mo
1028.08 748.291 li
890.583 748.291 li
890.583 801.291 li
1028.08 801.291 li
cp
1 1 1 rgb
f
.137255 .121569 .12549 rgb
BGZFAX+TimesNewRomanPSMT*1 [14 0 0 -14 0 0 ]msf927.583 762.791 mo(MF-DFA*)sh894.583 758.291 mo
924.583 758.291 li
.792157 0 .12549 rgb
@
.137255 .121569 .12549 rgb
BGZFAX+TimesNewRomanPSMT*1 [14 0 0 -14 0 0 ]msf927.583 779.291 mo(MF-DMA*)sh894.583 774.791 mo
924.583 774.791 li
.572549 .772549 .870588 rgb
@
.137255 .121569 .12549 rgb
BGZFAX+TimesNewRomanPSMT*1 [14 0 0 -14 0 0 ]msf927.583 795.791 mo(Chhabra-Jensen*)sh894.583 791.291 mo
924.583 791.291 li
.0196078 .443137 .690196 rgb
@
1.5 lw
0 lj
890.583 801.291 mo
890.583 748.291 li
1028.08 748.291 li
1028.08 801.291 li
890.583 801.291 li
cp
.149 .149 .149 rgb
@
0 0 0 rgb
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginBGZFAX+TimesNewRomanPSMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/B <1C60D8A8C9B64EDFFBC13662E45548907DF94CFDD8366168A19798D3F94023374D4D2C86938E32D7DB9C1872F3A204253AB72EA5DE94FC03994C8EF8A3AEA69543654A5C81A183CE8AEAD100B0BA927EF2453AE33B886ED98847317AAC2483A7B07D884E6BA01DCB84EDD0DBB4BCDE82582971377C63466C51717F481B412F62082ABE2DA40B3D1CD64A6F92915DAB718445366AAC40CD207CDC2AEAFBF75F78F4F875F819FE068F712E647D09F9C9585654CB217F940FB0CC4A0399BD16E20306B0AE361121402EB02A27DB6252E098ADE7CC6B62128FF27D9B35E955978F8F1CC87FEE6B14877366567A52B860F7D53BC608D1A75802EE31B412> |-systemdict /gcheck known {setglobal} if end {end} ifendBGZFAX+TimesNewRomanPSMT /Encoding getdup 66 /B putpop%ADOEndSubsetFont
/BGZFAX+TimesNewRomanPSMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /asterisk 2{/.notdef}rp /hyphen /period /.notdef /zero /one /two /.notdef /four /five /six /.notdef /eight 8{/.notdef}rp /A /B /C /D /.notdef /F 3{/.notdef}rp /J 2{/.notdef}rp /M 6{/.notdef}rp /T 12{/.notdef}rp /a /b 2{/.notdef}rp /e /f /.notdef /h /i 3{/.notdef}rp /m /n 3{/.notdef}rp /r /s 140{/.notdef}rp]BGZFAX+TimesNewRomanPSMT nfBGZFAX+TimesNewRomanPSMT*1 [36 0 0 -36 0 0 ]msf0 29.918 mo(\(A\))sh569.969 29.918 mo(\(B\))sh569.969 450.915 mo(\(D\))sh0 450.915 mo(\(C\))sh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/BGZFAY+TimesNewRomanPS-BoldMT*1 uf/BGZFAY+TimesNewRomanPS-BoldMT uf/TimesNewRomanPS-BoldMT uf/BGZFAX+TimesNewRomanPSMT*1 uf/BGZFAX+TimesNewRomanPSMT uf/TimesNewRomanPSMT ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 17.0%%AI8_CreatorVersion: 22.0.1%%For: (Lucas Fran\615a) ()%%Title: (sup_pModel.eps)%%CreationDate: 12/12/2017 02:12%%Canvassize: 16383%AI9_DataStream%Gb!j.H%5'ngAlQ6JF?ko2+o,;5ue=j74CiA%:Z9@_;9P+5L*n+pQ.IhU:Ss*ch"kH]7(,ZmTf@R"LgJ)gb&ep`@/@r.q*(bG++KF%Bpo2Y</e,nh,fepZJJ^u(2/_ha*F,1a/Bh;,ttS&!;>[?Z9gOj;\WIM"&SR3rcYFq2Ka/q=4Z]mEjes!$%)*,]WbK!&NCuh+-bGp%q56A;PP\;-.FN7A!D?X\\[&qHrbO.KntOtLAXB_h[0>+bFq::[jQu#P[@0gS_*<MqQ==-61/k!F3gVdK3Z=mR:7CEZ\!,M'AioH1%.M)k9^tmBj@d@n@p]7J4cZ"*@>FL1-9kCX3&d1$VWA]W:ZREUao[!Ea:e$ZA7[5orjl47WJQ8&;\ZAQXHY(NVURXTU'ZV1)4p982%k,Xo_;31jS<%K#q7g0C:)P=F&J7#[@k34Q=j4Ph6:g=]J2B(\oCn0T8!H&2`CH]lL1#jsBAS>BFA"rmhY[8jM5Z+do7<R(Lr!ao?%ZReQ(=+$gKSLNj[@KI:a^g.#-Ciqa7Ami<$^,2%95g_gMGf:%oZ8tlA^j;?R/JMj7c4^UOEu"M;!_j4lUZ:/]&GuUf=_n)Sh8unu%#<3.;lAdb/3f]O5h:bJ([$GRI9Sd7ii@$93*#4H11saojL5gq5Naq)`,7#i5VnsEJdssB3\+;?.c>\S1cH\n%WbLKn,=S,>'QjG`%7EG<)&U.Y<kdE5/b.rs#L@@Rs6um9Ta)teC20AsgQdFe7mhXHq^p*MlA*<@i;GA"l!<1ArG"Q.q;tgR]0@%s"*cQ5D*\9-U+re<!%d507r<DB&UKr[pAFDD;TGp,tVI0"oH^`n'>+0pd:]TL%uBT2)("oi/[rn8c9Ri@M-NP\bWK<Kk,?ZS652]@D=^hYq)$BIZOpo#IS%Zgh0<#?Pmbgu:<'MW<VENft^i;\7k*6%E_nMstOKJ?&eRY(E;(.pS@__,\#c4>W=V7rgW"7Zu\,8`D^S[Nr]LP(_/t'OuGD4W#D-%$I:!<UJ[L"^;<m3-hn$M6(S@[p_`&t^;;ah,PVWA-Bc1-6D!*cgk$N^<sT,U#t'Fe_,n]:I#!%l:Cnn>-H6Qt6,)8->U)gZ+41Up%*6T0l&PEGEi\N=PR!MFfV@@$jPS5("(&/<BK)EGd#RP8XF,c5hNPThK$M$\DN2;-PL&Abg\-9F\qM28AEju@g_Gu[^pklJ8XTZf^%j+eJ.%7&'mr=GN.qQSK..P*M&(X+n:*`A$__K[eGU+a02r4t7P4(=V>4*W[G)BX\2_,n,RgGe1(b64FF?f;pES]sk[S+mJZ*6*N2%S(KF"'k2$AEbm2W(5Q</SRT->lEJbm?7\$+3RJ,k%FYeg&aU>q4s(leJ!b9CRFmt5cEV1>":>$8q_c#,T4;pUD`'Y8aN:Z7Cu*%t%%Jtcj)`C)Hh9[p>ZCqLo&Wn>$gQ2W5Q-`1n@^u2,RO6u3VH<[%s"OpG@_C_cR-NY&nW*WcmT9nd1#DG-4H?n1GPoKsWIj:>DI32R%7=<$ua+)bnhDX6\T?WqQj#tCDr[S]P[dfCX./a[sF/V1qMY2k9aVK=1r%W#JNId.9MA:Cc+3dGV4<Mn-4PCDo.E4mk..%k6O6=?N%/3Ft`i#\@,XonP(\520q$s[SL_L%5!pbP#OmK'RkK*CdZWrP?Q/tplZ<Ij6T(`]$aWrRl:`Po[H&/*bF:a%a&/`g]85gj$H3ikFO%lku`O:N-t<Ar$XsE$^a'8;j.ZL&7Rn+AA6C3'RA_:ma5X)oGXKcReu&c\C0W';c+SCUEO/cVo+!)tJtC(pJ3=R,OP/6JUce(=@&.%bL7G[O2Z==(,mp7gtH'Hfh2a&An'K.X<D4sN.uH'3>"fBa&4^hCVgZ>TONan:aHMZ^#pPVEg5/9OV=uFM#OYQFu[RZG=";A(fV]n%i'4`r8beL;(Q%V]AIa_-U&\b;=:Lp%_D!f/Jq9OZB!N=mN?ZHY8/$E5]bZK"d\R-5fc#6)4c4GEh%HI1U'#?midbZ1!W;+Tg.0]r%[l"!uq-uDc^>Uf^[g4-JqE'b2#nS2-a0b=eQ5t]HE+>n%Q&moAT$/,$Us1,fZ(28scDA6]f\)QaE(jHA\KPQm+*fo)pFmS]:PY[X%@g`P1Ctt+9p+ZW87RuATRb3C'jWI0b/Jpu)_q(2'NeJl6RT;bS`sZ#C#R@Xg5e.&VYpRJ#$-2%PjJL=\AA6*AXVBb3D5@bADH`II%^9pTU[5Zs1I*D((d0tTAAN5=S*)^-+%q??59ZT/;@[#^iU04'Qg8>ZXMi&Y&0I3:KW*kK<VJ'Rq"6i/K7W?RkM&%oUa^MqAk:T(E%j9!<McaLWQ4K@Ee1eT/E$951skVt%oHnp_CR\<,<K2,*#btF5Yq4\W<86//;PW(EbUl".-%b1`@FEL3\#Eu6FiucQV7]i=pW>uqE%N!q%Hq]p"@a9&HWCU%"HB9-j]CPG@MQlZV]92%2%09/cTY1M\2%;A<*P,D`R.I'%En6\r?je%`[U)b?)Z2nm^5>t8*j.gMVO9ZQ]%!M?+-6_SsC<3(mqT4jM(UdmT]3V@X#7:aCN6R>Z;6TW:WKrd/8MDX)j@LJ'Ji3S)^'uXA,S9OUM!\%Sdp+h"6i!-Pt\<,jC#idH+%.I^J*/"u%NROmM/D@%NL';$j[CkLBR*Xtpe#-2u#G3^kLY<2sZGre'@6--qC?k:QF#TM\48/UuH=\&k9J8!*1:^Tb>5W`WoO(:^r%/VZ*8+G%fET8E;.^0#UgqhTDHDpelnG\I!m;,1V*K78e:Nhh?413absMIY;sJ!<J6j+b4^G<n(=#cpO=8e(Us79O0?3"*a14^ad,%)hD7,0pUZVMld$U!L+l<\$Sa@Y%4ff^m0Y8_,XV&QkoU[[`R4Tl5<!\<\%B#M)@f9&9$Yuc.7":7!&J9=C:33%4u!M(0GBg=Fuu"%YV\4qK[a[](SRYLeqdfR[P]6:/LFjg98#X;NNc'EO%\-VYf84,(X2A'A1VR"-Hoa,\*aE%)GuFs=u,YWD)J[0A2RII3.`;h&P[Nl%7sP/iE/cF]>8l(QW)`S\/JeiJk',n<3MVl`Q:K6OjVpWb#k'LB1TVa*s*D>q;Bro/-tT(e"&!)p4>s"7IE"Irj8E.&@h<faPACq)%NVKiGS$3,)=qh&B9ibXnc'/n%P[<*YO[#0i1o0pf"#CRI4FdWLCM'b?*9aYgCnXX-c-oCucb\JRTT(b'K/GrQjr.:,+(T)39P$m5%6mM/bbjlt*'P%VUdfPGU*dK/onrc7OduWLIBXM%r3bfCa-?Dc)5q&ci/@H(j-f&.(RcLe#''Qb.@pYJR)3Gj-;<'H]7ij:Wg*',Y%^oY`"i;\$&^5IU9h>"0j"+?A>7dK?HY%$9Hao7$sP5\[llCBD,oD"kn/\W-9dj/Ooc60hjik!u,l#hMA.M#Hh^h_bmZ&SS`a=#ot%nfLgog*b5alL457V=lmaM-_]]_<_);'\CDI&f^HX?bKt)\j]7=89*Z1H&>W_)d*MjZ.bLMWL?&XfZ&n&8XkClgkfQZJp%JPVu^Aj%<bS<#euSXCT@"'AgP^D&!fP:$:5$UGQthA"%%9VV&uiCb]UMs@p4"tC+hfP7V!gQ8BCdDBLg#RDbihatF+e%#X5JiaN4BujU<b`R%guu7.[M^S]c(n&[,rFp2Za%h,#u&cU_5SgMk0,OncTO!`/W/\HNG3Q'Ua)::MeTBfZ`$meAfe4YZ(4B&,'?Q8M]$TOh)QXMmGd@M%r2e-epJ+O2D<?Z;U)5YgRC'XIl!oe"Ap<C7#2_g$0H4IM8na5RjJhOOaDQ4iJEYQo"IZHVaVX"MF,;>tPf#Z<Cmd6*L@E!s[;)9l%\k+r`j5,W>-GAA/Vc?j25,R$/*Y6n[DH;hG-fh'N@Z1XgN5pq2[Ft;uk=Hq[d?a2ZDnm`$"ZoiGF4T"QU-*5@R(+KlH<_6_-%RD*%=XHQe!0FsPbd=?3U`!r:11i$\Ym7P,eQ\u<goZ]YKp]3r9"5L"*,74]OL`2]?Fr`#mYQ$!Ue\fJ-:=GYk^[GddRBO9-Fd"%TPANJ%(a1l[(VG1t+qoa8AlrXl>'GuW,ZChi_TIhepk"<:-:ABGJKPu/DUWI/T^ciu9V@tr>U+[>DBFLX/)8TH>!K+Q;9J#U?N>9coq:Y(%f6Y-SRCTeK!-t]XL])HuT6oMqOj.T'%IQ]*c]4'[D@XHPSV>qri9D,$St`4%1>//JIqTibSu:_VUgl*#Y"R((FEBO)IN*E/aLVLZ%]CO['K/Ie94R&V4Ime\13]S=j0@hkG2];RUW6`4TrQN-X"mPG_AT."`-#HN`D8GFt"@Ag'8U=a\UL#[U8W;1GVI:[q9Qgs1_,C`d%UH$\_k^?Z1pF0^8*-m,T:Lrt%K?.$\&+T:FaAV>in:YV%*bLOu+\+B$_HdP;WM+bl:G\FR2(Kh*,d@Eg'NelL4L$4Q*Ai5PMGf5F%@r4TH#Y(nh29EgVACD`d0df;/31Bdk^OdMBoU1Hrhcdd.SrR1fiqX=W'9Tg;R1nOCFT7k%e#CI[a;bO/dkle(Vl@/Fd4*A'\:A"M%kXT$ueIX[:!rK.2-cPS+,r7W(,!7112;Ao1rlB@gY@s@=iB;;4.SZ.aLccsbKljb,?H?;+L-R(EaNar)GPQt&lE_+6$Y[CnQ)<\"%-p$k.XDX(MRHWkfb*][&5!h@C7-$IeZc$p.k!=qIF-%+T4Z1Al[%Pf@VBRE=A]_US;a/g/6RF/6/BFbPN;4Q`6Eli']FK3AA'Y&t%O09g+X=e_:a=V]p&TFh)n/rPDUkmUhMU%'5j@rLBf<05R$A-cb1uSO_0?M_4DToAA-W,\1.5J"[<gb.USFgfImB0%7cjS,eHDD:[%AXOm)A6Pj+B^iI':ZjE"UUJ'a1[)PJVX:a5<gaW/fHP%$T^+tGA8&lYaa-+AMBmslfE;g7$r'"pp$.P3^G`:53>C13\IPHM8&D]"%-As;CAG%?H)n$*O<+MiY"*1J,S^Jm.A4EFb8+#T1"g9hpdq?f[S>9BO`,VnG@e;0tf",$/&H[9[Ask&b)4%AeDcVq91pIudUG8+P%1N6#@nco1cA:aMQ'[AI"9hN'XbWW@o7uOB0p'E8^W,FtoR?0C&Hj/uVppFp'en>p<6aHE9>"'1Tl:P;+)m^m2Lb4@?:`bmD)2Vo'%BCmH[2Fhe>()=*_GH'W1Hl+_PE=lQ1`g)7WK.^gpZuuTm::3pULT[u"mLsu6[-MZf>/T949t[.$_IkX"rWf(BU]A)$,-tKpRJJXY%ji^UNM.Fn$ZCdr/K^TPjc"JV!1_@$2W!T!oGV/scG`DFBi-R&_r(a8m:KM*b+4i</@FJDnVI,>#f8tqBD-XguIS"!5ao7SVYD.Lg%(MR#>qi&gq8ZX;%M9r!;DoTkObg%4JqL;o2ORJaRj=V4b[8tE0cAl/KaH=)&FC3NJ=IOJi@Jfi6&oI%C-c'ce.A08:JG8&=]Qe<&%EGF*c))Arr;]o!I+;L4dF.HO&8IF$nV0e3qY%;"c_+br/iMfuIWe<Rba7YT`Y"@o"I$9Vd)8+N$9@.$&l7C<na]uGiD2F2I]Uql*%E/('3UDChVK=M?.),\hZ!Li_d-LhKTItCikF*,ciRI7F*pEj#7S0_%d\13C-%CrKpl&8'Q'`dXD4T$!?=6oAZ*$#]KG+lVr.>B?6%I0N+g0[GslJ(#`^;*>lV8I;0bR[D(rimVuQ!FKo`gR&n04%AWQ+EnJ1$m]2Kmft[D.3rESA+9k3o.4(C_3j7r[2IO@aPZ?%#)2O8%?;IXcrAm/H@AZE,f-5+/J<>k%QI#c\I#eRQ[:1B;L*o31![h^22aXX$4/^EW-1cWBU(;'is-a,^-OF!5c6_Ae8[\rnS8$Qdcd%?#%Oo)9%g#'b]hU^$02dJ7amsF$[gi<*(An0+Rm^1J[jg=>#A-L-/ph\D:(qk)Q#pQ>h%,WdHM]je="'80HQWUE*ls;b^FL_4N`/r\]%s0\6?d&^;XoK.s)?AmLuh0T"j*-i&/6i1lP1"&@;Z5(BtV>3/E1qr:4jSDu#ch/!VQcFH4.fl$`Ghd,u-HjPqk:GDB`;i*aKKnRa%F84DERQLRM=-p8T#TqM[UE`KEZX)7UCf)AHZ!D73ojfeG.<^9#N)]T`"[5Qo&I/t<"\7,U;$D_"\\9hdb[tmk+SW>a-$$>[bQ^\8%7[D^OGPW14?6UV-&\1,'qqLpcVYh0kNA^KY)$01>i!MNo(/aS#MWn)/5BVRo:[jg0C!B%QZU!GcOX4>G`+t^:[7br8&sKW?9=K01%elZ[FD"Y1<Gr/FKa8cdM.$6]TG@\Bae/@=VXn:QcMilk>2H)MrQ)m:YXMtik``ugYH8?Zi'g4#RTFE+Djm&0n)3$S;N@GGQponE7%e"EHD0:&)Y15q$C88UMRf41;aCGjkLkEEm9=@D"q.>u8p]=ZhkBcVJ+We6uH5YW"$r&g=trTt#2O9IDlY@7I`.Vm,d@/8t0UAWQ6%a`I(d=P'?%cbKk`=i8o*./,M8UFf<M11+p2b&Cj,@7_lRfjk7H?a&P)&eVB(7*XAk[mFU3D.G@$,XmqXH:*Dq7#ZYZ%1Ene)>isL%_;pX`1_<r+]$)8g:IA.%)D,dU-))*!MG?+a6Ju[Bi<1j9R0UMI=TLY.!Ak@`CW"JEnljEI6lTOuB"Zp%JVi#'U<,e2VU$HpN.Of0%!K3h.pQs+d>1+4Pn=gh-<&;?8I+RkF41sRu%-A$A)F.$!f9;$TCoiH'gfL2_WsW/[pQ7gNQc:(`Mi>-'OfWH`1O6S5I^iW2dn!gM%kLj#BoS@8K]%^D,k=WU?!tO='OAVAp/G`$7r-H6:h>[WQTa/K-+pUl!*.W[6XDL+0j<.bAeFo3><Ed.<b!2`p1Qd%Kqb5^X<'AVK%XT]q2*KN[?;O*<F49HO-A?m$RVr%>,KaObLZiEL?7>@ZG2f(<H_h\=;en-,P#*\""!r/:\kLh(1FZJ+J5s1V:L`72!!I.q,eE4nE%[bGI=('3A%HG?!diXpG>:A@JW6Js)6A[[`g%*`N>#=?Deb$q1!)4#l4B>=hcc!U)!En66.G73Rgm3-BjniF!+p^j[sAd+7bh>1pq%%MdOUG#_]SQSu$,=S<GU)['U]Hi@%Mp0-o*D#!@'oJf&H*6:U-&_P[dK]U=uG8-Q(P?#S^%tZUb-@,Xfm(>)YWcR3B]XP-?6^]N-%-EqaNfC8&]Gp053ZsO&>R=MYMQ[sAiJ8h3f\N^+hU97QOGPshKfn"T_Ja(P5LajOHliKHLJDL17<2VdodL95/r'#h2)?qO/*,9Pp%D#30t\D#fsK8cmOZC^B[S+kF+\+F<*o,#L2-Rc.NLC^enp8ki2O6s(2Eb9j0*7?^Cm7)H]qYqQqlKEmiD#lhZpL2Jcls^UX%6is)%.5(RhI<`QDs!p'L18pmCiAp/k6aPscNmE+>HYNU%bs4_+f$WDM"#LE`Gi-VX[tAE#39l'fFEC7K:DpZlA^WYt%FP]+j8c\YF$&&'%L5_Gi(&[bFHZLaA']eUkAQ&gN6f5Lab"JGTnUr4H,Odco2SVL,[RJ=H:ctK^HNGn9=9;&_DWJ?;&)&5PaW+h]Eg3l]CfHd[n[p!_%H'[H83Z>>'i>Bm0RCGL\/-FegSf#XK0nGBA*#"*7+;0^SGZpaWNb@:ZbJ:=;Lf1Uq;#j@UNbWA'lk+Il.PPt'irLG&]kep#fL"9[%It<SpnDPDSqU82<p8\)UKsD6)me[2lGRqr"S<K*o4/`79i-c-Vi*?+/Xp(DjiY;/0'4Q>'IS3;'A[s5I0cHfhNeMhS4@d@-J`CE)%c9qHg;1X^I!lM=KGRTH:1)=@'_C42,Qt'WV=gZ)R+A2YEnf7UZ4S(e!BAr%D9N+0;BD)T$*;bTGMZ,AgrE"%<AK:ScjI5m"P5SI&%rFJ.c?cb1s,J!fZ%fNTlqTE^R?chu%bh!9t"1`$XY"/LB\c.F$cHnf)_W*kDl^ugX0L)l?@")Y\_>MCBKDCYc#P01P&*?B*+3]f4%5+%tqI5!mk2Ih3modtpoH.TNmkg-lT`C,4420oghIUX"LrlCNZqBKd]k`;geU-Gq1MuLed/G^USA^MS[04TLm]SufOo.p#0en490%XNfB>=duZ\Z8Q3BA8T?caP)UOJb(Yj#L:M%5B'pEqg%e=peM=SnXnH@`d_HEaoB<IP5gB`-3"X*9E$<IQMaPF/GYpj=Rn\]38o?r%>KQo`MN%Rl'q+P).l-'2<b0'C/5Ckj=I]X]YrE>E@W<T>=e,EA9uqu02>hk(HfaX2o5^@8%4@/7+Yj%PE1@[&%*\kI"]jPj8.ktU%YY6#j_QntH/l$t-*6Z9F+iZei!#u"W!2GV&;'6psNd*U'oE!gqf/FE["67Ro^AJ26\i`nL)[14`n,:ElH(Q#=Rq,Ok-&k1.81B&C%G5'bVI9Sk8'2*$8cM(:<!'%;C5KNsYpa9F)78rsmr`VGjk5WhP"$eq0%fk3pbqJruq!H,sl]A^jZ42a$DGALP\B=(iZq]3u%7QlA%^"JgJ$l\UC>hegcX8%4!mN-3s=/KK74d')'_(e2cgtphh<iWH3gH4H;7^:SE:t-4*DBGD8EjJoo9qZZdMMS8^j,ZdD\#ITSj:1%A%ZL#ajkWN^'>W[00g(O=hfi$\>dX8PNpLXcNWWBZ6<c43*AZpp*H%4(O$ZJ'ND`6mV\(rIu:WWR662V,[9rn-Na_[V"$bV5!7tA72%U[VjdCSbaclWL=$J&pn9$%c6""2E:8](?M#PA(!m^q'\GSZW<:@IX<0F?hT[:(YWcfq0aH;^=_2r_&"A:\j9M(@V]TknA:D`mIaD%2i*<oq(o5RQdl&)P+[k.i["LN0VFqFpg7e/5O@V4m2?,js!_%L^D+X"J"4_&>^Et1s3KA,@P,Kd&nZUN@],[Ts0uD9>5f>#o&&B%%lf"K9MmMr'fF?E<8cSg:/>i5FQsr?obK"+gGWs(7Y>[8Ob2rX?7m+hHA'm81$.5qZ)Cr$*3JB,lnit;;'+G=+ckRNQ`FIDar;Cc$%;uW]*U1o>l;gagA(n-LA?ZPi&A?ZrD_O7k%5Kk-^?k9Nk6[`]<)/a3S"FY@cf:77QkC5d'J-'2$\Q/N!(4MPCJ%RH8l0CQ._Hbd8%"&LBD/fhfIdbu*Xj-`iIbHt@jX!$2,M5K\:Qj<ScQ+\@p7U,XL+8+_&ILSDEcc'A@R!t%qIhAEaPgt>u^RQlU4)OGSV`P-Ll)=:>%%rE\)fr#5)]IpZ4qZq]Ir(1#L:UVf<JJIN%H)7J5ojke-TaBRQb`h]4XAT$+$L1jciY]Qgr*eB>M;p7UR`PDi-'^=VN+pg3Po&bO%$r!T!$UC0i!,m@ZMHu!.>PPD&b$%[B;!]dqY7:=/!4b%V9f?1dVn"2te\Mk3aiTH*jE4Bk:@'C,/m"dIa<LHmPKu,DkLh#UUpLmp%Egt3Fl#/bJC+R^YVagD&(F[+i472Q?PRk+-+MaMBV4@C&ZIhEdni!p475]j$6@40e?HqP<<>keQ$1]X!dLJbaGDf$7GSBU$"$]MC%>$Ys+XN/?I1s^iMS3XCpa-_]s.'qL1JI+REeX,S.'FHnD*2j'TMA<u_Stb/7e%sEn&VtC:)JXSjWle_TS_G(jE.G&K!8h@3?\"5M%n5ghM^r)6CD<rU;`:SU4[)K&N*nqVhr2I-HhoHI*f^KbUb&Tsg]30\-E;Z53F(."$!fL-(lt="8C*>7Q&NhRhTUArQ38%[s$1A!'%GrAgom$c,`W?+pUP$Qj\Q9)!l#N%5+S&WubL'^deo3cAaQDEna7O6bie2:VB*;pk_./QgW4:%2@a5uY,i4GU_Ei,,m@Pb7k?KCeB%+KuC9HD<*jaqot;,^(`\ZsGg;DT"HV#q?QckR[<4;>-SDP8F0\<s-[EoOj@&Lgb6PnWt9qi87ES"b!QHoICa98>Pb,C8l)YcRuAO%H*5>J50!o>kqCS<1AD:!*k>Ek/;JAjRL=Dk!P)F60)koTl`T<nGZR5DCY$W6rK-))bI;(Dde6#@WL6lls5K>-CR1VNYJJ189pmTh%4MG3gckeEobfK[e([b!UEuA`Iid\P!S!U<Jo4b]>NIEl-L2f)Ojh-5hiNG,AGF-d*BX%WrXq`'HjBt(?[@FQ5cY-uWo&f/1rc580%PP?A<(<T0+1>>)[F*&_o\=EDrPo:\G2V-%=26Oh:_d?'laZAS'l9JX1M<h7pa0;Us0Qc$:]F+[YKH#^f<02W\_-sJD[0f8S4hb=7%!9c=#XF,Rq2-k;e.d>dm)R:fCm),pm1##LiL5ScN^$Vp\etQs3Ng)bmfniTI+48OECWW<GrM&M.K'J7?a>gOa@ACg@Zu2NF@5'BX%cDI,D6f!&>&)aWtT'WtVULXFVb3!K"Z2&8RrKGX/`oq$,b(03;g1BA1iDnuL6pf_3ql<kl'YaHuK9s\9jd=dfCDtDtl>W^mrdA[8%Qd%gaFVkg#@C]Pl-djh8=`QtW3Gch&kSTM>ZGC]3;=1IKm3JX6!h;iU#B7OH#1YGSMft2lrpgHK=i212[$'csc2603d?UimA9NnR%+ur@4qr@gFXL'b]\3U1W?&b39hkWq/Zu2j<5U#Yt^dL<#DQkLh`%5C'Uc1=\C*JG@Uk]'![-2EW;ti&QREU]V[6IU-HEl.mao1I4%pVLgq?`]=MI419oW4F=6iUT&>d11fKOQ@0D![ZB/Z8lYh<jt%,?;W#"7K\EWZ/3]4!e?j5C:,j#YeZ]_JRFbbmXWAF)F0'`6/rfh%j<1]9m(Hd"]F(Y`oa;@^o*osc.QNWGjYa2'nPYt4T1o@!$2d4q9DNfHma?(60D'rl>[AtI8(*>+[\qA>OV[`PZl/ttEc9hI;Ln)Y%n?8SDS8)n;m6KP_`QT+[M8`<oJZL8'k8=s,<tp/q;^HDj)&VXY.NhiQMQ]Wb'DAUtIFNV:ncm6_10Vb+F>b!'QPDS7lqJ:]:(RnY%-f$Sn3!5=[a>"Hk+(sJq;gFZh[+7pU0ph[r$>.=C'VJ%"^KQfca*SV?L@$"XB?r0k%1!]phI`ZdJ+hRq@(n>k3O#$M-0O^8BiIrV%;ZVQ'B,1C@YNZWq`kphLXJeWT)E<rW0GWI..[!eTdg^p/XRV%[#-Y0E\55>+_s?Pt"VTg(HEmj>#r0L@UJFr15/fHg8Z%4=,[s1/%g$C]#0TsPI'1!3cfD@sa^$NRBT/?r/\F)V:+?QnY6<$B[Dob&JPWq`4hUWOrL)p8F3A:rT(9-XC*l*,9fChGLb/1lYiS_a/0?h1l%D2/mCQe-2cp63+68\as1[bn2!8FU?tp1q4HYCK[@bCps9-1D1,NPUV8ahg6H+:?g'1B#]+W#tAq,m;Usm#ql`/DFh.06i0Sra,Mu%O%68:/c:%c[CrrgUKD2[_:TMGA8D9hbFsK9ZF4Zf;g=XTppdR0<A8sZ/ca^/-`c8b-.El=ge^IZ'RupU+Y.Wf]EK_TCTog$s(:s#%GAdU3C\?*Bf3mp[4\C#,q)-[AnNM`0D5i`08I>]g13b7pkHQHFJ[oi7omrqFAof1M#/EAsjf2laZsPB/IPL)nl<pnW'!o\X#rjb4%1$shgk>A`?Z:/VL84kSBYPsTJ@mmKR;['qMI3QBVP$9OCVWRE@SQd"_^bZj'No`6aj+>>sj3(%;B)MN%']`me<!]S?EEXCGqU2)K%e8a2ff`/=S/b[_+:Yo(3?]'0bBoZOi3DlY#_&0cENmLp.j^1#X5$X[1#"M-@]$$h:;c8s'&EEapWmeu0eYQ:CJ1dL;9uoD_l]-bE%4:(QRhU()ZE6$I+K]30'^,=cmHOG*S,N4%=Ya1g0h"Dl&bJg=Z7B8:PZ"%fC1q!B_`\m#@-U:+&f7-Qu(%W^M/,MAT%I9t^XL</]%Q&WuX7ro:1Zs_a(l1^=E7o`f"/s_6H9<`7EHcopN3J^sl_?Jn6R0GUjPI8As$jVT;Ol:j;R.![U^YktR#.d_+\shmC[.WdL/lWp]%Z1"RVNiAX[R!iJ["!ZE`rdcNsa]HU!B@j'DAOFK7P^,Ba5f5c*:Q>h+HL@r;:@Q69(V%3g/UIrk!0>/Q]75=?W)knp-9.%S[^\=Y%8D,XKPCgNbYU/ddc^J%X-8.HN[7iM<SY#=FF^"n@7lbjKmpMRqmI%_GGg)=pD0#+,NGmY-E%le`8Bg55#IM-O-!#@fY<'(O2*2u;%Wn>O\8pi1n5Z<7>*=bSJ/(Cc/?,o;n*R.)h=$ffJh<IG;3NTeAdH$;)Tlqi>LV7G5'",qQQq5cj^\QU$Ft@orQ.=cAs6Xe#hXV/3%s4ljXGd!Yr2]o(7C4@1P!/lKOW4+&kHoP'`AkS)tN+V"#q\Hh(q-l7W'G3L"0g$N#ZsQ"Ei5>@Ng+9o09@n,=M)M\;5'[GnCNsjb%Z(HQ9IC(Ho\'Yrci,qB=.?UgK&&BXN"l*qIgr8lh(^-K0E07J(FAHhLi)B+LSmBE3eu]557"iSNiC7Ji5(mTk<6?ZT#MctES"[]'%qSN\*aP]LCAXRO67@T)L!DpeTk/MBi2gi12RsX3sj$Kq<3Mf](.u'ga97Jc;$.[#Ga4`*[Z@3#!gA=e3SL'lu_t,C&^:]H>,*=$W%7W!#gr.+!ON1#&B>%R8;:C6<g9fN(NgTrq>1E:U%)0)e*_]r*!KX-a14<5R@Ydr^C;DD/-h,%%AJ,4tFRZ<u=5Vt)@P]NLUG(R':%mVBW#H2/3ASkd@1B*)hGeceQ9%>3@oZBjioo9,.uhh:6'p>N8"2?oM>Ca%eI+[+]Oki4O^:JWVNT&mZ#R!n,RZI?`7R/(uoA5/q3%5ck&KK5aQO%m8;OEP<E0V3FrZEEp'3c:opo&qNBW6>&J7qscqF,2I4cZYfa2^E_4nZ6PIfW,YNuMsH&K$t^9ca_7o`\`<;EF;U82%QgqrQ:s*A_2t,3dGo0rLo-aBPLRMt`[(`OTH;ni6Q60@!TZQpn2C.'Aj\(6S\]p\9AS0?V/EZB>j,s!g.]WF[*LI0ecomo.f)Tl'%.5nYqE?JInL..5*6\.r!]I39DYVSKP4\,+sC,N]*;QS'VOU_?XE;A^Z_\MF^*R;LO]>Kd"YeXl$SAT>l]n(8d2-p%U02@;kk5N9W%:C)D[j%-@]L$#Ys(V&Ri]M"jmS*P`>J]uh,io-RBZu(T=iUjc.*3N]K`c9!$H4G-=\?>"h('D!pStLrNn)`oXi@?aO%Y$JVFp)]R%=\#^pg3/.@$h'*p0B@1B7["2b26Ymuk]L-M6sZ9<7s'*u3F\T0[=\ju?6+$sX#g#L2<k_up<&N-F1aPsrBASij209%44<BZRcC]%%0lge?FMO#5q"'O$PH4!tGgnO)<<($!Y2$'j8#`q;3Qe%tkbuSjY2eY"i,dC2>fh!?'.8fPWQI9iW;AYHHi*5Qgb49`a(+jQ%'VkO%ho-V>\$K_f>:UJ2o\,;%@rT1DEsr<<MIX;`2iakm\oQ".%j-gC/R3CFoK+.T9ouo+3_JtokuqZ!:/BI&EI,\"GKrJAP&c<.mPcLn%Q'9KA?(Ka*cIdL'g<&6BH_&9sin9_`QW)1gqXEIfN>kTioNGjtV3fWS=a@`]3GX6slYOd_(XBWe]B+F5!1[\Ak&bd9Nio]I#FL:g%''#M;!<@2mlG^<6o-JouF+20?S5&\#j^Bg_0&NJVEJ9k:Q&CYdn?/-+)K>4fH0n5;-&8Wsj8IAj^U^MXY*tU9WcY*SY57`AlY=+?%KNo$?hmr&A=?0Z->uk7RW&](81Z`hMgU1_U`ic^>*1]**Qc$0$?uC'%GV+s%W+>`&/EXI3T*`j"O0`qRjZ(HFl1;6^W#.Rr#!0#q%7W<cqed3^]B?u]`rCftrT$E)@o([%t[bdUX2T;oTOka9qghtI:9uS.*Sj0jO)gUE)2IaIm]()TP=_cT2(WX!pGI;hWF#W.<N;LH%%\Tbg6VB>6Bqh0%*GMh]ReZ_:43!M/(3M-e!4^lZaj^I2pUaK$;T0/Nukd@ra7BTqi<:?^m:WjEan3#PCHQJTDYb$siHh&`YSZl`G%no`5@lV?Y+UdXXsg%J)64F*ED50oO]m!5S]*1YWQe!K6gM0F+A\fFkuLYP8THsS7EcSs=s-&@'6kmN8*4;@4sSA6G`([q:A>EG$B%hC=>=hU\FcnNK1\IIH*?<UnA?'^+:_b>-r?<pBK*\NnseY>irabL^mh=8^.CIJ*)Oi4HbLFaS+#8(fgm[f@3$a,H)Th>*+^5O<Z9%q72jiL]?q&SbfOaB8Z`?Z]tD!9BF^]S&s"Ul/^sJ^KG`P!^>N*-,B#nDBO5dlilrue1bhTbg-?]lFe*tSSNH-]ul*4)eUC5EsKBa%=#S,jV41jB[!W2rf$YgGl`XU1LR3<DfRJepK(Ij+'65^/dnn,V%YWhuO;JUK5!#D.Cq'n]A'`QLgN082RYDdAd!#%PK`g#+C7+Vb%B&UsY"gE['D/UfWY,'@[Er#,Q4M+qD,0oLf.M?JQH4bVaMFDR?X4KloZ&(pkn#g"B^^t"<O8<XQnp87h'tnZ_WQUY[;:h;KMe\=D%*NF<&NDU(6QZe_.'q:\iDgW/nU?NWG-(1d]GKVs5pZUCq?<l%8N;I*/1<d^_J4VC%1T$[hI:2LAi?A@2of2P?ELfUJq;rmDZ+d\\%0(sH)XiId"d21am'7I'CGh1QI;)U?Pg#N5$74R_6Y9*g@p>1;-@?lVS27nm?X^cp]IhNJVEG)A?bIM,,Od[rS%umO?8'i@@r;Q%/%a4"s.S<T!i\Q5KYja&`ON;F/-4E:BWbJaYB5Q^b_pfbCm\'rPX5#@UFpj)p]9=<@0;cd$N^7<BPr*qd5_b\FCGJR;&0ES#6lU'1O%?4")pECtISc@E\$WF3S-H+6Qo,c:a_XNP)45oHj=PL`1Zk"_M5B?MQi.n[p2rd:8Qj^0LZ60J),\WNjdMXn>fWD)`.P,aT?V3K1g%qbeNRa1$uRj[8G[m2u*UDWGg;U>%j^?`^D?d<)Tp<mql\hFm^Bln>3IO&_kOoP1]&>_YSUl"0]\ICZG].eQG;$Ka"lPq6Gi[:1C+%`hV^bVUt4V%-H$(k]hNDMGa1`+r1@n,I'&i%)qs^H(7#n:#E:om<5'QY:):*ROu+V/%$J'\T?^KIl&N.Q#s1>fj*]p]ja'QG/#'Y%j0bA!rjijTk?g8[0u&%82@C*mH;_iTIUD(%fc_+XrqV1ghK`I$aiISGDNsCVe>mH;77Y4=;2g5(f4)jG"0`JHh#2!X,N)M(.&!0C%b1G2.ec!">^7+q3UJe<r:7"A@n%Ei;eBaE:Kq`n\gG1_>BuLgsDRRP<fAj<&/phA0lgi$TCV("d0*0#7aen(ZeVD:9Qc[t:Q0,X@%YDh43mo:IsBNNZHCp)L'RkWCeCsm;:Ll]P7,$0$#l,6gc2tPO?^)!kDa]e\/@VS]aD6W_2R%DotZ0\KW/t]WGmcJY5lZa:bDg?']%]WDKH\'9=_$uiq82c?OlQdPPPUWl:])tTQ2lXiQTgbk"P7^)Vko;u1+kB!<8[k:U]HGWm%NAe]2S\O'*h.<5$M7^f?k4VPe-)^._%lNQ+INmlPPcr52Xpp*WFk3e&#iEbW/G<7nO0O;3OY$TuRCB8AEIPe2#*s-@nnV@%c?16b6M;]NsnmqN_(fr=3>J\8KEF/-7T'5.e%s&>#=?CqG*^%AZ"U@3?P\L3Hacb3?T`UOT7f\A.%Rmc`,m^?8D=ghr4='"HgY;OA\n9#B<hfZh\GD0qV9?4[Cqf1Q=a-O/P\HP-E%H[XW?jg.kR=h`+e47ZmYhNYLGqJ@n=W7QC`6+buPrOk[m^Y,u2mXB4O5P:B)P!%ZSU\DTAT2Gpcp6/9\YGmme^NdsPZWsdjN*^r)%LUGG+FuULSU8'+M/WFL>:NnX$0-0*:m34Qn8*94/CoXKKp=Ye&gtj?K-B"?#W'9+LHGB+/Hk+BX=/43_<:J*9dro&V:Y5%cH'Tr8%o!=*'Xj!@1oCP//C<l"GN-)`mpBp)A_E%S-kXVS0AM>1^/?c7OS`RAJ:9>A5k$$<)h7(oii4-5+5PV^0m%[LBSZ3nQ<n'h<V6+q>%n`&9c*X_pc>/)u=(jEE(%BVdSSs)OT36dW6h>X7j5W0ZBhu:p:CVBE[\pCkEXZG#5Z^3Pq;]sW$3)@]k_<\%t(<U7=id@75/KEB*%,Nq;::#tg?N4Z\OE3;UkY*cAtQ\ilVGr;@7qf/UN<-^DFfgSd(r-Nl,Us:a;f<@K'$EhsJFd\*=gmM]lToqjrS*]A([ZX4e8e\QZ%l$bf94s,2><>dn!I.=l1:;e64S,E.VQ@0/F6%;g9Ml#QJ*(Y.RXd!JE3na8\H,o'm&#nmO?=7Dc@2Nq?5!=h+>e#2!WHhe/-'Oci%0:Ba>4:gM*m]GP%%Ycl#&si1@X_m[IQVJOo2>;r9G.bqVj,^Q9*,hErT<<QP;P<ZuDue#Gh!=0H#sNVu?u+iELA:L!Yo.R60FddI%?u'fkn(p=Ed#["/F(;YJ9Sr29-]l"J^;6E)%Q*-KJ%C'q)M:LET#+9e5[db4A'?bEOlP`fln'r;]cL]sm`Y3`)L1+rQ)<^HddP@)%YK*;mk*#+uN4A)DcN>!6A-@"%(DBGgQCrAVrVZ?"%E'#H=5oc!2+UD]&K0f!Y$Q??5p\UNfB8NRLPe0W/#?LA6;WJh[OPX1i`t_m%DYY2A[0KJ6VWW7k@+,KB?ms:q>u2hC>_fps5WP[I;]ch(9X?m\;"T[HRZGN=O5pR/WXoOC&%j)7BSju.opd<DI1E'LPkHQV.?sAn%>d3^PJM@[/$(1-D'hG515ph(A]$TAW/lKg-qopY>UeWUo=3JT?/7;?K=sr7I+Fs/l1uKR37JgPSCqbfq%6J6hHfX&\@OqI"a:BNW%O+JpTT4PRih5sLthqs9u>dg4G2CBT7O-dcj1s>5QX,D]-a:00u>rp?XZM.g&b.i/3\]HoL8IjqOOd$g]Bct4`><LaZ/.HuSo4))B%CDD>%b52BS//odHD#6KpRoT5AE7pOA0LKQ7QSZb7`[S@!2quZ[m7>eR#GR$$eNlGXJ`kO'TLg^t%br;k/TmJZUutDcR6^$h-09]#%pk+.a;L%$JPuY,%`=bUIbIJUFNX/5`n7%^4FepL0YA%N%WPC"Z-@(C.YXkToO,WPo22)@AMM'YA"@_m-<kd@VCJ5+e8m!i"'fa"H%&k87#@/ql9".X,o!N`hZ\^@pkN[O^J%5Ik'FEVe'^RDP^Yara".+f4,WC3+'jdaRI[]4r[LbNNdT<14LpJHiLRar2qi^;W\"bpKD%D"Y-rD!I1e5"eNDfHV&#(Z.QPIFS&o>kNkM+WlVT\PTDf!`#,sC'P@!I,o/+cb=<%oB^;@?AblTr>>T4%d3mnL#DNVOZ]?4PLp_4%cbX<KSh(\VN,c5s_%@^nW*PF''J-W[Y=Jp(#g+g&W0A0*gqs-lQLD*=Nd0aTYH@+Q@\`TQj54LC'T-Qn+ok`(j3)3fQ(<5&'.HqW%]r'H]f^R'rR=JOO$J%&agD7F<*uuTTll61pm+oTMJ39\(krA\Y8=%go&@),8=I.ghT#BdGF\Y"JLi8^2<A"]G]X:$>W-GW?j0gHr%[k6/jMACh(#'S3HC-U[ng+rP<j<8YKb:V_5iQ+[d?LPh2a)P.12P$V$\Om'T8lO>1qLVUkM+]nnc!BW3d`*._\$6S5Kpu3^$?PE!%[)k0UbUkr'J^5YKEc>A$!u"TV.38lY)bg!G<Id_?BJJ9Fc&b\,(,!0Qi*\)IT+sa`-U+Z)O[Mhb20D<McE;s/!DP%S'/L&RMV#&3%/\!HjJ/MH#Lg:T)P'<%_9c[P=_kNc_c:Pn5LlG%pP\<'$%ngms9&AhWBHh`e=Ah5\"5:46C6*-0JKf9eTOG\"5[bP7&K=89<cM@e%Y)H'X9ZLDn6UPH=0BoZ?Jk8G(FGLd5FVC5JM#<#:j.KPj`>+po_c6=:$QT55r)m,<Qri?/6l[!IcZ!l@T29_o<>XQsQIl\:81"Wn%LeB6U3?9oakoHR5Z/Ki@Opu82[$inS(+k<)&GN\,;Q$b%#7kXHk^_gm#jh:SIGA.jaH7/KABi-f"[L"pm[E#h6`^pVLN'Ug1c@=b%p=7M;/:PYE+s+H\>"_)pfP6`h;W_4uJP(F5QkP2s/jQQZ<M[+h6UGhg_]Xk'^3Gh.6YE'4a\O]5fA.i6H0o2NrTT(BV_V12&_keG%[km0P,LAaD%-Y[3%1OL<5773=ETpOXq4<QcBBciQ=/HEFinSe5Gg)Mt+'CBefrcMW(AV.2q5X/8jdnJL`=bGL6fNihF]4tmBt8RI%iq,Bb-FCH9oRj8:Q4#Gk;r:,YH_\7503fC&'s*Y&[t5b?XU9F;CSo\->XX+n'_\uP9NhpGH1hQ[4UY!m/L/fcZO#dsPnL%H@unCR%S=Irp^e3iMS!+Lh'<UQK/MmT5__&3kpO/SN*=>"=X&k`"mbCaC5.\MSU,(;]P6's`X0Y'N2!Lp@T(D%pG7G2ZHJ.&sP<XE[IbCB7%(l!qC*]]X8&S1TLXrP`RhW(mb2UGSl_.hmF(K^/#XO7_sG@b1M^cSf@)MB)F.^2%a*9YooTU;9iUF0%>gY>9ss-Z][Q7l"h$?33'%'HCl[_5H4g\8q9G+cp5QXC*O`RZu;^N\Eo,3QhQ@fqT(hhmfaBR6-1sFfI%.!e`FB^M*J3a/LRJIWct:_;-`kr_"*4)[=$KSQ5ic%&ZH:Dh*D[X0mLr<R1"di5W<j90pp98W2=?'O3D13<8fj=6]"I>07K6e=DWOi12^OGA'54N7@s:!^N,mYX_0o-GaRB%KPhmeipBIH%%=;r4T^s5TAA%P2n`dJ`V^eb:XLPD^l4.FN.sGt4gR)hqh'AhUWfHQ#7(%)m&1"6uj;[IREn!q,Pt\DtX6`iPh.A)sGdhiuFR\oP%$H[<Z5L<k(_@mOS@YJ2ZF^AEHIUA0?iMm"VS)@ZTZ;X,R\j".OEZ32uHEW6#k;M6iN!%<28:JE;Z?&rdr\VF#$K\Hkru8DOcPGOh%V"%(5IkAH2o3R.b4X^EL3QtS()`<A1a1^(m#kVHM$8.+Eaa1h?WC#gJ6!Y9jE]Xh.kjhGUD]KsA'CUp4nteH99+j)M!&_OPH`1l$%ncM%jC:ktP%.]%]&1#9YFb2gUP02sj>W<UTQB$&(%g)7mXE+tH-uU.qPLEMpP+@:G1]Z67TX)Jt`Y`X^pm4>AeboW,+#u(ufiPAK%Z,XB2JZ-b_\Uc#Z'$NA268.mhZ.:TW@R$RC?-Cib&ZCrRSa*4hc/!VU4;BFrL"BM3$YkkN$ogU]Tc]r!7Fj!EK(.CNE@miWO1I*G%b<&M61nQmAA*s/tGjDPo`'u6W3fB`Ep_(nJl%*S%<H(:8Lu_3)'gF6-)JBG5cDfqiiq\o'X=89tSqm4Ta=B@4c[tt.YKr,a)r:6c%,r'F9JP?EqjRB62hLh$r8[P`T"T7'%SDKpA<o*+XVL>o+ka3kc`?PVsWCRJ+ag"l+A3"c"TLr#!PQjJ#Y@p7,I3/q4POmNY.-Z>X%P^g46mpjVJ/f(\%P:t+Wk@9G(rqK2P=kd)B<*juO1e13oN09AkE;<%Wa;C\kAk[M"c8Y`D\F,nUQqpcD>(^'X*TKKKP.NC0DK>-f%*S\rD?Drl3:c<e[J<D]1VWpt[7>6;;4"Hd>>l`QQK.uf@1<3Zk+'5H>X:d=H?qlK]/k:BCHs>_[cEe?ACpkZCd\Z%h)hNBe7TWgf%=$h$HTuC30:sL>m.s'gS;3pcbe<$ng0f^Ju?NrIbU$rgH4=V;rN]`#>ot1J!rp,3H*7t*R@TI!db9aOkC_.,5\h'8N,^mKtpDJc@%'alTJ/i6DXfZaqFf,u<u:n^a5jcXZDb=Kce7ZFIT$b@SjOf>j?M<KH8Zs+hZ9'%uYC-X%f3AZMP1<T):[>X11T<Wp$cB!&NXJe<H%PuCrM=eVXKZg'Z7NYelaIee4^53Rl]Jj<I@__M*AY`<p'VEJa49sE+%oemn0$ps/)3E'o-?<Wjt>3*%`0=ncELp26Nc9_01M#Vi<%)(Vn/7+;QZ(<9ElS%j8TYOfT%<(Qi1gipOL+$R"%=uuB1?>c;VI8(elV3Idh+O760:o^oIq-co"boSa4Rlmp^IX*HT,tBtj\m@>k%iDL-R0j"Hec&iNCgUWYk_oo";5$IsfMh<u/`8VD&3kKm6:eY[dc54rI"dBi*LM*jip>]<]S!:R^5mK<7cS.iDkEXOIC_aAZUB)WA%H(obkO,p9^%]G8Bmp_:%7R<Ml3R+AJ/!np*8JqXp%3d,J;X<6cQbHr;@OtKmKn4jTN!1e"KYC&PCMusg8sMi=+'S`hTs/HrYg144%ZRPtr4Oh?H3:uXZ![M.8%tX5%lA6E*WduS>Ub.Yf,Yth84k@e"_q0\4e-7mPCEZU"V0!*(lA[:c+4OCVF1(ieMh=Z)cuI^"M@Z*m%\o=TJ(P.M1a(pl\5h:5&cJk6Je4OBj1-'T!+n"7)GgT'8L+--ce3&>]?MUPdCpnZEC#BF>1SsJFTgts)bn[kqOi%FBRB43)&h\F6%L(YHKasJ43I1/ZC1u7FrS+@$)i[OMjg^E=V*3)ur)csYj`lD)SJf<b3E:37H[f)aQC8!d*5SZ]R65V-j?o_+`,Wg]Fm5t@Op_l3%%/mSWu=?ZhSV=6[m2Re^YP=a"ET=G0`"kGg&GL2%.E]40\%4.6(HMo6/_%B(.aO5e:f(T/+Pafb4Pt5Tm/Qj?AB+YWl88a`MhiA*g%?X.O-V=0N,]ahGko\Fnc<"bc_i47f&@nqNt;&'CInmu157a%pTpJrM;8jEFOnQ*@*[GI'=%_%>,)g[kMI)L,]IUO'2NQo^rcpADq%gJ(8^N.@$L\#mKup<0/,(Wc^O!EEMk*<t"<W@GHTg:o=O6,m'kDk10]IkrJY\K18Cl"Hc$g$)n[[I7GUI/GaDPoDpsS?TnOAl?+c%f6k-!Ep=I!G>A>6Qm@"cRH2O3-p-Iu!K%24oKe^kS:[7m>`"GCXCDRRnpP-;]6ED\f25rLY3]n15UBM!l]:R:GIt)i_91P%IMCh4%WSmJq_PKKp"jdGK5GXOnf;qi1:O6[u0hI:5CTXS7HNG"O\2036*<:c*jPnG#1'O]Je_+`Z(iCZ)K75>eaSpL/(8>$PqoAR;d*!bO%9_7b:S(HLtH@+>*d>d@g2[V-g/J]ePXDA7CPa?R&GpLl?MSJb?Mr&-La#4=D=([J5T]mL*$eR?c?=10,J.HN/eo%t:;/B__Z#pk$%)6spQRJ.'HI,;,e/>8<c3ZpknW3o0mDH<X&-k]SS4OqUO-]rj-pe]7nI'<b4Gp\%XjK!SmF@bsj3Eh,<!6%pG0@n9In8ddW!Qotu%OEBdka[(2Eb+7WUk[#KfGILN_QBT2OrV-j*SC#0Fj_rp[mHIo70GWjJ+Df0/8M1C!c54Z)ID/:#;7[4P:4.7(I1,Up<B:BII.gYJ%4n,3tgPLYYg7Q"^7q+!`p2_<eq=4UZ`a7"sV._AC*K'jupe*7p]u[r^*aC$Ze)?t.*orje+V<&Ugc.(qj\)pbB.)e>bjD`0ns6UE%cqF<l\2<_oR=fR,A=1131KN_I$8Eb\=ti1X_Vo6[#1d<OngL0!$LEnMeA++d8JL6ppRo%+FO[-GmgB5giAlDT(fCQ`"EsMs=fPab%\A\>O&+H;a>)<MY9oBe=e-K_0P^,HCi7U5nk7XqaPAVt0$/Ik?)A%GN"bOOF>3eL>I0DmlGueRp?/b$A(j/*)$n/`>F8>=+fGaKC%O@IFLFQWJWN#V#o`n-%)-c=lOMCn?Rdh`CAJoKX@R_^JYA1stR!.L-%?![rHLLH6l:GY26!["<S<I>GU(@b1]Lg)RlY@[M^.X]h!%\.1W0C&&rg#jL!N=.AY>":X^IK+._CMfs12!UlQPJ9PMd!Ug+tb1ea;J85&:B"1Nf:QC<u005oRheg,1)W/+7^X`QP?4O_K:t^,'%OYCe7(C+H)5CIJ>f2>$b*Z+*j,Y-nq^K^T6(bhc'dPl_mb'thim;+QZX$l8T$COpLPj+4Xa^<2lY,F_,o\Dhqht#RhbJnVlaj8i]%AGk#Xog^m52;fS2KJFmpD!7Qlo:EY)[0G'a[s6i:h2>*l5W'7c*,hS@'>p\b'2e_DXo8VI84G7:Rk,u9Mpj1Xj$JLVF]q#P">1VJ%f\ob/(-]];ZFLu!5/]MarG^6EHQ2NpDo!%P%Uoq*A6Nttc^qe0@.h7tn3r9,E3pfK!pQGs".s><73o.)[C7u8olb`i$0H4tVPr0b%+],:_o&Z%0$/.f7G^^QkXCG>K>H<!Gk[]rJ-F+\h&hipXOFPJ]Ng#ed+3s`FSn@De1s6],h?#GA$N!99On7CD8.Vq?F!##hI+A(4%"NTt4OAe+!n&Z/PUo)%V[1:'u#E?-LQ2<OV0O7eJgL2\E*OXS59*pmklEeWk=5:(f\8(V\f3hh(?i%sNjC>_]9=Z8h3P\g-BjrY1%ni,2Y;ZZ"1+oPl)+LPjSQW2P9RU!>OkJpteMQfgYR>nA4>P$:?c+G[,*bsW,6.lWcf*nnK$ai_1f_ecK1:++rf(^H4IjEpfAoS%#%I`P`U5-$?ekM(DUD/O<1r&'cg]nR-Q?)4Z:2jK"d\Oj?qhN'MTn>^9XXWjQ;@QV6Rl"ASh,lIP$Y0VaNciKrIYua,=.-s<9Es'a6%\>LUp?em5?V_m>W5`Kik%k/g43r&kK3L@A7'LdZhprb:nm)'cBF?SLJ7p6=4c:bk?rEf"X^WW.%[!mIA+LSbBJ>:62Ck0k6C[;e;%>('4SR-P]IeFuPI`UFOf;9]7E;KhlXOBtiu642b?"YE%ZS(4$u6V(e]e`1Nh5UuH;`Anaj5miB+&FEYKM=0C=,/%HP:CkYI85i:P%qE41CpE<PGDm\9^]mP,lHMPK0,mf:t!Ml7OXP$X<qiS/p09l*Le_!.pUEqgpFj`F4[$uE)(5(A2K1O=R;5SMe;b'5]YNfa#$UF%X%,iDnKIi6QlWW6a\[>VC)cTZ#5+%"g)Ug15]D.BAqkGa,r67eMU`sbsn.`D$)F^BKtj&=P][hic/Y>,QObtP`0FMZO[Q6:VH;9ad"%hN,#`H7f_mi+=XjB(n'kK+qbAd,$ll?"XZkbu*m"H[\3-MJLrdo`k>#V!SN&"C?A0f=PLf3'2f#9XRsLbQ4N+^@l@*9f.scga9D!%bF\_VdV`.AF:KFAAuV,#bI8SX9b"I1n+ZXBIkRuYS+,f2V"8oJF+4Ip7!3E4;?g%k!0E5LQLUqMi]=ObC#M4n*C.bS3BB)u"XB;'%S"eGI/j\RUG+Mfl2Xnh&C9FB$FZ]$nU_i;KdPl[99LCiUr&^=d6WJ&6#Ushdp0JV^+/9:Gld<*J+q8tG1mP<*fu6M_BkG$tJ(N">%!@,;M(4nX-"]_0Ce]oo'QVHJn,%0;6+F/*L%?X+DLVc,6'X)c<!E*XDMc?6PqD>")gG%!4L"EB;XP8q*8>DMqQ&:8of@)e3H`BH/%e0jeC#Ti1-k-bDS1:tpOAn80U\-ogAWI;fe29VUVgf9rLpE&/5NYGK>%VuUp4\sPt]'_nIs3kt\""EGQB@$/<kao$0>B"THN.she%)3+6&]HX=K4)21aX+_Iq]j/MdSA!VFFS[`+s(KO7aOE8)gO2RX4m";4P3(-"CVBc71A+NO"Cg*f8%J%^-G;Q,E3qa/-fXM)QIohO%\TsuJ/qlfJT-G(nVJGb/`E,%FSbuGX)b7"CX/*Dq>cNuJE-Bgi3E%<Y"%TPHh&P$mhKKZ+X=?j2(VZhds4K>jnb]n%#TPgMs#uLH%,Kt_6o8dHrWpj,"T8u4Le@C;R3cOeNs%0]fcUYShD%[<P8kcs3/tBbf[/Xt(r^PU$CWcXO6gA61ra'UdOI3Y$4(rs]2jaE%X6N.J%2O_2LHK!9@kG(_Z<4gE#iR(Fe8/8c.[H$@2O!V4^80totGKTH!i95m@TBZ,^j(Nc#9<HPg(suA47&>U<ZZiNH"ta.EV`/8Yj/j3s%SeTljbVqSeQYs\&ZK:R>q6ock*OM3_S0M#$JkG6U)TSbP0:#PT9/D2S)Rq"lIW8+O0(-3Ih#Y?7R*q,.,*RqV%odf!!bca$f!q\?%RIc>_88ECoQI`^@G"#j7^RjJ/Vg$^Z)St-dPk@0]7d?4E6i2s[eMnjd\XFs;R$!!;GS*Yn%j6:F4bC')M!\<MR9-Cj<$-4X;%$;$%b4WSfT*`s*bUVHc1K(Z,L61-ERXf<4%25oIO2kfS%4#S12[>Ga`mEF?qiS/p%g]/+pBb"Ii":)C.I%o`+9gRHkT"n187=BYTp>BB%8d%g6%O+@7a?cW+*k=)triUd(8!$=hc]0I%5u;>>o]VL9L7@SgPP4aSXLXQo+?F9SNe?ZU,?&-L]'W8KVK`-P[S2M$NXO,BH3;j^%q?G\<plpF(?O;RC865>+Rl`29CCMEJC/B8fUeCk1D*l/F)eO#gHU)g<J')I^aGh_h-`'o$6#/D5!VBNa4#0k-kf'ACn=("$?Nek@%j_95<?%P_D(k`LndclA<oE+$H;/P4Egt!q1/L9t@/CG@n8>`P"DDulm`aEL;1qIE_#PgWr(VS6D,bH>h]W6ZZ%r@iHrZ.a,OL.2H%'"n,a[,EqpdCiIS/G.*YT[7hDUR-_G-R\hSR#F#;UrsL:M<s=7]u]sDj8+[?[Tca!J!Pqc8V=jZAhge?g<3jOJ#`LLSbPAX(7U6N%$#:&"F>G$@eimp<h_K@iGlD]t,Bp9Is0cJjC&.,nl7:1(EedbW83ZV5GRhYim&g;mY]`@Z6ZB:LH4&!/(&UfK"+ebt2mr0ZTF3F=%U(/<W,=!1[@Bo1HMR#CN.m2EA8#\d7+:)>Gb`gmH?<MeAFEq6O53/!CK<.MfP3%S;g**ZtK!f7Cf7N^(+2YR/+"<EuGON9,b3)&q%m5O`oi6"S(=CSnr3fTh\fOF$T)d;Tu;X3a5IB:tFc(q4YnbM3LK%VZ?@D_o?`Nda@WSQiO@q=i>&R`0=dm6g?\i9n1a7">uEnBbj%BB9MmD(#1N/Eoh$qAkApKckilF@DZOb?6F-(Nl=D;#$br+#Lpm@iM_[8fOESH@a*]j(70.1M)E(r<D"d5+(]3E4qmc@+L7Y0:U^"%KcO+6P[EgV"Ish:*f[NdoO.(T%6jXZ+r#uXTHO$@@Pjt5@/6I/NN8ZbdkUfi(Jjko:0Q*30h_Ie6M1J;ml?C9$hB)%+R5("&g]LJ%k":8p'1bID+1i!pPqd[['`B%%kYTM7_eaODIU%M[rcUoF'D/1mr_FG3ojmaM`h5Z3SBHV9#M?l,6dPYe!VUAg59dA9lFLn*bSk8H%$^`fGI9U17>Y?k0-@>b(Z8SjecrCDX]+UV1o]g[bhMiM1$edsfCijfGJ\Afr\D$>gJ&<d,=3SiG>Q.*ebUsFZf]LW\&#Ec4A&JXN%_>XQ$'^P?h>D7^BUt8rWKi87klWqrjU`:Z@X!g4=3F#cpIB"n!&L!U]:@/L!*Tc%F27*$_p:.*S54s[*U8C-82W*GW5aTP2k/"Jb%^H'+GD.Wq%Z%am%&o;NF?O\kd_1Q%]#S>f\J;>ZpcLH8YiPQph%KP(/s5X1L?M[\&0\o+ea[?,YSpuM[kV%eIlL,#7Y_.RnK$D!d%C(Jhbbfb<+J"JsmcE9q]/3^/L1XA&1PJ<H_+mjZ]Fr(*_=NC$Em9@GbrBk)11"kjO(Rn2Q:1%p8B[RAcQV8'UlWk>,r[\*"a_1LL%J^q_`Ru6E4,4,,O&7Cq^U8pD'?0Q[EK)\?BGn&[2C;=g;"^QUMb6Q$+2YXHWa8DB(f$ho_13C25&j&.N4(7Oj4VL$3itc;i;(u;K%4-R_@H&WF3JTQoGD"`PabG;sX9#Fks.AN-I;sX!l1&Vi="/Rg[n#iklj_NP7%pkG\Sd+p`'N\j],!96FQ:go`C]B"$P]nqA+Zm0D%O'$_femV:&s2<29n(_m1HfB_MLoto!hP"*0d0]!9N:Pfn"9;\435-:ISlX$$l,6B'jO7jHT/U/kIfjY4h`U+FHH15E$O_RUpEQ='%mW?O8,'QDp/`P8r#=1dRo9ZZDXUl?Bq_:)9jI+^#c7C%$"mPEMUj(&B&JXPr6ISr^Do2=m"8>)9h[)m4r:ZB_"N?o*/:HW:REkrY%H@>8_.+@8BfN>f=>jU%2E8RWr(lW-RB^Q%TrGK1iI3kU'?M=3?284^;D!d&LY[5P?\W909s.5$i[hI/jpQ'_UU:$>c7Pq35]ibi2%Q'$PDU;=#F>u0]`'':VTD*;HZ^J][0C,MQsn,%>/8jp;GM.hZ]lt\SY7l4-l^'DsP8$k>ldB%O(=>%9`b2t=N=jd4P^oFUaFg-LQ%Q'1C[iVk;q1Bri#F3jobrAur\Tc5'`1B+D&Y3t'EY`6(tHNacTSI<!?T_'@Ro_SR=<BUJnF8*R9:pr$7Bm?Q$(JWorc4%>:kBu3s%iBSfHb;c!g4)ds/"_%^oBb#dRHkD$-Uh85"5$d,1>*A=S4*g*]mN4NV%>0#5@HUj#29M0hZf1MrDbi9!LIH^CnXWqB"(9O*D!Zgk%#_;jUpTZh0N3k&rQ*]A-pRRj[peS4uk?r`<]e%b1L\:UY.*j!5g^Ej6SF4348T6;h\PLM*ZEq[nFMm.Ld,s2O%H1%?_4>E;l/%bF%g]Y,k.GZ)hL?AB;N8$#rEY%A[h-.!-ROPQW(5>0tQrq.)@;eSKmZC<>mY(<[LYUqET;N"r=R6/u-eJfgfYW&=@c(oQmn]m-D-pU6%"jV('FFDT.H,cWr&TtTo4e^B\8P<J:/X`h*r(H'VfM_.5-#;%$mThnpkF,O"&&u<Ta$j^V9C8sgAFHG:H_]'Y[Y;L\:.QslDlC-q%g:70Z$-C(Vo44Lc,OZ_c$PDUnUml9[Ze/Jk!+(DjE5[(3eD@eTNVhnQ+DK/(fWaG?h+O4;)&4I3.=;Xio@%a:``_*ZL>U8(K[7Y<%i:kW@s5>bUa.K#W:C@+@cd6D$%Qm%T8aNpYTf`5V*W#2aJ)M9V]h%fDkX`bg]?ehEItCFB>4B"nU"bK)ItE^Q0>IAmh=2lVaO>aU%q[D<N-g2%(/bmS'k`2j!hqRa@4@=>j$+`8qErDbGk`4O2X^A:0c"H6`DFiX+f@GmcpT.,'Hd-]hiTG_H+4`":%AKpLWF%g^G1#oM%mSZ.E`72PCs!mkg+O;M2KV%b9J7#DH]pIMrQ01OqSUYXOR3<sLpQ5<&ls8dT.SI7!!ZhChVbRB:WQCM@M@'^Q/Gf@T<csF%#JP9I%)!B3d\rdI;B!!oQ1)hV>6*DpnJhs!WKU:3Mpq3]+Em"C[!iBmLqL0d83R[Y#a->MU1<p-\r/ih8*4>X5j$C-a+KsZUA>D54ZWXbB%Xf?4k;EnK_IN8SqQ*ZXP(rSB=2][M*>_"AAI$#bM&m;o:YkL5T`?=kb2p5)1D'e7(ZJ1hd5=qZ[j%$$Tph=n05P`+I,TJAj&F5VZ%7DR9Up1^l[=NDPqh<H;o7RVHk:JM0+[p'N8QkG81X*UT7'[m%*an3#WQci\O37CBD]=*Co,_7agfJ"`uN$a"gm.j-o;A&fFQ)k=6%3oPX`2)bE@[fi8kppAuqj,(,I>1GaL[C4]TV\6ABH)0?o;"mL1J"MC!W-T`T)L-PmjS<#tisVtNEujcF4tMo>NqR,3OqXV!/KJ)4%N=(::;R.LFl,D5P+:paRcFpB[Wd"#sk):1E,A*JREA:p<U_)mb9,76@QsBD@PWJcof'80TfWpQd*:pRL%*>!pne18%MrFmko4!dZ%[=E>8#lgtlkMLS65XKH8E;"CI?/6dKf`]\r0K$i%f#:[Cd+,U]_#b4,fP@`/PBB:(!6HMP1F(HlNs3@ZB^`,DccOBl`G"`k/Vh6k%nRe)N&.k^7Yg5o.8G7@PQdK!!"$C$N]NBe,C!H;GYbo5%=0aFVBH962M`N<i;O;`Y)>HTq7ZS7lZ,`C%q!6fSa`\,pjVPir;4$==%X&"0^3"578A]AH;:MV%EUpE(=aIl$1(cCd$LZ1FWPP@[p9bmE_["]9mO'HB?8fNnl1W,J1,/]+l?hS'sqDDkRcXB;7_A8Nk"=*&d%Sn":CpRu.d7N8r^T]\#(W:O*>qisP;&K.78koqm#oTXl\[\fQ^pHka9e=drr);q,Y&K.Vt*8/,hP&mE[,tiOo)P+NrOqML&V/>,b%1[n46LV\+uE[8Zqf>nIt@f;OrYM@i4WA`FV/L)p[@Cd-JCICu\]CsdTES[[p,)V%(oP<Mm2pA3,$$0u_\j4QAbNc/:Qb5BMg3$%A%$$^Rq'G;q]W-3!mZ`jjiXsM]a$MDc:\"gMs.f-p4qjJElZ<Z'd4rf\kT4^?XVES-p`;.Z5F1]G^n_pQ"<;kmqH*:$jiPQ6];LRK@%.;V:g9Q86$)8b7-BPDH@pO"rgQ0+%*iK+R_VaKGc+&81>4X86j5+HR.4X86`=pH6#VF]d<0@mO\B@A9(WGU<HL^^o!M8WC,hY7!u%Jc-WlRlWqkjB73Oa'mme?=b_X<HQNm"](ZH3j(I93[PYJ8%T3fqN"CY8FcBb2kd4>QLg!sUi%-/'K0Y=>#u:ID*p,l,`J\;H7kC?%+^e;<&MA5BoP#7fXtK>me'>(81u=8KBG6)CFGfsg#)o`0D*n!R/&%%o2KYVJ+^E'_e-3Pne6;`Yg'`t;'pp^j%m#f>JbMh&@T`,L%CH75^/i@U0r*Z=,IJ_#T7@3S+Oa?]f$R:qi+sGdDAYe1#mA<!Q#HhNqRgp:7kW3ULU`)]P]$;3[&]1HnlN*qI4p!@GDM)&KVWs%t%/D(s=D-2[l%,8!#>B>=W<nmI>KbI6:Kad.MU.>*DqUhc_/SIXR\A2:BWuk;#A]-bPoepbYKsU;"/V)"R(!\k?i$T77Yk_:03;G1B%WGnYf@67u>X`gWK&%jqtJV5X3iga*51h1#Y0,M>[SsY&B-&I^,M%+O8dL)+@k)p"3\=K<EMeXhTJdlO<W'%:JA/lX#^oE#%TrP\D%<J)bjJ.@:)EMgo^WOThT1(+WALB;tY4ZdOX^TDM=kGC;@T(&pW]1!1Tq<e(<0jd]tT2\&<aZTF!GC]ZFg?q_=\k=qbgZ!q)#`!b,%nROYWU`mA;e^\Ie*SG<,m,C8N^=!S.C8LXr_MiVl]48l/QFo$;bf<iB'K=RN\7pC2RVH261@-W0)0TAWohD-Z[b4ADL)mYOI^EQo%`GN\6#<>h-;_8"Y\!g?#8p[c^1rt'Ni17i((j9->gPjf[jaMTPMDD4:Z<ML5T3IH6Ap3S$6?u9.?H9;9*H#4fgiTG9hLFCq[CYUb%D*PbJd@'(re"+cu=$*H+6*<KL8S$iZ-*!3_hn^5[r?^'m$*HhF';[%lh^(pf^E'^W07)rBXPOYV;`H,EC"ofQ?<qSeTr"Wo@*tY0%in>@an#3n@^5l9Z5cT*(dkCVi_HlNH`/1HVD<lLGZ^NC_S`J"r?\<ZWk>$&tWKYYSX%mrYj.mDQ>?c/[dhe"PdLeF?la-!Uk!KeB%ku*8qBtZB!\dgpU2B,N.+',&?I&Jp9#)F@XT[1]j6'iY7VNfN^Ied6HQZ#pkMMs!De`R=0c75=A0:U82g(&f7B%*.O]M'N_*nbXI%>WOCs8b[$^ZN:^0)FZ;q3qZ`LC$[]\2_Na)Nhb1.fQ>[pfhXMs)4/WN"mqRLB/Ti9_YD3L1\7*\(u4!#FSb/%(q%Z&\n0?YETugM%,Au.U3obrmFia6<9kQArH@Og6RnahPAZo8096/@UP?3Tu9;ah5I:CZnc(A6.iZ"B4N([ffPWZ;:bUt3m>kuI<Zd/(:aeglSds)b8%FZ,qg&Tc$jZQCp:fQ:_13d;HjflUj'9&5iS+#][$23b:\\ojMTJ(SjTgb4<SlBt@Z`hbK5-$a%MRE^hrf%L?e*RWa<bbd08$uP._%%lTsrQ]==`a=;T<O$r13C,7(qnkP/Dd5Tpq?9PGG1!F<Q-Iq@c:='=*=;.;@ZllY,*;-?g1O'2,$]"]GbfV;4rV4t9X!8W4Zd-"j%3`s7=>&.7(Q@OZ!$++`ZlpU13Oe@<Iq78D2,hpcqi8gT_=TFbKUd5jQo$4h2_V$p)rt6R#Od/FIP'MKuC6&M(HmMW,b\`h2m>+n%%\oVbPle:-Vobm;Rk0CD>QIP-D$gA7A@F+Vg6uDACegCQ^c82:J&12(47lE%Zj9F(.'38ZOY1q`'B4]i#d@E\*EZGlm>CBcT1qE!n%0mnt.j&sl)LIC3)g#U-[LZV&bHF6Ypo;giFe#HH"S4H/uD.cSFouN7(^Z>hh[4PPSYKb&jI\BbE%ll-L#0%&H<F#nk+sau9nqdk5%'h;Ek@s.9YH.4i7k^]h%dEeVHlL\RNX.bRPX+iY^XG0nW)1M'm=U=,Jq&"=?$IN-Jo(V*(SiO3q<D8E8/Qrcna*%\#pIU>@dqDXh%'\KGOd?9SnCEcT6ric1YP:@\[XDLa>#mZ8(-g5"j;3)l#\4G3P6p6njpB`%(ZHA<:X.Vr5=r];Sg)=_u^MB8p&J>sV(":tH1ZduP%`t!i:T0@EP4T"b%&-/JBg1\Pfo<Fg)DXJEi$lO/E>u:jR<E(DVf*lPl5dAR6^jiW"Ng<d5hMB51=l9`U8nB+h1.8kj\kOU*@r!EC%E#Vu)\9#TlFPYp$SGVGIheK^>SMt>S[)3mbo?i='G=&2icSZJR3nua]PiiE-aeZtJF+/pm.7T(Hc7\7R_jsBL%4QdYfchJ&3ukRY%fPkB`@.)d.TXcNaZ1`A,c88qeXOm'S9788lo?e(X/R1^Xc#Qm,"kRbR>$G]_j6Lq;f"tGRFQ&b[gWs^Md1&?6L]$kQaYo[Aa0btW%nnhKd&Q2X<,UTirD"_B!D)ijr9sEBTR2=JlF6I)ADS)ub:?8o\>`tJu8'Kh:-RUX6@Ms1#32/.lJ.%A"R5HZK.j@7V:kU@9e1d+K%I4M1'4-MRA>hb[S4hp@m6Z&_`s4TWE-;Qqnb_T2XCHH%^IoXVCLp_3f33MWW&R!nhAj]K/JM-(64K0AV:%a7]:3g@o<SLukg>[@-%-@$Ze4Y!$,IOH9tY0-1/WU;<S?:,nKc0j=N5BS;(ORu<5Ka[mcHZ?o0G((@SIf<m1DIjUNG)I8))<^OVFRXt@Zk"NRQ[h)MpP[OV%mI]^]C>Slj&tI[_\N;>_W)ogM&!nh#p33p0p=_]HiC`UgWoKU,o5D%e>uJ8'@XW]nqfgIL[('h!>Jh*&hfNbfjt9rh7'?01fLj8N%HrE0c/N\4rQS"SS>;7-U9i.CG=cSFi%8Ri!9)7;Sj.&h^^$N]p&@UWu]iu-[l0d`VM<.GVj85aNE`;T_RbQ]RYT3BI-e:6DlqMhm%_]&ksRMY8Hp!>CnBPWL7a$5FH]O_%dJ7ISGQAMc3]c*+5?2Qt_4,KHBNq4T0VmLTYIrG1Y;iVN\_3*DbVse;l[8rJ\ICY!OVt72c%o.FY@8n%?(&o73e\"Z(LV3VcXdeZ;S5^7^WM^L*Y,3[6+jZSr28`LN8(SKG\6J@Ka=_X-o<gof3.U,s-\f+<6p%2t/1nE1jn4q[Z%W#j(!Z[dfTXV+t782FO(ao.kG<+us4(JUHdcHR,r`ouUL'ga[J#.V68IJFIb^?Oj.VRVGuP,cNaoR?(Mc<De)F49ZLj[$(njZPeN%dr?8Wd`0>SS9n"6RmiVPBM$2FF=9IkG#eYPOGkj$erbPW[51b)3"0e"DTSik@mBXVg"WY!pUY/u&]3>.It%47SqFkZ3.KPgC<fs)%!(=n1?(BfOnrPc,+t,fl$4(st355]ARuQ5nU(O*qo@KO?cU9NCO)3/bo>7af)K4@/Q+CY127r84;WiSO)HT.f%e$NuJ->HK[A.KL%pH[gk=uY<$2'IgUJ7iTZMnu.2%(b*F%U.r>V,F&WIPL0dTSjC<mI0(Y`7>QRaIeC^F2Y@B,Gn^9]U4D$kbY&GMZ;[f"\?c:KRBVC%(*G%20G*rp!d#)OG0U0=0**R5TP4XS@MYW5+(/(Xjba44aoR_W<Eud/8]Oaj/)@H1FZ[Wa[9<:GKIfAd%\SZ>CsN.sT>pA$3pTAl%PYYCk"%T@kcC=BmY%1bfQCFb!AtF_V:&/V"E5]]RohG7$S=a>^4>l5!XM.Cej]`CPo;O12%;3W"VL1j5o1_('1Y!GR)lI]Lb0"lk%-.@V>d+?V#b8"+]hY[0FW"!=ef?^ESPe4YYqH*8S)p4t[T7'\[geN%Lf?\iIr6U0rp[tj'QeCs\antq:WuUi2YFi0nc+Ei*W&-RA%k^JM=kV#EPf?ZYCTODm:778nQolJZud\O(=o=1Wd^4)r\4#u;2gRZ/H?U+FICL*Y!XKS8X$lNgp>mb5^kh%\'!c.K_BjX+%Ffr'k%>kdn9Au0e<l_jShPHK?MEW5WSX0/XugGS,pYFeh2e?M6.GHn=n$"(o'?U+Fg./ip'mm*AFIeo"ggV/.1ASuZ@1f!oDfm@J"[FPib%qUs7pN^!e2)6N;l=0q;ZVk4d7IJmoh?2[IV0X_/:pD/2US?pZ!o^t!B%n5u5NGV8Bf?a?N-gBqefT4??n%km%TAtBJXs=0EqXJjo%4W(d,l#M0Sqtc`BY*9?-JC'Thf@S@H`MH9WpZ:qtf8kHIk!NK?M8*WYe^"`GSFlJqDN29mlXr[W<&UGjIXLJ#F9qd6GuaR"qXOC/%f?ZY[,r8I^p@WL%W8kOoT=mUo;`JmTf2)"`L9>tPhQ*]kIeIAK^o+nqlVsAOl0E!>e^%A_5.A&$n&OUW5HDJThL0EAF(NeOD]K]:%X:%8hqUns5LtMpWIJn!(n.T:j'/,k'X0-og.H\=IT=ru3keMQ6lY#[p$iZ(Y^4+LdR<S=FiE)KAos=9@Xg4\(qYJl.da^:Mg,tL+%B\h3W%9Je(YFduV0jo$p\EW<l:P^m9a'A90Z^M](X5Ec0,$A8;HU=eY)oebYT7(arW".mkYFg8nC:j>qf3=F4os8!;]'-)p<m!Ck%0cU\`X:;473#CY)8X:Qt;(bgqV0&D:gDm))iOuh;R$P7\Y7fF+YTfNQ++%&o]J)%_%7,LiTJ2)?46gdoee\KZ=>2XmrrpkNF>q*s%M]q=\`iG^RG1@!J*e+[!FLW%Dc?F?S>X#]E)Gm&U\'b3R:,*;Te>K"`Xl/+r*c-"\W3(uIHms/bp=TkhIN4EDpJ5/\r:0Q/<d7o1%*uhET]r09VEO!#tec.fpB"g_Fa%qK:Dl5a5p[;qLMoTG9Fu'&;OaGc25=h(^^64hBha$raHlS(Dr,A@ff&uuZ'rF>ojnRq^EL&.&%G@S&Ld/02:L-PI*T6f`ER(2SO#2.T,>I(o_2Wuc!YL20io.JkRrnO8qqg2+'5L9#pcehYQ\r*BYmbl':@R%S;\b=iN<d4870I9"Y%H_WZ8L"Xf;EO\_AqtHu?0$Xi:Qe#3Pr+3>tmT,h-L!g#8;`+[9GdR-lA3O+69_S8G2"^aqprMn-chBn#lSnd3B0qGGG]FAL.DN:-%#KOMdFFH?NArDf-]Y[4a4e[_DlD+gJa9u/gamNoE4%KU+T!'RcE#t^JAcG94S(d/p1Cq67,-,*FLsachlq6O(Pk.C.'(nSu'_u:G%Sb(G,=bHQFnB#/5NbW^hIKTQ+m]c5#HEu/hkN@36@]io'(.1U8p@WC:O5H1=>pMLpeV@_lC;'3UA6<;44r+(_`qk;ge%$o-g<[5B%"-`?(=hK2"Bkm4-AnV'RMPb:+dr<<^THYQhhaIc^p%+HLT5J4ZZ:7]^h2YrWLo,4G3;sYP=Q:(n>"[d]d<7_M7_^k0_QVRlq\9$d%$WS\JmOUOBd180qa$t=or'=+A;EncNrg3r-nja#Z8+#f:r'<sR_'u^T5KKcfGcX*M+4."ud\4L@EgOI!ITNC*hR]!P0<+g>hG%T*%Ium]\n5Z4As![D.aR.A?=F+WVq(W8lJj"jlI<Q?jYC2cProid.!M,7gZj\o;ZrCM]*Tf%#r5g/?L?fi-=>ZUPo_7mZXDlS+jcg@`%4>_3.9iAUDY8mE:,_\Hqj8"j#0IIas/p'4_6aL^OiD-Bi^M/qsZ]KK!,01Gu'ml<[hQ)J1k_bVf.r)7X99kV6M@?o+W[(B`5Pa#I%G->&Y?H2J`@cNfq6#lj09\JS*kBPMsSY+5nji,7>QES_pT<"7bbP/&F$(beJH"$Nl!@'.CI^,LYIsO1f`Lm.,2gD[8SbVSGr/#jG%_'O-="_O)1\Dh'(F&^fF)fjd)G@uCqN"EB,Z1IbO8U?t$<qSTHo(#6K+Ih_f:&=?3GH,kTT*O,$.qOel5&.cB*YZeN`P\&b%>)W8%ec79n3k",u>soG(PMisiL&VAOdS6no@@p'Bdk#rK/lJ;'`1QhZBDM!UEQ#B.fm?Zt4T"N0lRr4G[:gVP>X^_ul,G`RW>.Z38oSUF%hlhF:_sZsF+5`eU-62ihgtB/GK'6ZB\F"5e+)_+PA)r*UD_M,OmH`WVUia<M)8iu;MSK*TTAb14eY+cHjid0aXnQus\I+!%RKi5D%7d5LQIW[!bgqc#9\?rLO5/l-@]I&=mD,"nK2"eGFTq8_',07WHs/"s^AgK(S>UG>i^GWPmj(Jrm9AHLG5t_D&"uUMiIS-4,/+efW%J<W7#%W+J19*Rnm!/)KQf;E_Ah1-L!mF*DgIj?.QmC2eK_,UZ@(dek7IYj+jCLEZmM#^j$:iu,C<6(qpk!b!)?Yu5R<^(6i8,J7X%")ik7&Ic'R2'KXT_GZb.]_LDBdK5A:6ph5PM$R9ElNb;oq.oRC/Xn%)gYS(Xg?9dhrmB4],GC*(J*@q7oF(tAfrD*?=`pa3dZ@%U%\ISI2NC):efYgu6h;G;i9`o?5%b3`P%P,hG1m<=SVPr<HVJaj;7o^<;iC<\u)ejWn3iRu(L"J7A/'hC$)e2[:'4Qh-na0)AjjPli%RCAm?k@[^>2YMB[i$-"U5k9khn+]296u0p)dm=l0@cN(hf\jY(E\o+;X,70_9_eRL9a$B&FMA)-#0C>t;t3/R(WQ`Ya1o@fZ1(:]%k3hcQ@9iu=,_-)(.rsK4:\L5gHDa7ZoUt!Rk8?$P4+U#Nq>%oLr$>!s@UD59M3jMFO)m0QWm(@S5+5Q6QYU:0ZY5d?M(\J6h.SR%%FS3fP>T%oDA,Q>f%NSD"9f,pk1lBM-8+1Xh4.<B=fQ,+C'1TZp@)?sJOBJt2bnXo9f^1&m\RJI\9qCAbl%'[.?TV?Y/o*D2q-7q4%+n^4:m]^d+Ao9h7!TKY]0it=e\j3`U('qr`c;h[5p9NCW"bc(-I:c?4nn&Q4<B5+#J84jP[/.Xmoc*.m(h_:@PtDG<)$"F0O"-pf%3o\h;I784>8q0o'!QDU$%d`U\:lBnV9PSrY(,-'NGm=F)Sgt\Bh*[lZY(fX8k-6CFdc>V-jkg^\0pgtI@ATBmc;;NV!ZJ=m(cf5-%SQM<eMmMX+)SkJ8<&0pus!I(FfjjRK91q3JIa8`IZ/3_u>sQ6gF/M_h9s^HGo#+T<kqiR\BX$b(iP^&pNHWN(Q,sGOd1>9,(?l7D%8nP%BF#T\$d))aR8LK;I4^gsYPCr10hClG%H*Q\^VV&&I81-pg=LkjhaC[u\8T\lLXI1DF7lCl9L#lQRA)mR@'ZLG8XWI+J;]+]?%]JkU!2MGnK&Ai8-VGQC^a8%Z);^c\jeqJbDjiF;q-7n'j!"!HK]oVL]!"!HKAZcFV&WT]7hPO-3.M2:^KpFWN107q$gn2JVB2^2o%"kL3Tou'aE$H8`9+salD>Cn(N>81aP'&++\k=W$.Z@FX)E=+Ns>^.,t&Oc)cf<98[Qk.Vn7jF<OUF3ZG4*h?d#G0:oFnQ`9*V<Ue%,^PGH"2BN!P5T`e3`n`DXC/R#cZrSS`O%/+,qN>L/,=Whm\2U=qLr=8krl`k2DJ\2EZHae>7(cD1h$tA[.bR\7kS*r#>;RZm,[i[%K=;ZVnm/165.KE;?kC'-fF-fW)W.TgoBrP4g>!'ES%l@()V9&;2<fnFQPr&ud9W3+.'_C`"CY7W.=N(RB?qaFS1]qTofGUK%ugq>%]!KYj(J5Fh'?2L5;n@6b2YTQ1_[U\g?rBe:*qY90DsE&9a@jr%Sf;quY`sSa<P70H2E<)R6q4@W)*8:^hbi`V)/PN4qbdoTV=/mQ%4-%05kQr>8O;&i-`9$2HA.plk6@t7\7$FrnihM8M*\_lS?V&bZffi*9*NmfqLo]NR)ltE'1Mp4%V7Y[_&`$'K),XYA?lD_dC^kFW%1X?/:Wc"j-=m9?JRH'b!-dE>@\lU-$-<,<@oA+6o.N'SY?d2d'hX&e`9WGe`j<?gTHOf*6Uha;s.//kCe_BPT"uROSkAVe!Y?#$H%K2@?]XTHGA;%']li`fCm7g/]Ki"hcCB?[cok58a`0-`X**bb_Jn-P-L/92j;2.k77QRn1-nQe8PXp=FGc%HhZ@qP&J#6/.t=!R8e%SA,t'7)gMYC(,WSPlm).oRq>VC6:&2:*&%u:>SUtZb@Jn&KW9N/U"jP=_?h&ri,'[[`S//%:fhTcq-9G]c!P[5OHf.bSX(Fl"Ya_%7MX>0+)E,P*>S3RMbcE_"FBNE*R+qYs5N1!2IB,L&)h:5/i$X2n^eo/07GX:hPJ\R0`3!.(G3@u*>[mT0JDoac+k#!^?Fcri:.CS%KN)*JZj_cE/P%>nmPp9!X.BQWn#5+)>/fl=;<.(e/&R&WmqJ6eND]HuJlQ?rL1%dkZ&7n_#(EBjX2o`!JM60+.^ECi-G.^V.^EDK%RU,/s'fD]/Z.`aaAUVUJ%A=C*AJNn%+h3FPX2t9U0OfL4,5\PM*=TWb,5\S.GGX%oAA<lcc[GI9_Ik>RcJ([Y!t#bN6IfSEpq6bo%E>F+4/R+=-='Bt#dmFb]k3c`INMjOQR4s*S,.$@BKH0`Q3\i$dq_/ss+!"A?SD?Ia3PqNnEP60`qm@V-79u;Z=fCfeMZdC>7tTED%7,BG@r>RA'^6fP!%@W9%eaeXa^8;b`5^rABbF4!eq4aXf6.FWQ6qE$/U;92)jiWm?qho(oOM<[kJg6E\GJ$>)@ZNLBG)?4^)->!o%Un8.N3^OaLLmDUVDbjl(@5>rC4rE1h6jOH"/i!n2V\Mn1h*'`KG\+&m9V'uJJ;S@]9HJ(?i7$^o]#iL\T4K^a46["15<l,T.QEJU%_<RGG*J;lF+@$Di)4#S5Ffr=5n<X<hYd`#jSTeBZ+5bS\E>C^KBV(Gq@f0W&+#]2[@U"ga]pk/-E51pSEBu5M'`Ld?JN"dYT9S)6%hR*7:NVoIH9thR=rL]#9/CiWqmQXalbnE8[iZAY38!l*;$=65JOipY9gd[Xfr;_LRm+6CS-G8pnrt,"[/obb-%__XHB)0#hYjmE3%IaAgjZ[+,@b%m-s`C>Qq;IU09h%-Fc:9."MknX6Gg-97UGPPK]NpdqnP79C`o2X3"SIr`CMclcO^3Z7<RA9RRqk<k+k@i5Qk"h)J%+*.D5=RC3rkSWS;BIkTe[V6@mB<`g#nAXH<Dm$LcmGt`Lj.f)CF8t$ANPuAhrI\a[n_L"0r8@O!e`G\UQFIa;r%h&YO+(M=7Pi_H%o,VUj\=[KPdDdZ)g@;>4TW;17.p;b-"Egp9o#1]>8$D?$Th0&1[gPoZnTq_];6pIE^Qf:`qK`u9OIF%",._%dVS9gb!2JR^ZM$=G%+/FAd4HG,oGQT++U6Q(_GLAFdq"#GVerR^!!L%6mo=D^=<$9u6B%O/0Oj1-3QoVcsS;jP$md0ZnLh;..hgZj,m&gq4r<mtl2EYI7%?J,7"0dRIWl->p:p.RTOoH@:us5M?MWu*CcB-CU7CZp09YhM_C)EM6<_E,LN*XFhl`LWX[_VY%CBH]UZ]GN63JJL!c`'`qQF]Af$%&=-_;(%j]2QL?Ar@\u61iu1j!CC%ssmBuVs,1+OJ;NVjA/.c^.1,R`GDdD]e;dXXA\N&C1o(?O2fM$^ZUASTspDO]e)\4<'jj)3F%h1"eZmO#mPh&boAW1VsDCVIh1GDk4dRR5m`s#nq2X\AHON/cC%4k["Q\S*^s>q$M?*A:5U,r5"<-X"W2Y<'egbGXLEg%eG>^A.;W%hEL^6q!K5`41D]H9]pH,on:@kR/qDeKg2cq?m2ajl[g!fhO=)^Tb+LT^9:oSd,;BOY&qZO+DbI]XS0RZV(QY3cLRAsjW*7T2:Era%?]R`p(jo8a&`LNO$A:P]NWaTelRdt=DXruqYb'@>NU:9.j%]BqI[jl-/1(6LlGr;2+\+'9(]2&Jc;G_:Z*EX$?iB`;6+u2AjdL`C%!VV\((jZ!u=3_W\"&+-%!Ea^.rE?0`*D.9QHDDX)**-lMQ@Ce2)"kp9l2"esM##,;kcA*)Tn?g$&-#h4UjjoY"R1on_/h_V:qu[#%Z_'>(T]>2$)#['N99E#a`,@=#oL@+B2ZSB1$OLeNF&sBQ04+,FeS_j&UE@S;j"lDQMY(T$#ODE`Hm(`-jPK*D021lH#[tG6QGFD0%Mno'p$j-+o7sa>-D`Cj/As!+l1L2&Upaa)1X1fc_iP'Ff%^r4i9RAUi`6F"^(J!YhRjF*X`H)l4h44^e!qGu)\[g2um`e3!1cXW+%NS2(L@?&rY0:2,I#WpaH/iT,*NS/5'8"0nW.i2;29s6^Y(?nH]7kB>cp4CE0=<j2\bBAN;fl@A57Y@\<QYVE8m6TU)%)KXU@!qsX%!st5&r#HSI%uV5`oS:()D=Gkukg.2IK>$_l[,&s9JLY>_itTc_,fIe>ZT,^;*W462A=qlrAhP22gW'BonY+=dG8H-YFF/o_XR!+*%d@PLn+*4dJd@CB/Sp7%)C@=c20Eu=T^R<']"CX&enZe.YTC,9642EO@\%)*4+RiCTFucK[=RYipXSj-/`_!YLE4fU2_od'">`]^'%G>6ODK63kCdJMhp;rRSE&DOq<2$Q:[T2/6,a&'lU&f#"!+8#6$`)ZEio]:hS9>Wn"\rGg9&0\nV:sd.&]\8fnMS6_M]$7_=(P4f)%IhG]rK@Oa/f^ng+ZF?P_lZn[-YK8&-CuUXFXhof?*`"jeb=t_oSousfS"4ddmC9@`-7@YaNmHP"j(T$W2a$VTg;/9lkeuLq-aI.I%-XJXsJ*T[!EE+S;@sM'Wa&bgeLi3jV/1'FOrO(6d6<7Y$G@m@$ZCdrmLaBI/Eqkkl<f]=8aY7%7P_S^"=rEk]-Rme6\]ZI`M>qMk%49)btI78i_bes9Mr7rB@X8JX3,s,)>!WKiAp#98#a%s\<^/FZd]b#e3U/#V\P5FV20>S*pasE(%91[$dJuU+8eA;HlQREf&D\YMm%2TGB,*be^]EUj'H^Cs`8#6+@>.g[f0F0^nddbl5SEkE\F.;S>u)Wur]]IZ=G(K:DG54JmJ=FL%CWU7OMQGV3)^E9/g3Vc&2)S]>?%l13Tn*^&X%HuPbs(i_V,*)(sV<!U+o<p/YDFYT/*-*m>VGG1c^k&r906dNY\1eT:h.?2te&.9Wh6^_4S,LX;`:Z-kBj_<5&muI@2%,$09c#,`AmE$[K1"sHVgK)e^=Wp1F]i$]l]!P^[]LYtcf"FnmK49Totj6'8K6Af.^\Ahr.-4[k/I:"c5V3Q][_G+SnBOONa%t`0`%(pEm=HmB4gs#RLZEb`,peBo<;+'MpfL&G(m&D03:4U?uE?)r)jp72nhRXI:t((rZj8M?c@Mjd9M>X7dcU0%ZMjX#QfFKT?bbP`Q!%FPH/<.%94'd`XEPp/oJ\-*TM3rO,2a@f%'o3Z0TsJE?&BZuidU867+]^'-^"fB(`BD6gW\b,RkuipIHE<Tt!%@d8*8^'*\:`71h#%>l^p?Qs;uV)Z!)TX3u;PlD<)CklQ\qhYWa7W7If7727U_Q,8=h?UAG$Y\#;C4%!l&.-m&ao>c(',q_Bg[u)\oO7&UHjO_)Tf)HcD%)RF^i\0L&J7a,fXM`!u8cK!%c_[Ak=A)o^8mMu&pCFlVpA$0-*=_#T8a#OOuf<AFgCS!i"`o7-R(Q@odLZ0W4eW'8?&sgV:4csSN%,,))2kKb9@a9bAhBD)c!<G>\Mnqh0=)[Y?3,QKIQ"h^JK#r0dZs*FWJ)CiLBTi-65Rf*@j595gH?]u\m7K-<N=t0EMp!f..f/"k!%Dj#Rg>r*V_./eqpacb@*9B%<44NI>cHa'7A.8;\pl3VJmQ]T_-KN(]2R+dV!"MYR.fT@+!oV(lq='0ErbW._bUL5A#]$YVO0t*((%^EIs`U(>L?U@Q3G;,k7kM[R,f[p)3.a%<h86l]Q(e4q*(AXL+"I[c<Mo3%OI[8Xr(K.E!5]0sAqd^tK(871mOZ(EYK^YaM/Lp"oi%l2q)3/G4DbFWf6b^aR6e\ulZda+i%&8+a/ml"!#tc1c?!JaD,_0Z<F5Js"$t82X/Mmb\uWpB;S*k7e$rb2uJRbOjNc4=K3%kRjH>%d;mnNV7mPT2dn/W0!+VYYb`Ubr<^.hO,^_PRcL9Y`OD[_2_YL@cQC2q%PD_m"m.*WIffpBTW;lnMSH2>n]Ube.fMV\]V5tYC0bk.%<Mm-GFLJ*\p*%.!!)lAa!I.B<,cIF_WTW-27ZZ7,9'@nJ;,<gP1)Gf9;o4?JWahG@b9$m,;E'r5,lJ99lA5Akg[B3+`od*#&!naq%ZS+cM-EjmVcP.gYU])HYPce-D1ksb!,isfn`iiDnp861;pasR/Y#dcZmp9Bf!f/<[qe6VRg-a&WgZ+b#Ue$Q6AR/+@ROu6g9^hUH%OQbWfB6tjU''+@j*+\LeatruinH_N9BJ..JJ>,Sq5b\=%*1.A&q@9f?G<'se41YuldbM$4US.M9@T(DM2H;u(XSnmdLi4TH;8C6q%#*IEkWJ&q^IUK=PMVVV$qLkW]fff>]VEp=?)rF7!&A8tcPh,5hX9=PgGS*[Dmh8$GMJ2Z"T<E6<f9i9+GZ3WHHfrb(D(d3q>tOt9%Hs`/GME2M\-UV0;NB0E(j>b.:'9r[&<CE3IjV[@X^d2qsP4i(,(^TRM(3b)\k$`UoH^pb\W:k^iC=PD[Sif3ql`oOtqtGDcXViL'%Q^Lf;L?:U(^h=p#alCI8D6&Nt$@u<YCD1e3c76(<-IJDk_CE)q7`Pe53E?W'T&Mo6i[4$T&+;kCTkB=-mhb\8lW)ou#2)\=7rL)!%6CXDa75e'M>t:rZ(#FVtg<o_/cNIKrbtt=j^\EFFVG0n<Hq3sYGKQS(WM\%G2g)c+`'G-iQl:!Yj.8I3f&5[Z&RS5F"KE7m]SOP@%*e;AdYJFN8\[6B]m7g`r`0JAqTq9%r6[5$F8j,bL<Zo[JAQ#?jKkj`S"5*KrTF:M(aNl`609JZ:Wug"hW1a8]3gR<58r7<@kb0i8%Y^HJaBnf2u5/%9=;D4DR>`FN[@Kn/\7_E(R'rRl<@O.&0<[BoXFj1J,^:0/>E3%gMOt@.WZEa6FC.$"8"\uk?#nGF"IHT"#*qo\+%'#9Q'Tm95u_HS=*V].)01B"K5CUepu;GmR'$\6)SX@2u+cJmgFV%:';Z-7YjCk#H'Pi_kqb5EB7mX*QPG;"MdlYU9]#@:mZXLVQ6%rAd1D/1uR;QhM[,d!mpi'T`[;Oohu)(d0u@l=gj-M3XgcRM0]H_\O/I_O$/[%?5q'qulAB2nVaVZ4_pBEu,e5JcnncaX^RT&2#Of%lPHkSVE'bDd5'W^)Vfq?qQ^lg7cG(V?INMunnc?S.fe/A0Vn[j0ks$Jj1+eB9kfVd4K,dikYE&U%qn<2!ZAKBL"6;ddb+;=#p<.b%S'=ipU5<i\Bti.m$L/)3gZ"\XWE?R$H9>HG%>>)7?&h609QD'nA?+iJ.Vapdi[DXLo=]n]d-,!0aFXjGN9t;W_8t:_L*j(V8N5=J%Yc*=(:b?N_cT-Xea=GBuJI,(GToBg+K")kc.;2W*-q5>CME]#$+[qY9;\uLXQ1hVf$bB8#?r_@UM*E.#2e\B^i.9/R!B`DE9l'hU%'SJca>POt".1Xt_KkW*24gY=IIbQu:fks:C+XPg7.AaA=@B[dJN!t2*]flT"KsOq!,/L$Ejsc"("iE705mH![(],(M.e^5QC,\p5%jU\?`h=6hnhs]abmZnIaZ?mJ\@]ENK.MBV.10&"YWFBS?L_Y,;;h[,s.U9$0em4sM9"R)V;oR0]&cG=O9GL2f"jVPR9GL2f"hL,S%R49=;Z_KBXY#rDeMp.#hU1_Dsr]iWP&fs;=<+W(c>-sG*XkH`?[kIHCIXrOJC:GUfMP[!j-m&.oWYc/0ll_94.71+s,aRF9Os9=B%JlmmgP*0o$8PuNIfZ-n&6rF*F@#-K6"=)IqX?ZE9KV1ZdBW2BG97',$*;0#_RC+5_r06O_JDRfU?EqkC['EcWX;+Pnn^h)%ZW;aX%K"\j\E+H/>h%ZrKG'D!^?AUj3>W,j8,)i\4KEbj7SItPeOK#LUnpAUo@<?R`6(!*\e3jL<W%SF9rgOIRq@@#I+q43a6l;FgE/cQ.%AhKrL)"TX=rum=M_BeXidif.OguAT*;[5J&FBXPW2.qn&g,[M&bTc[c6Y#lI('O.,2$ajcG_$U_n:''TVk<G$O1!I&$#t:4&`<pU%=17@edfp*6Q#$JV[Kddp^K7`5:bIHod1Os&&Q<=s"KZ&1`L:43n<,n&?\ChE/_0o^=[ZV)a[NVb(PD]G+jA#B=p-O#\njXpK<4,[%I<D6_=^LEuUqs*L8[6"#,WeePZ8#EF45!o')60#5I[/-=K=k$hN,U?%`N$6YK:_eD%5>[D_]gp:@"sX_Nd!bD)bimdr!2at"E<^&%)"KLt+nH?sGD>BP@$rFK6C93D-;N[UfH\rd(W%S[<ZbI0mqq%6V"h)T&L0+EgR/rr.PXB5fCeXc_$h?X%gl&#kcTWlU>2dgWmd_J%Gd.;Ze_Y!k.7@O7%o0_r(unEa7?"oZB8;&B5M77X>`lDfSS*kV'3WBlfd!,TS)?J7A=k@ZKQ4GVStE27VE=$Z.75?pNCZ4Q[T0;=%).C#jQ+kl5RjA2;9e;<0oqT+I=53'_YirTjRl*)Fb*5:W4-1F^mBqSK$Y<H02t1,B>I,c;A+8k2XmPcdD2<iN!cH@3!PE+fq9TOc%!auHRi`Y'C??`cNn\1p_K/KOkI&/T>n<28Q&V7/M7<SPm)_)47SlY&NO.]lcCHp]SN0l*AVTrMBrL3OVH\Xq3#&UL^`)-+EB;Js7%V;@o;0:$+P3-NXXI`=]l-XM::lgi<er;??nUCOGX^F=5dq855<37GdsG!jP7(RQ7be<D1CDY)-<;euo3=QQ%::?<h=DL]S3QLS1A%PNXcR9,bRa,A%h0<I4s_&R<cZ/[kL\7rU?UgP_8+0q8)L,-0p]/s6V>`ChcVNf+PrSHE<4=>$'hNTD''\`gXD^J`YjofLF)r3E`R%gkMPOdTEZ#,W?;.-^JNia]3TFJskd[QAZuu\Ef;L,e&d1MhTQf&+4nRO<XG$BcU#G&)eF-c^#_#&*]]=jS+!>8<Lr@QL<2=M^.TT%J<-dd'\pa:h4a:e:FRAY=G5O_%O#D4G/62]#3!-W?dZe#99e4Ip<t*?0uFXJ9CdZ]Ta="k#^;^[7$E7:e7ArEZ<p_Z".F2?]T@/-%19&]t!e!Q3*qjReCk'gM$qkP5a]C<]`[:MT?qDL-%Sb1<gHo3P)np?Y=_L<ZCO0@ZoS>N0ZCSr0$%PZ9mVb+_T'rON0(Kuc9"ANP%#YZto#^gFjY10*dC)^>NGM1[,;%_'m98dTR<CYVd`Zq?U/8lf9XCcKe>ar>MC,*DurnXu$\3B`G=:9nt)gZIgr,q8[BKNGfL8<XM%2pA#2hb^s)D3^R;^X7<cn83ogkW5>+-fCYWj+KH07oe#RmGrM8EJ4>4CRgnP/e0L.[WQT.S@FQBF7>8HGB",<53RcAQ9f^T>,`Z6%C;J(Eo'aXM);d>l*(GYsk\U1hOQBok:D??^7m;k1DH^]@^)e^DUsKX"O@M:<lA:hR5?Xs`]g(@YX9<%=7l4?j.l#GYha"7G\-[I<%q9!(`Y`H%%Z.dbJRa_RbqcF.oIOd7S%qpl'8XtP2KtJe(-O?(f22ZjVM&DT^*28;%J-h6rW^A*KBQEWW*\[n$L=C9^gg^)oBhA#9%EqCcg?U[^`E%"2&F<M<D<-j*@"[0fo?&a%AVib\8>A*d+erD!D#1(#Q&q0'IrQ*;d8f'/nI:Rh"hCMqPlrfF9]X\N>Lh\=:Pe<Ep%3:qSbhe6LlSr;JW![_k&io2n_\G/e]io#V:X"Sp#*-Z^R2f17Jp2+$Z8\&e[%+3I^"AG&)ZHgS^2.-JkbI(*j1'.Pk)))@D>3J"Q%oN#=9,mKiM(?rjDEe*G%AcWR$OBaVc=FLft6OK`aJWpEFrOuJ%Cft`^.K7@qRu=tN-i8FNm"tT[Ia'_gm!SOXLTs60Oc=&6CVU(R%2I-[nF,rR!SQ`l9gr2:83/s3%]Dfo;6@"BP:c]Gep1f5'5\P.uQM+eF;/4`\@Mj=dFd!^j8IP]SiP_s^96-.5:=`pIa<S3?l'WlQ%OggHQo"W6^K7T5@m<W,5j;.3jkb5`E>k>VR,>cJ2fhSBo<A'"\`9t7d$GuCP$ef)WLKs5UN?ot#_b1gj5.;3#6t7TK@7YBe;D,D]%LBm"Eq<koM3H+9p)\8hoHO]7!_'b0:rX=_)j8[#hUAp.C2#I)DV\O\Ckm##\@^%ZW59K5SnUInE1V.%c_n(iplgDfKUO]Kn3oTuE%0g90IkDRA%e,(WJg,_<c`fU7:gbl9<'RIq6<6>B]CO+0$]ojBi[acl?W)2\&Y\G>c._TKBZ(.mNMp(@eFW;_O;qmk*S(6$N]@W<7%D:\M9lcIE8gNmo3W;V=I\67km13kZjZ^Nc0NnbUAHa2=Zct4?7KgF10ao`S1X[!)(g7O&i9KJ\.@'<Z+&.N(._"d6UQK2i'c$rr8%3Jl2EbuQof+,8aAA^kqDT$nmh%<#'q_YZAN\ddV#$$_$Bl&YeGhuXXP:2lPXoG2=WO"4PhfjuDS?N8$fak@gE]BLk"Hn[3,bIC8#%12b5HODDgWJh<p`@DnY@V`SR7UL0.#'idpZ5SuDbK/NYD+ZlHj%gI.^`c+1F65BWL;l5>`7S38*@^V0Ff=nuaOGrI_QIdd[@`S_C%neOKi9\<VT4n<J_]N+VImAMd9c<+6#k&J(;0RV2GK<bF%YtI]bOPr&C74*j>OUk%1HD.FnOS)]\ns(PL8Cq\!=LVk]L/d]*<I@=V%2Ipum#t@h=*G`1ijB4<I=/O=W(c9U0cI-+lT>'(4?LYfQWRblh4tGIA?>5tt"goESd=o1lXlEuR*tH?fr(9h[&SjWJik"&e6#elF%[R.5I<tU8H&j\.s\-;al$]?JE=G%qW&m_Y7;1V?3"et7C?]SmC9oDi&gHarkP#@lKG2^#GT80boo"J<_rV@*i^)<a])"T98Y9=Mc%&`X/8F&iB$SmMLOC$uTn,)$AgbFui6DGWZ5Edkr5s0Y=:'lXZ=FHSqm@'kinK%iJ0W5Dc8hoPC#=kuT;n,V&fT,ol#k2+4B3QrKC%Am'RTO0HtDL)KV%M-W@eMA0Zqes`67=G@^ce"q,QO`O)5Kc.CYB&@G.B$c"3U0ZNj9KF#M&,/V'#.g*FT\2$C#go6.#FJ*9^s),?%L)H.`Xhog$#435Z`#FFKZO"2QbWq.sO,XY_*!+9V?ag0h,ef2TC6DtZAU;Rn.Da6e0(nkP1mg_1O@M[OCl*Mr'P>c6l8dC49/+g\%@$O<BYlA`pS@C#mD[pA9*hPU>`6u,!6>tjoms>aBem9t]Z1iVK2UV^bXbN.gA&ioh%sm`$=XcQ,Aj:aroj,Rc$<)/K;8&?UY-+rC%B4p]/*&qb'2SPP4@.4N2j;,Z92FESs;Q8$1-b\qc_F;lS@=?9+I5dk&lI>6g*4Ft"(C45W]5S2cjLaIn!VS["MrYn@;<>FX?V=Cr%pCnO&$gm@CWGFB6CmWXY$or;V2s^XsG5\Nd;l!@p=uE'@5,dj7K6;5E"GL^^Ll)IcOu5(4\IdM(+7n^N:P(5(6$6QaI%t'%fUkXT%8jO;?X>4>S^0YPZZW$<XS:C+!'BfYkX,D"!We4c;cAhF:BZkCX#?Flnm;SUNSjYL1pc+LXdh(/d0a:8WO"q2<aeS3DXt1.0n$SKd%XUa*(1e+=eW'PjH?LBAi3t]2uS5#INr5gWKC42tl7$ds-UYcsS\bhVq$S9D^>cF=P]3nsf5-T^sKh*m.!_^WnjYF'9e[\Q_Q=>H?%U8PeiOr88":G?o'%4s&0_KdB5?U1(%)#H55]K;.&9;hsc)8Nscm0AaZM/,Y2_NGL2ftiS=CS9=d0<q[&``6l:!fHYk%7.tn@frri%;OK1)@-QZh$\53%7$;;7\Hj#)I4TB3,!r$Xh=i!QHQ2G34E=4`.L'aY_2fdNK.b>icpZA30QVsSM=R#s;FYS3.Z7IC_>KC@5$7M(%GSCj.Y.3V8ViA#uT[oJYNb-u2#f(>2Guk8VQOT4<B<3jfbWu`U8X,1PH!O"'?%"I7JZ<nj;&IillM9W/YNsuu]NHqh&CP-jIGe$A%.YM[d9mdbHnfVenG7Bh[Z8`-e04K2<ZAthM02sF#39WM"hf!*+eG2^BGn>!(DZLPrP>$k%F>56g,JR-`eF+XgE<jAHYR#FVEFgRJ%"AM0T9oDG^h`2A**f6QTL('!Q+Hc.GRA;nk\8kN6?\WfY%$cD#7MC(T1Q00"JoH=m0"8=K=0R`tN)&>$`XAoHeiBCpC\o,6:G#R5%QBF3H>$ikOk+Mp[l]7t++M[@nmMm:L-JE_8VXu5M1,rBa5R6a47i>MX32LUn**PK,le.]^6RWTf<WYU.:Th*fkB-eKAsB_4#XNYp%P/q_8_mN/lY3jV9+f_sSK<rr(3+P!Y,o7\Aars]n4T$^#ajVjZS#Vsl;&n2hjLaWpq4rTD65>'591&n\16)"rI1\X!rAW19269Lj%.-oi'PGWkL'7gP0ZiNX@SOk%oXd.Sd7]lR/(J?W1jLR'+IFQu-8HY@m+$&<$UqrT:]>`.J8TSnH]\fA_b;//Q[qFapFmj"lq74UP%,3OlbUHbbb,Hm'`mH+>IkKVN.omWr/B233>-c[=F'\i#+Nl<aN`!6s:5DR?iIdr*jWF&ND'Bo"Rh=;+_C9N[--hZhEKSV8"/i9G(%Ru;7)J\C`P&._=lgk&k)=eo8<M=sb,i^r6#/`YWZG7b3_]T`\h&N'\?I+`gD,7M+1-YWpN>#,uDUe$\8Xt,Z(*WaLd6_NDWH8;L8%W9TaZh(mU[Gs7Fo-WWc!CCM/'!d<=7LHD\1f$gqDnjhrG@Qg]rU3[h#C`Kr.U5KP+MFMd7iab&OI2EC2159L@'LBLI5pKEg,"N$k%d9MFLaBa]/7<bo!al=X2KUjSpL6RUd]iUmEJ<L?HC8)MhOl"*a?d>B=D#M4@TKtg@Kl`W4-l$bKii+L^r&6#HR,-$I^Cp`-lK'd]%GisaA4#5j=n0a/sEc<'NWGAY%Dg`FlFG=R.5J-8u)J\5LZh$r*"*INR/rNQIDL6<Fj*`4fj1c`&Z2.GY,4ke)qI?N.iNeK:Xpc$N%i)_E$'F'q).PPnsO\In==]OV?8pUU2dp?-0N"SFca-FF'J=e1caR5Tg!_/#E3DAKjEY[_LW=,mCe:;>84'^1qmE@P`2l%#NF)8o`%2a;@u=p,PW$Pb4UVq?%"F0W4D3WYX:i4b?;Dg7tQC%Pdr:t#u_IKWBDBi')#K_:OIO=dZ1V?PGAUg3;cCQ_Y>j3\@$37ljYhm/-t%UKW=smsW#.lkb7JKJh@m?'IG_hFQ*#?'JUMl'n9:5:5'0QJ(d@#<.Qm_d,CQjp;kN3`ash7$L+lBOe?.&$rP#7E?QcRZQS$:3<lX%B?0RN\:VdkS6\;6=u+2Jp;Nf'q9gJFb8V1=2PHotn6VY>k1u+joNY6dr=*/Ya,tXjE5/\$PAjgm\Me,Oo2S`1,j_&]g:507Z5ua(%,fi52Xg%=]F9L]lGqGEeFN#RIA5QZ6$-4A1*hUb=2iK',p!I\agb1jcM&DTbaR:LFQskj(/'W!(FrcmA])\9R\#Y-us+mh(/5c.6%,=W=q/Oq"$.VBA_1s&jpao1&*,5*R,V<&qE@,ELm9panp&2c%IV8%T/AG0kk-C"[TSYMKOb9og;s#)?!]sE;:JZssjj_,INTs0uH%QL2g;F0T#:*@)HN[",>n')B8bRUM&T,,fF35%n7\`cb@d7't#4A\0-;d0^:#nm\3<`(^Dt*#p.l',aGBr%s$])#_6DX%^9j*oO0k%T/)cT9CRDHBVO\895&piIHpW93eB>#?9o7G@eG7<X@Ep9`IB6mG$_^A_N'UN)(^fcDB7MXk!*F]s/4"IHru_C[tG?\IA^8Fc<VD%%/X6gHNe,-%0/!Vt4Ij.8YWqT+'snj1Lhu^Ck^bapJp+1"L,";A03;FF9C4thh?/Z"]l?EgCJ#mpP%T*b7$;*4M>*O6K:JP\L:T9A%K!t&YoY?])X.&X?V2d^Z>KrnEJIUmq.FD1+Xn="THid`gGjG:IH+_ZYg):7o(2n'f=f0H?c<ln-<fe6/Lps6`FuBW7\E<U4ffjUt%[O_:mmuaAar^qb+U9,d=A!ZZ9hHS>bhO:?tkQp,kc^0DjD8@k"0*eC,qVe;kP;Gg]V#\"D?0G(\7h_usaNbI<Ni3b%V_'=X`I+!R%dpU:\rjQ[@>G9/'Y+<l;^&C.hK-k24!YKYnBG-@d@V&-][N[@TY3F!)P<;$WDm6QZEDPPDOr>Wtn:o]LiH*f`a8?I3L_Y,GU;rGX%YuT/9.upU,LJgVm$C6GWGAT70?M,&R#&G,fjP0,THGi<tNM9gj\Qopn;<`dUmatp</)Pr]TV@I!Xuc#@nLHO9-36fsW$n%OinTVD%=>RmLF2(Rp?>RMfP!GBWkR%J+"h3U2kdrQT?(^DL"L[YM1<C1LkIJ)uah7N)NkpN]?4@SMo0fbIP7/.B+eQnB_<Dka`(ZX="(cRF%4l8En>]]UZCLWn%5b8/oVe=HiUGl#tiF3<<<epQ3)"(Q)Qm;lOCS4@!"QkOjO6df'_.]DC]Gi7%jpC1/GV`/AoAn0-\AXpnQr@Y<%9S4abE).F6-d9dJ0q/0T(:cNuP;1o_IRd*6iQXet(%XiSnSKK@.[qe%:sj,pTN$e6+t1s.<:Q;Tg:T,QY@Wuin*LS/,-O[Y4=R&A%?ad3<KOUN\73)`&Qq'j_jaE'".L9ME-<M-6jhJjB/AHV*)C16Oa]C10PO<&HkX1LU)QW6V\H1AL\aDe&Y7-&t7Ult3`D1\"A-\SI%Jm&i3i?^B^BR<[sdSNfHU-O-eI_4]p_flbt!lC00s/fIloEXnsZpB*#KM+4\8fB?/<(+geGj8I<ge/*P@8[0&8=e8]6V?B7#:L3l%Cb;I(15EKWmUs[U3^4IhefhJ!hR8&5cX27_=rNb\?^Oq%n'X;H,^?D:b/KEn*Tle[SMg,*'*slG7"G21[0.5Z=@B]R,J>J7RoGfH%oj:m)XjJ,#<*fM2$+7-M/K5@Z5ASfV1`sP0qhC<*>oc88`lpZDFb@Icopsrn%@Jp!S1p".qB1$(o?p]R!0Vf:$c/=_C591B-,dio%G1C`lk>G]a7:e:$H'Tff?:$tG"#0As(#kO.E[f7ZlKW,eLq;k4n#;6C9#k4[SbLV;45"=L?0=@nOeq-KX02&c\dl)bYTaeRm<7>S%=/\r<bF9dEg20kPl<Q/3hmFDMHnNL(TjXZ<l!(3&WEg[dL)KN<*D;F$ecBld(4je(8Hd+'brtp+:50IaEFdPu::hXP=U#n3L5H"/%2"PhEBp!/)!MpV<3$uTH1]k\f#!(M^(t(/4>,9f]e-Od,1qIO(PEhUa3MS6^3C_I21!Xgg:e<$eV9k!AH-"Lf:AGptrMM')J>@Dm%jpfANqd23=52c.>=b>37;j,Q!b%qQT`DM4'o?o1t"6?L0ZUfSn=E/XDe3'.mQ`e@$/0r`Jk?@Jr4:Yk4^._d`$\fFndXFRAJouQc%4]D7`(CVmaY"Zdl;Z#dBJr<U-@Lk)^X4OL5.@T,L9(J,#JBOKij-WEo4BBGdqoS::"rDQED%p7E*eF:L,IjBm@&B6$d^@jK>[jcL%\4d>pFbPcKXF_a/nD;b6*iZ>C>rB&oZU5GBifJ0OoN>jX5$(Je9ZW"c3>hgi*%A\!l87IHoYma7C))/*la`&M_A*5_2F%t@pR2f\%h&'!C.5QZLA%@qD$Wj,6\b]F2`+sO'\.Vm9GgLZ$,DbIH]0(%p6t_>2rs#!OeH421,=<Dl5a=mC$1$9R$90>p/$C['Z!:B4G*-#U%@q?=s[B+mG_f;!oH:1\FS_I]<_;[`MLB(be8&TCap"5^Z6ug##C`QU!)M"foO5-ID]l+*K:oiNX7qC`mR;6pL,PtEnV1Q6\YXLhp%+2TUAHVId[mn^I41>!3FY7%hP]\BJ>W5:-P_%p=QIGr@B\-5*L=\5_tWBq/6!QC=_-JT4=mW#"]%a5k8ggV.;;0JcHi>0UE9>F31%-(Z@rY/9X:&T11ZWWi!5908Z`C'oi;%"8.;/r>gIX,ELfPDNq7FeKj\SL5XOE"RI+.\Kou0SF0R`@eO*W^)=Q"#0\[e[G4mFJjN%%&u:<^.6b%\YPjscaL,l]SAd6RjG].id("LAprMCT>IV`hl7VFD6oPQlX3C<2k\u,P'0A2@qZ!us-CXn/f.NHrk>;UqK8WMmHmQl,%`9ab_ImFnj'Z.D\QjS'R.YX*Y<Cf`_@45#=+>g6BXiS0917TOE+NOU6K]/.?>r^qqX)UWH:iR@J;=XBP!\-s_.>:bUdY4:cSdcA8%o*"6pM%,\/3[)ORkLguOVDefCRF92D0g0,5D/Yo*=shsPi_F>(;Tf2hf=JFc81bJuC+\*coLDetRonT7?5cU<HUNF%SX1%l$rjWR%<lTqg;oD<\h!6Dg.C+e&'r*3e<iKP<N4:]5^ukAt=drPKXWlqPQV==I'=1k%MKN868$U)/$-bgh>\`&)q9-U7=Tmjd:G#i6dt_*d%bP2B#KZiY-VV&I/TY.FdXEj_3lXm0W-X\BgVA5Ec^GdlPD'YlmM_LG7jkE;V;>^QhaStg%Z&,*o4Wc7"./q.\"M`BeDC(PD0Yth=%C1*\+_2:;=[*M4)5,oGNQsr9Gf1@(V?%$5+LRV9GMkilY&TZT<,=ruuMeUU')bKlcn&%e]oXW<pI;g4.D/>IT(I\?CA$(TTo[1[u%[7MIERD9kZT!sG$q.N!V4r+E6RIp<%4jQ/bqFG7qcNX6XUlQ?7e*]-OP<M=@Xc!70-F-5tUnVbFM?f`).$?bf5LcXBD8(\;950#,%=$V:'8)l@Uor*(&L><'6D:N8Kp0N1*"PH:C!b#0#+Nm<ul^o>`_R4^"lGb"k*<'0mjKUSG<7*&b23(WC)8h<L!*ud+qNk3^*('Cl%e3DKqQ72>,qdlOV[N7J&@`r>f1]$jr_HjhR]!kpNJ,cR'ql^d\2hZ0Nb5WR#-j]EF)ug9Xk%Wou@@dl2EW$*n(5[gN+9"VE>D+`S%##u.a!MNKZCChg#@@<Edk\lJ8g,[M&%%CmmY9a<KTpL6J_Yc_rOkjDcOZj1#*^:/r5M*SE;S^]D_>4h(=bKfX.%al]^qmW\;pJ8o%*G0[%*15QV06*@DIb312N1B#"'Sj5C?eLLSCP]l9?+;Ag3OiZIg>2tVaNVD(>kF1Ig)k@)e..C1W=u&.,,K1*#n*#?b8?D!O<!g'%:SC`GPLZl\1!Cb:W5mR&FS!SKf4]Ql2BR/iKBAc6C<i&KGl#rY:/e`B67oju9a!P)%lWVV5*uR^ClGcq&<8'*#?e2E3U@'":@fU3%MZ0$jO?\/R_[+sI<YDjL);bCintZd/[^lm15K]0LK@IH>bTJA1,Fj8:OICchU(3IZO?lM'1.Z.Ts63Sm&8"jU$H`s=]45bM9gQlC%"i?a-;p\![2l3CEBISH@ZRIa8np5aX\L0o?EGkYS4&ad5=g3?AM@NJ$$<:P+\N\t)#U&5Yg\ln"b-UO@;NfUmOq(!OTSYX-KX%e)%Yt8)&Z$pL6OJ2gk?!X'=8?n?2k;q6g6MI71[nhsW+:!)0*Z-<fOHOpI[[C*2d_O;`>5brD3u]G7kda_DR=/V,D$!UWJ>-'K;]s'J%(-k4c`HOl#!K+nZhcS!;+M8Ifns@WF70b6pbe"CI@]K2Ke;k2,MQ,_OW?`dYrJg?#Pe@O<EW_Dt!u,Mj>7W1DP*?fIbsa(0Pb`tI%gJ)f*;ZHu\(l"9iQZgJ@8C7GF<X7>T="skTKZ`8u<:MJhK(cnZ;Ms&%F"ToB<8OZ;84epXc5AZm8W]+`Qd2QH2KMfPPB7r!&?g)#%e6W)4VfJhqoPUP6Qla<!6d"_e"f0L>lM9jrO%Fc-G8(u"6,nA;\bfQf]f;"5&o/;n(A2kSZ;:]VUi9"g3CPh7ZQs^@TE]iiXi3-a%42h+O5,*lOQJgC!.@Rbah]\sWD+NS#@nGcSX<I*A9b*mp1G$@f0k)tJ>R"'0D2H!?^5Ic5pk]nt2V/0>ZdFW@GW:PPkXbo/?V/\b%_b1LNgkD/pMau1tX3de-8Q<inHR9EJg*QtuieD#]ER\8p!oK6D/ZssElM3Tbg+ndjR^I'/#fsc3L17`o3!4f&8Ng*[=2gm%C9->^%]k3s]'\G\R*nQZqUacl>q>F=92Ufd6c56MFZ?;.j0aC-4(nFQJN_/'^nnb4E^8HOHr%@YICY,8Yp*scQb)WfieEV,"kE?o,TKkY)%o8Xfdr2Se<;DsC&Ub/CtA6c.8@-_9cKsjR(s0<5-d/aS&)nU\98)9@t`fT)>U74%0O`(S,f8t#OaI#7#/8Q4VlrtMIUJ#V+N>:/V%5_8m>!D(T=MUX0$5=dMmhA7@]=ccf*@fXk@8fFBkY(3UE;eBctPXkhW>&F=W$u*D7ErXiFJh0l*m/+4'8C7GF<][O>PU5]mDkOn#%"IlcKU=+hMN*m;'PX(TQ;VELB@8]YD!K%kLobUM6<E9f!d5$C^+Q\hZ><ke+LW1sr_6RZ65ga@7q#i--5V_O$[=NL2;SOIfOFeO&%qJ0Q8A.b+YS'9]4FB?O.999c;Jm<K.b=/!i9+sk<1<J-c"$1WCRMV!OQR;POIt4:s3^D):PP8?X7En>g+N=BCKc!X>g#$3/6=UGT%5=j0&$9hfJ+Q_bW2<(O2MB@p8:6o1$Wkc)B<fdB)g-UKr2!Uq;3Z-R;MF@cf/H&C+W\_>XpQ5YVdR,!MY'.%G+ju]WmG+HWkY?]q%`4olK*qlU&G.+L=j6SML0*IbLA:@f2#fQ$#`dJ<7(?[(,@f(IrE#o:ok.C5&kIe2aCcn5Zlnta!"J77-q_S6?[Pu5+LHe6-GHsJ`%I*$SjgV:emf>SF"Vg_)-S"hTcfe!`(rVU!Z%&.i`9-8I()Be<WdY>gX<ue:BWIDE_pJQRCZBQP)U$075`"NF!XY7S'PqlT9JP'""%Mp@Xn=;!(Zrcc^S96Z\V7'<ZC_N1Q#MFLN>W$!8qD2HA&:ZiAi$1(aEi`a`q*Dp>m(i&i@hCiNB("&=L\'-^ZT$NROBZo3h993O\%+e,-h`<(ajc$$Vg$=7Snh0@U>fTsgOe`$qDeuCKA1^A5hS(N\pE2Ntu(3sG6%-h4e:t5*m.1b:9hu_l#gtNc)@^RUG57c>ulecY!%!DYbu7<TbG>c<n/UJK&F.))fkKbl@^p0L0TI`<]"Z/694RB<.9p:^[[]+FfhB@-mkIUU"8<`Ns7EQtDb*@R*RnBA,H]*SB\G4mgH%k_3M9m4V:FGcDl?l]:8g?+5PW+(-Ki9Q*&<^r5fTG7jLX\E8(A$]nM(B7j#br:<OY7m5IaL02QT*rZZ'_H`M\reC$s15!EhTJt\$%iJR&L+$J+>g/?qHKtp'Glck%?H_q^?om`'GiM0MP-+a.dY^1c76PA'!(R2=&Aj+^:3J',2CttQ('^N1i_\sFJ$uF>dE6jt[i#L=T%YNrLOCJ(nj>kNG<l0J#h,-DHpgf8](F/^2_#\02(7jHT`1Q+P)82l)p)3=_4D&Oi)q48A/(WsUhMLu^uVDAij-;>uXFLeI#b$FF-%\LA'kNZ,-bDjHXYN,f!#M\%5*`=hE/^OChd4r@Rl'(@u%`%?a&8>ZUM+pO%shB<#Y.R7N02Hh&7XjONi]Bo2tCEtheae>2!1*D\c%KuE@:Li[0rIO!0k-aO<e_CXFJdVZ.tGB.4(1WR75QClSMfQq7ZMX@:Z>9VAN#gAt?JptGh0[,=ohhGRZcrkB60S;hgZCeX7,k]sG%#g>h%$Wf#LgpL"MXd3Bb?c/drRGDOh6QN!d_[Jh$Bcg^e3jJB[4Z5JpE!.kIIbi__JseaEVcNs,Ae'$aV['*8/4,%Q7,UkU)TVn?%5I,g-b*[Lh\EupCdm;U-,Y$_cEQBY%F9u=ZF0%"B)haV]qK<8?9>&XX-@=XF@']KH)2u8l,I!F[_;ldroET\qb$cY+b-fTko_FWM%F!NE\FntN<S=hnj&14@%@CJJe[^CRd3'2K56T`(oOc;"@$j*-O2JraJB+so`Rr$*"&6&5#i#uhUI>V_RB9`?m[$7!kk/Dba>!@2I%^.5CcbK0Q(UJ]COIk=ZghG\)50!r7VUpAD7UJ&DW:78LCd30pLMk7&QZ3u+sa;?AV5WskLQrr!\]=CC[%^jR,fpa1;Sg8PP\Ia"#%H1]o?jLE1HIh49i_0c2$4LpiV1f/l[Xc^bf\bg]PEQq7l"4*'!mrpok?<i`.;N?U_<>,KEHe=(`a@!kT1@fZO@m#`U1D(YK\7l4A%WQ#e,#KgOm'pOleU5m,hq7ZKBX4:YUNQ.pH))\A]f?9`(GpgJ\PI!ieT0F3*7]k!9;QY#Jfb-WFRgCuK1XpL?.:H:@aASJolA$9s%b!.akHArh^K^!-DI6aeLg)KK`5cQ<?\=DDZV<MIq:mllpj=TV$&bfCR98/n"]S/=='Rs=?.?P*]*V>m@bG;l/GqUF]IJ-C/GtTIi%rrR3"R'QJX(-ll)7$#:+<M#(&Ehu]u_!Ro0fgf%QdQBG+IRtm[;$Z)NAHAS<.[<;/VOFUbZ!eUVJf%8n@hQ_E.bJH%cZScSmE/DF%#6BoE#>bT+15"d+F8,I^&@A]gVajG`89(DQfSaI@2dY(GaSGWK2bF'Neuf-Q#Qp9oj.6<L:j(e1U^/)8@1$d[k==\kWo'VQkbnEV%!_E?$(?^!'lMdb;fae/I3cc_]G/+D[9O+#ZLA\d=$bP_rP#TBAd=-'RktW2:a]3\_@i"5cl"K"bEJh-sa)[\S?Me3%)s<?5_NI\r%fo[K7.Qjq:S]E).Mj"OM1qi1-E`892L3T#6Y71&X)HJ7n*1dq!6aV$I]a_`.OYkNUKruQHqqPlf/?kSQ;!3@TY3gG;_hQRW(_oq\%,MuBhKu.OFZG'TQ4ckH"i=<CdE?R"'R[0#I2Z+O'%p"mDVKZm<3Qfu46D/_p/88kq3:AC)`_U`li5kQ,);[6j&*;J%K?E/!_)hU7%n!_(:[FtTS.qrYSFactTCWt,q6jqTT]o1H%oAZ3iM@scl;_t`-FBLKO:#@@ZCKC"3o\t6rD0Fn)s!"b./<aT_D;fhP(uF(uK=IpX%ZDadT<fBU8(qPdT/!%Y7$TLk:UYB1o*)k/gbF[el$&L9G2N#;QkXmhb7p]>u!I:r^0.)Hl:`lV;9?+P3`L>i*%&%3H&el4OqI15:%d'_VhmR]Q'knZWj-dBWho6u<q/^)u0p2&NumN#"_5<#!'jG%YsoI&1)jIbtSaB^mdE>?<afBR=Sj('l'q$O!Cd`92b?YKYtE'K`&%N"n*iD",l&51k/?s(;5miqt(I2,dk(UOCtsp`M8aI.,@29W3li*]22He"$LPVZ'sB>15I6K,*-gEU9_&GtVtk,NckJ9?Kui8CY8)%C+,iep\X>a.1go/kLKZ4pikC*8oo^l9R[Z?>qrDm+d<As7E=iaPS]39eTuX9!r>*7*BQ"S$me2T6imtm\F%QQ'-D,#!o``o$0/5c%c4[S%o7IL)gpoJ3o>2f564n`I'2S_eY7B.6(A?'n0T)E,2Y-5-Dleo25c>k<U/ZY-AMj:j!j4G3*Y<"GYWL3m:]0F:"0`0m?X]'E%EP6p"?4\P]3='mFKg1tW\f`W6>LXR8QY_&;2Q7-&*F`Ta$)<_"k_]]u^:8B;(HW?%2<\JP;,Rpj!GRhPT<3-+2$TY#IgS4k1'GHY%5P<-1C,qP7.5:mB;TmaD'+uA/Y"U=m]^$-u9pBCk278roW(2fXA?Q0R;Aj,3p9BPi5F9A.GA#"%r*c(^C8,glPRY1@[[(_b4pOYA%*`q!e:Z#C%U!DBW1R0G3.9*7,O6N1S(kL.L02r2q?k(2kNO(X?<8l#c#!UPS`[oQ!FY#(7mF;Cm0"g6LBLV9_QTSWFTbf@=V+Y5"%)5"fP/A;SHj!&f(0@'?0K)hqLn4B<!>^C.Y,[B@UH,(!H@?XkgDlJ5bhX^1@c53ZQi<1Ic8efQn;7K%d35Q;rAKm/%=#=&Y&fq;l%TulE3/Jf2:9<#=mF@G/m3*XTNSB-%(Xsl?mXkT_$8U)BE\L<u@,[@:TQb%#8FmXA<BOt3Y%VAcOIo0,Y:A5m$e,aFKS"u0X_E\[6%.]@)mofSGslY2XKUH-6.c%!*!hYluZSQSa%QM^j/HA!WR1ftR<qRH,.PCZl_nr%q^[_;"RA?eqrYQRTg#g@T5k-p)89A2IrQsn,!%RJ#cH'4.+"]u,X0_8N9i>*n`Q18LL_j-HDZL5GWr.(3Jo;R<#sMGOpR)3nMHbQ=1e7bobLP[&tUHZ/<Le*<h%o>`,gr=LOk"Ej]B%2`40e794+=\mZOY2r.p(fls--\mqi]L6gt=<@=.2T=V#!jX.Q)S3elSpLC?FQH8+1]0S,2a*+sbgJT_nIUI'Z(4sZu4>I]0H(A42%5G`7t<=\VukXXb\H:JVfh(YftEFZk_(e[8HhZ?LbhM"Z=`<.(@0ILPN=VaF2_X#U&1ST_N9JWTqU]LU"qrkZ2Tk.dl>%=$:2HBG0%FGqOV`P^c%CaU=5?9Bc7O-nBGgI[p-W4a-&5Gk%@VH>oc_kNLY_bpn)lT_fY=)'eb#0k.\Meh`\7V42t1[dfhQcI.>/+RRiLJ#?M%l-A4:jAg2>AF%)k(;6,o"7]oO=nH;Y%e<uBa^L@_>0t%RX$0pc@b6cu?T[f4Q6R1Nlh*hE%f/(r&MQdBM=V@NJXq8+\Vh\#(&VUi%S%1M5SG5PT-MTteEH6$A4.CalT']K\4DrNHJX"Of3k]WW8jC,R&4[eKIY&#P*\?IGO9/nd@+#Ibni1Cd-9fFWB8;cR'@Z54hZG5#%h"MtQ@imD@ZgWD=Q+l.uri'C"4sk>%""*$ogRnlMfQJ2f6/Tqej2ma"P0*l.8[%XD-!#V?Xu6u><FA4pk_<cmL12G77Y$u$G&=$W%8Yt:;ShHC>B_SW"+rAmVrM?X^oW9kMHT*lsa3PjQ76\9Cf\jgc<IfD(k!kee>H"#p`Ce:&O(VUEq`Zm!lXm^G3r4p`E-?W4LS6uD%"C^`d=3eN$Af.msGMG/>#M3r=>93C4O;qC,cgCZNaRM8f8ChtM,P?,"]%/rg7kA_`T9In&3PYa^j!B`Z9>?U,H<*QpF)dEa-B)%5%nuu"-;c<iE[pTlsKN7lVXf:eWDpPrZoI]1"ff@(R]AT71-Ddu*"!uF+eg-1X/<I?n48o6[jm68dC8V]N0Q0E^7g;S(?XPMM>1&2N%"_f0R\dDjP1[S\a"a=@(*+4(RR\<cS8WDW^<k05N%N]JAj,BL\BC$"_Xn7gZ$Ag"\!>UP=>;qSbLBS'oi4XO5DS4k=j3)i$XG0jN%P4\0mpDRLAWNlW7TU.^Om(g3X%]\l)C3<GmAt!`j";AM$[WdE-^4OL#9%-[2<ThLe:oqAOdI7mL1'fi.k]C):rEfB5rlF[J`-KkT%@$nBq3b6d[+KBC=0qMfL=qIc!>0s^#<.Ue!'Y';fH:nS9'p'r.`+r$q6@h[Gn,8\jmVr?>kAHk!08"kb3cZKM4]SQ>IO<Q@fg6=N%>Vub"#!fa_ea7qd;e-Z;G;rqNg@'RAGK?L`I+=H/1FhLb%7?(.Z=+UE*F[Cr+cJ@5ao+:5Af8/;h'*82BMg@uAC4WkC06nn5D30p%0F?q[;_fI(Z7/PlCja%c)\Amp),X0?R2Xg/^XoOu7PtEsK^"7Z:!i6Q$MB+=m/J,[=fo!TeLBREm'XTPl8uZeDj<#?W/re[([7<J%rOqHNS!Uj`N[*((\5F,2p>9(kCu=:m4%5T1(#((mZ7;NR-K!Oi=?QNEQ6lUhe[*"h2igtGpKq+VFN5+.M8gmP!idZDj<_of7ZE`[%DiiGMN$8+-cP8^#N$;+"*=OMf.LZq)Wgh"1A+g4qcVCAtn=o#b(N;mQ=9Wccp"5B&>1JnCeKKQ5kXH?5dq>?TOr-3VpCu^$#SiC#%93@:(+$`!hOV!9sU6Wc`rXEia[[ufpXiUO7omkEU[XV9fL_/Z=YaqQp6pbC^\`?i;rf15"^S1+2Mr3Bh>dKW36;CtiX*4f8C](s7%!R\HX,sD!Q30.5W^YQ)d(cEle6`AcXEfib&83LlM^q*XDWs'M%!-batO0&m0Y/F/]c)Q>98_EcG(.S[;Cj!^o34.W]E!DU.>GImp%l^skG?^&J_,h-Q+=uI^SeSC=8C4q/1p'j*F?(Es!Mf_]k?o)\_DQbK>fiPXRk7gL&-P"oUQG>*#3CV#qY]5R.?XAF1dPsrSG%5X^%(4gmud'uMa&8Z9lEM"_O;e2:dp?!.TS0GVcHub/)8Lre]ShXd9(8YKjK"5+8%]AuW`:q%,'#_Zm=Mb(M7YM<AXCc9=6ObdV%)OHW%.Ldjm%icEkW^O+MCqX]iR)0$GV1NdG[t]-C&B;:jTC.q0PfI9JS>6GUJ"`ujYPFq[Z`Z-F>_Rp(:I8qlj7IYGLLq$hX4"M`W\dJc%?e2-6b50OG/e[5k@\t?.*-`-"@]_-<VQ/YJ4]<>%`IZjV[OMd=p=RmI>$&[WA%<ec\Gjo3i'C2d\IrpIB(;-W<`HQ[\52aqoN7Hl%60&:Q.r#9AUX4mn^e,^h9K[bFjLJBdk$%^^YV*BEptR[Sn&/LCeOA\nK-Lg$<Xjh&,kM7?5UQ1!=;,Kj#]%f:lW+4")](!<s2#1A%pfH+:@Z%gZk"theEB.UKY?c69mGsNgX/,LFK=ag?'=R8D?.NYBff:uP6jkT)XM2_kN`ccoI:W@@%^DmeLr<215hH),cia[udX@LL%MbiE#opE%PV6i';PV%UhH$rGlZhO;KZDX0'AGFCUWY-)TE5^YB%_P15p)Z!aqUcMakXg:HgW.:2\/qN9!`u+HXT@6;$*mX3dqJuC%5uc!\MKct66`U7dYaa:s4CK,de3g;D6&eM=ARh'4`9SO*0^42!9,YCo6"61=E;cNrKk)tFn05hXYF`*&=YD^1o%un)([<C6END;Z%#'RslJXolHL+#t*b'BS<Vn_Ln7?HIt\5ZYsAO@15m$_2NI"]4tk`8$hZjjTM3G8NMOCWKWF3('q=4(SLHfbl_>t&u*oFFB5+=nES%O(6>alJ?jO!9%&Plf=J@I)]h2m0Rou@-1=PZluitkCYVo>7]ImP'8rW9Dg@deAJ(M4!]%?,GNV)/;$Ytd3qAbMe&E=.Ij<g.45*3%Ek-.^Ea*PWXOp=O>TcHcce\]NC3E0$O?kDCYjO3>2*d+1+a^6?#_FY\2&LA4p,;%F(unkYH9TsdEMaA$XFb/S*kj8O>/*U*35TT0%/BoL5[1kZa*k(@dG/djV)Kh,d"UNR=5uW,SdftrFP\Q_A='&3p@SEbr^XBh`]C)#LT9-oN#2nJPWAgbr>>?qX&I"2_KqN0E:NQg+%(BUZMli)o/"PkY(:!S9K:HNNG]gJH*Q=oBsBH&*u'G-8K6$6'ITj_L;SU6Vc(g%gJq!%s8HYn[mr=K<"mBQTDBb@,5$3La_S-kIb%%Xdn1V2V1E=OGhnd;Ll?]U5@uZ?COWE>^IQiTq8qK0dL,g6;.jg9\\QnYjh3'oq.G^UqRD]kfsO&Y"Mh$-]PQn1,f1QuK!^i@Fa(%%QOj*[Z`['!#OZHW<;RR>NYhkENu]E\HU1VC8_72Fb^QgSaXh(dV,i%+3;4L@0lX;"5."s"-Z")^'$HLINI7^cutF.%0=Z0(&\#Q%hmSIh6!H!uI[AHj\D.[kegf1cdXYu'E[IFPRW645Y<p&U"2Lu3>t'$*]d9KCRc+eQ5n1km3/aA:EJUq`CdKiYV)6oe":LM^`[\*D%]8\-tf4OHBJe4S9.gT^Fc1=SUmQic1W6OnV8jQk:?EH^`&0SV+E6Y##=[>=["80LuR"EF>fI\N7b9jNu]`i2L-c\+*;#[+"F.#i<%_FY"D1'B/-5hME>(aK*Y8]]M3L__Q4K%O4UR=Ym0Q?o>NHQ+I&[PN/*8L`K_W3i+X""\28D^Wojp`[/=aP4kUYm%%$TPMVT3Ap8j%=?mnfh&I`f"eAs[L!Jrde;`d3YLA,)1OCJJOu7iIZ#RseA4q^-i/ZN>2mE#1esSGOPZ`#1`N6fM["h%s#+tQTGIbA0SFHDG'biJ)%]Z(^b5G?@8>,MI`UC(f6<#A4-<,hb@6uVb4a/$H'^_tOeJN3GTL/T(lUsD4^/.>`aE0*?;f"UO>\Uq'*0I+IF"[N_A4mh(8Y!YL]%@K<NeSA:m*ZS.cg)7KW$_1-0*2-"qf>44R#V";Fl%>;Ri7?;gpWo+Q/&g[f<!b`(f#PO;MYLmA!\NKXO6oupN8.31i.[/Ua/l\go%Ke[k_Bfl`\!<]iBTb!M)r@sX'8>nadL[V#W'(f$nrR!(#PX!6f5Bs7na</d/&(7/fPOu[t>kFN+>Jg4N=D:@WT-Ha2aFBd^J+-I4%25]7PNNF8!T-$F(@o!Y1AaXHQ\'bEiPP@oV"^Td:LM7Xu6g2%:p#5p+_K?Xi2I,F,:=`qQ&$tKgj'TdKRK`VNh^mIia=(7B,GqI*%AD`EbSQ%=m,@q^V6S855c69tfb%a:FU!0Y@GB%jJg8r:N?TZO#2%/$ZQsf'p09:bF9"gUd]e9SbcHk[r;M%rgYL6(8X-Nq4pT"jC%3#>UNLl2S*4pV8P`1Pm]=n/E)l&EVPmDNpU!rR8p`uJ>.-X:,(fmkSZAh^:e2a`D66FDMlm<O('YH1Atoec:2njWO#Mq48+j4pWj%AUY\:.irQn/b>?C*\8AP\9c,o4s_EQ'3<PaU(.JGrYsWc\%NP\]lF_Y1b/]o,NWW7r/&1:QN)sYs6f6eWILB8p;qHDJ(n-`O%ujP%S\'"(>d.WdJ/hH$kP$L1pb.a#cY4)HM9ClV\BGIn&p,sDk%G?lc9&KZ\DGLdK$=Su"gBm2+tVO7J_?bcdjS9ladt6@FfAYW39Aj3%FP?+Xj@'uRH$m.TV=AZcTA'[54rDXUnpVX@M#ZBDO=r1Nq(hYnm<s>R'K;3B-g:"qfRqGTa@s9&D2c`obi40SirNYBGr-&\%0i7_%49+Y[^ZS.UQ'*>KmY5GgGOKj,@ola&<2N!Ud#h4GFQBJWd[p7a<oXI[n)M%MJU-VXaV\Icj(.Gn#Z@QQr:T]_#4P:/Q&GZ7*V$7Q%>G&UA</7MpQc*"@bMO>4hf,`-o&WLl3MC0,R*9\2p[CD]*?u;;O%;-p4bp)%UDKL"Y;7,kn,8u)ID7aaj5&;KRqlr65CNNOEFRto%NDjJn[-au^O'c1=Zaonlk'uf(GkL:Vp?'Ph`E.srB5aBVEi!sr2BTVY]X^"aAtWR=JfDC5Ua9Un#u:@c00C+)^\Ig")rEcfn>*U9%VVYYVjW?_$k.V5IVg&amO&^RTpX"cbd`k-L^41K]J)9.Q`1`-IMb-0E=3!M>YkdG:]8O^Z\GD8dhbD.P?iFZtnATmIgV!(4WOGZ!%J+`.#+,1.f?hj?JfAF%8o%_X[05dB]oubj>Mg'Y4rZIArN&].13S/<N=J96>?@'Z@m[jB+qp:1lmThqsieN$=Nb@:D$8;D$Islb/%jB6R&d)f3ngcKWMq::s$-XZlO(Y4%C:$4\/C!0)S\as)K=n^"YmM--r=TI-qncsLa\)a7g*\2TqM:JV6r8RW0G1bpA_Gg&J&%(Y`%F&Uu$8*8)nFfP7mSCa;,mR/s&r&RWBX.Il?qX33adgoNLXNP1a^\lX0[,EaO1\t2Vj"@]FIW'>8frQmcXZ-'Up>p'!UY#&.(@Tc7%>@!b/+`coX@fb3-+"(S[eF!*tPH,]$qsTQ)?01q5AH\"aP3Y%Fp?i^rHH\TlGAF*o(dY?q8EoPMN*hW)]lS$nX?UOX48S%91OnZC%\/0M:DX2T-'E9pcWDVZ7;d+GcLHiGi>E+e@qqLpZiBR<$qr?@rs+n@f4*UGO]i![D-gn&?ZQIHiE[#GZLK@9Q)XP;M&`_i0aE:;J%<R9(bl+q!s72gM^*g=T&RrK/]Y&sM4r%p>!_l#-\Q]V<^\@(Bs\6Wt+5IoLDEY9D\r&<Zb]Qhf*T&q2R^\-u]<JmE?g1fLAfk%8D%gKU#YT46Bt-SM!9E;GLCB!gIgm:PsG22u8?rg^$eF)TjE)q4-:D.ep+:D\NVlgaTrHg[H&-@Rne)9SSks1J=/eqGK,hu3n1Gl$1L%G']/C/!%UGqiR"c4?ra4rjl^1eO8;^alFLL>B.:pQ_M5SFS,4_/0a,@5;>u@3:rOFrTR>;r0BSFp!AQIIpD"Eh_L-S7XVoJrLm`)%5C\l6+AhjU`h"'ka7,Aa?18mPbK'+;FCsiF(sBthQ15=;*Z3)@n<HZbj6u#s32[is5PUsVr6#kNWmNc5q<WKCX4jQ1a#@['d;AJ2%GA;Sl)o%<SL!AYq0/!>)k'50(@M,NQ]bu`!"^Llb`3LrPfpQ(=O'T\Fh:SDJ;YTl#7e%k(bMB\#F#3'm0r*sqm]Y<U(k1(A4FJdr%61EcC!Um;qGe3kJ?[SL?/:7!3eU')GMbj8Qj,75)htN@,3O;t=GA?dkg?$8tf3EBBPNHWE7Jp]jEG&mbiN^:u&,h6#n_(l?msb/2%M]F8GE9,tbDZ#)OBeSM%G$-N*\>bH&Z:BC=%#tjJr:JUq2`S-'`#nEcdijLmdna=hh>1>fR+Tea]::tZ+0g:"%=VT3pA6Gki:nVR%1bRHfIheU<k`KfPDU"0)hK=kp1Z@&Gk0u?!hpIfCDu/.3dmr#=?p+385#5V_pdSmO_;.'4iFIPDg=ZU!ci<q<?8M[d5<_k\"T*LV%KR:6A\u1$b)<'c6"F-Bj"?U7&=!ebI3B+g-dsmjH@.%p?rG7./5Z2dSBS*K\esdf*`*CUEJ,@Tn;\tW0hOM3!GAhs"h7Le6h]8.[%E6,c,qo-S6Pn@oK`t'e0T3^]JFfr*cJG<IJk0&f7,-FeW^OW8<pAQ9(r3;"un\,'RGo_)cI7uNd^Y(sTn*QD1JC'@W`obPr>(1-B%Sum4:WW9E??GtEg]b[k"3rLnIe@fCtrUt+9^[EO4TIusp?iKi1#]orn*MOm=mC>*W5CB4j6XIRS<<7rmY):kZ]5)1%qb'u.\*%,5%.LLF/UH(6tZM/+HGkZc[CW\+iF8aX_h(A02^2a+rB2\hT[c[^\mshk=W3k3J?WOm^-[XS0d]_Qc-ueqTi#oL%+0-IJcGS6U(No.^%edf"VZ+[a5SS,PrLj4Zs@P:[sfgdo+^=,bI+5:iohL'"d=o$^@GFs:gO6<s&>t<uDm4WMmLVE]Ng!.0cLCZU!lGQu]S$.%B`%KC*%Ce`EISfs(Hn$BsM(N2O`,9FSS=cLKE(q:X$hFl@Dmtgo2h4abm8"Y93r;"=p`Lf[#P5k@;g$>qL?G(M]r;Q8(n`T5/im40>q4Cl`%(D!hE7I_L)7mAXi3BMkao4i=%q#tlIifUjn/=1m*F4,Q';uLKgTuX/*l6QnY5c;<%hqYK;]#:GF0=k"e+^71CFT;=s(X;^Emsc.'%;I;FBDVL(B!FNQ)5/,X0IsuP$jL>a4s29Pe,+dTdC1l8.HmN"?bZAl2KVR53jf`q=c?s[q>>3:BG0ZUBRB;is7;D\Xb,Kd:s7OjI%dgt'aI!'O9!PA9S]NTY8^[pRY-aFi"4*1!8Pq#g];3#,VnN4D\nr5R,Bth9'kT0QDp$_%KmmeOBI!7"lEupf+_(WH/Xp\kt=*r.B%Y+`1/^NM*/U7T!qqChX8<h#CLdgBEd"$'rkN*H+tCosbE@=B`tc1edV[p#G%<oF6Fj3.$9?/f,G["2r8/Xg_>^\`'C`sYriIrf:,%A\Hnprqg4)g@FIYrQhBCYRbQY@[ajZ_eWtC1bN(?>oqi`2*1`SgC;,*NoJODG$HhMGcs1b>j9U9%j.2'dpj>TLeWg,EoU\67HJ-"%r-<Wm8:PWg=e2bdia/+VR:_BU0-6VLLO4g#rUK:?&$HM)Fa:7ZpTX"tlMIVnlM4f[1A/r[GqJC1kUJ[gReCe!h%>$\cq^2ScRZ\i%i\D>9ZLb[Ccf91t\od<&RBOM(-U7LedVh>iN_?22\>;;EJ%^6"Dl/$Wfd84EUW_9XR:aZfU>fA,(j(LZDc<HXrn6rt<fu\7'O6r2%`Y681DW^<58b\;3G4)EkEV%\U<j[1J6eR,>^$duUlKrdDp@U2D6?6#Dcft*uYoRV-LQ*AojULsD\6jo56'SQ3MkoIVo8!>_+8O-)%0bbTF(D@CjVT$JoQcL93RqY1[g?_`3VYt>;fYs5`os`uWK''Stmpt.G&[O.=Nf`bZpZI$QEHZDN4+l`SQTb1*!a'iRrU;$!o(KiD%Cj_6#H)5BH?[VZ/J"+#hpb9Fm\[h>"%g(PbF.5st^V'F$?^kslg-tjFKE(K!@9BmB^Z_3*+-,5bICO8B@MeFZ`RU:oc/S*/NPkKd%SUIhciVB7>kHA2UGk8,X=8_@W%p*[T\ZkjDOY4/)$bfpe_':i3J]:JUq&]8o*qMRR_>eHRP92\AhTc)2L1bhDd>ZBSaM75b?h**!%I.bfSgFReUh#4W`4Qb`a2EJJ>c*5jWE..Si'gK)h5BYY7o\5Rh_(Q&ke(\9bY/Q`u2+tsk9KR^[MP"/[n[#`5m17[r:Ju%iYrXg%%RUp8iLB!XWR%XhEb8VI:e?VQZs)W+>FE?8jC_oloF/*l!!U4Z-p')=Z@mWDe&_(suZL<RB1X4jpl2pdpFtoR6KYD/+COBgYgF5?8%QQ,CZhL"%Qm=SVK/A>.;[DjhiF+_O)oj-IX/lmEt/pE:X>&/WqSTir7L6b%PQd_Cec-p=3Ccr`gqq*$[AZ#pspY*To!EW@G+-ar!%'2B@%YE_b7!N1j@+-as&!EZuaIo%a^Ft7D6@G!mtBbmVV-%oJi&2E0O&%4F#]R7BfTBYg640RN=C\kYISDn[(?g^%+Yk@q1gZL5^%`pG'tgt7FVjRIt3*'(U?rJuB^Xkim154B'<J`"9`p`8^Phn^?.*W-0!iSP@9f8_XGZZ2WJp1m<:Rs&N:!;<"(`&)@G>W_RFYS\^h%G.GEP-2Fe3;"_X/f*ih$-.Nj?,hidO#%;-]JoeUE[#tP]055*c6fWs9ZRPlf-.Ni\]QN$c3&GR:HfqJ64+S"2fD28`1C)B4>7U0#%95+cRL"[=4#AJX4Z"AIaTNGH(XBIac+H7p*er1U)=kZk\XP.f(_aaEs_a].6iG(@A41+l%Bg;5*#=#l0+$.-]EW)==f:Qrj&EABb%D"MC/^S,#CI1M:C"O`>g9G7j6$+B)W>nCF1NIhU6B\5V-+@G^cUkqcbflmH=;])eQnVHr(gL.TNKOCnGohs04Ji@Obgo?UqFKTPP%p[LfVT%&,Z2&%ei\dkEC(gPgUpBa!?E'k"L5Mi=(NH$RYjuC:W6K>\O-X5qB6C>2q(beYETBODflUMo&>?[-VJD.H?`rfEH3Wusi%kn.,=ON/q^9Eu5T""5mV8Ap24qpkm73.i'UltgQ[,5S0PRMJ-ZM%kV=[hiC)E>M$:fJ;LS-,qgFBl'kh]Y,atM[46@r@hM$WsNg-%)YLq%VB>Z^c?R^e/lC:&Ff1cmB;W(^"\(=G6@`r4R"+nXabEOrgt?m"`OXBi$?q>o_4&[0_7S*g$C=DAd'TA.L:6?BisJ2e:[.j^%.:j<Q#i*h]prs^F$VLuLR0HY2n+6P(]!Wp0'2/ZaCcFD/adWk%.3!OL@SL9iD2GN7bNCLj)07;=a(W'hrG2%*fWob%?150[b`hu7%QgMUb)VP^m29_3Y_Sj$FCI6Vt#,1DhQe&O0%47[_UN:b1Qn[HfJ2sk*nFL&(IX8.N/^]IfgY9P'TssO,gLp%!^G!gjT8U;cs+uY.%P3VbF3A!?kPXl!Q0uZ'mJ,95,_G0n;D:#_9KFgrg=riZ]p,5Q>T9s=%*$LrVgQl=[qu[up+Arm#V("DCR\:&+Wai-Ne$6s#$koaW%1$qH@9kS=UOWD4TJ[)qapI.admY\^od'!]H,MRl_K+])4)*6u/X`[;/G*LJ8hl)_*UTHVE$75o"%.uqA/R+lPF?TLKN5b>37%VHL%&o0UIa2SCpZ]A,ZXtU]o&+^pXRXXbq@mWL`=j1"O9D";W_]KIXDD)[WV<@5SMh/8;!_ns7bJC!W@r%fHe=Vi=<;,V)0Fl(/Z/iEN%fJKG<&7(T-J.#bD9(djo?nQP7M[7PG&qgj9hW\A5nf;4=DD$Q'iStpIJE_<T6O\#FTWtTnFh*1D0F'XjY`DDSGlTC%3uCF<6rqs`%`*g^+d'bWqK@(,XLEV?rBLMKh_;GKNbrb)\EuDP*H<K:gYX=Ut^8p#s%KP\;\jPY9b$7*PKmUg.Xu&T2JhQM&*H&ih4:\p?oGDf2%#,jDRX,5.?^W'>'XU44^-Ft<.=?U6/Y_Hj38Imi_#.HeMh6<*[@(qV$A&AgME%9A5mlVYL)#@2q1U:l47&S<L#:5[O@0e/PPR't;%7IC3cqKCt2%WSQm+U6bu0H8Xib_?<10%qR[qIm;<e'$=KKgJ&@pqh:-ER4s1,.uP4Ajc;^(\Ksu$%JV7JS)E*8CM]SBA:O8M!-@Y%U"ME\AuhcYRNk0C@W>gVo^'G(d=h#`AotG:)+ofqBO&"!+AGPU\7-fJUto<OI"=QGY3^iK1h1:<O;alH9G$S+]+#!X&-i><o\8Gd%?,VC5N^:BEL^0#:5,2shl".m/9/PeL;'VrRWeKuWNuY6oQD*k)cS,k_lTpTC=;.qVb:%qb_;iEe[QHT]eMhJ$GT&o`_=6Q7`71KQ%K+9n^@^>NLS?&a2<b;?(=)Ka[<*$o]%AGMdA.QG5(eb8TG]dLN2RTYYIF\U(RuKNjbd.adqQ=iqN-$*A@#haQ(?K4d;Je.Aftj#(%L2&AMS-HFl-p"[!HBfBQ6te6J!(W$mcS4+(<<mOP(c@T,f$PT<d\BpS$6+q)7GfVP)4,gi[W#NbG?P_I'Hj:q+5'99p:0#_=qZ]X%'N[_lV*u@,1#YA7qFH#gA:QWBGZ@6f^O]`84Mb*<YKfQl"Ad4o&1Nh<VT2\U2M3^uS@0eRP4T#gZq!e5\S#a-kRdjrK18&YfDLFA%[e<gC0DQ4#HTWIOM,:,A,BfluW@$b!_+2far5c[;*=Oe.)ZunUO,3$60?4LFC%NfU=<7at(br,DkY]9C<8=e&F;$gs\fC!<e>&a.%K_1t62DmX,nF6\d@>OSD,%ri"ia@=Tgj$2^dg-QoETNQ4#SJ)dj!umGZ()IdN?FpU$lg+)9W4]ni[jpArl;"8="+cRVt\kPQ7*@N%"2j4$(Jq)EZC2ubfW=8G=P@L(.1J[6S?44Q`m-&ceeEspi*kRL9ok+ZW[%o<=.>s38TC-;YV]aZm7&!mZ_YYZ3G<'uY#uB3+)K>E%aH@)k_2dJ;LrGa#3/o5h74_S@)cn8ccB>\J;2fLX-(u;KQF,YcJg;45X[c.fanAt/cq'>agEkIP#LqS=7OLbI-lQ0K)aTY.--4#;%b:4bD4cU1F6p-Zf09RSA=s"*P8X>$IKjsXrFifh6X9pLoI@R0-SqK0_/mGC)GS8p5OFj87QHk[j&MrJMAOVg8J>O;7,u"_O&/g8`%2A$fmPAm;"oJ7Gu6XNX_,Z!^cb$E,?RbD5L.iTaWTf?nS4K/jY5]Lo^_&;[6nYF7k3=Wh10LVHY[0V(:+4(0cMH28+6_R)18oQ8<%=?Vg?6'KZ%NqC24L_=]9O#/;s0`kY8"MQ)E<LSU#3M@:9#9QX#.;2W?q?7tEGS3YXlaQi>`?e$.-h1mT9^Ge*7,^^nLZ%3kDND>>%*s\!u-aERF@CEMZP@?&;m8<8\4:uk%X\=I2d@7Ig7g?mI0`cC!Nsk68!B$il3m:jeRgtLu#s\?ai@7"qJk0B*0(93Ap+VX'No/c=%/hCK,%0LLq/E^RfF@0r'@eJdE7#=I0r/d\4:5;*a/7QSU?Yc]2'h"fa)Q';t$:<)_$'B=#_$E(I0f:%N+G(,<(r]r&+-I2WLD7t:%S&GLPOq>Hb,Y%>J%9*!)"XEi)`,tjP2'5^=Je';tM@XEWIQ*H>Hq7]L+4;i#+&XeE%k/@d+mnTa%k/@3LEo@[+U'(sOb0P=;0mk%%E%aM5'T=/&)Q"iL$AO4)q-"=R%9!oa"]I&o8VA3S)Q"iL$Dq9#$:6EjM33`f_Z]XJ\T/rMJe;]6Z#V*EJe9FK6&@FW(^20S:a-&f%.$983X".83,XtTS%5[A1Bp'*#N2/iKVP6Hs64<r/,:J\+1$YSoZ]3LL+*H:(c.+5Oi6B`2SbQ9"idN.4J,-WLS'LS?pf;AVn,#:j%&)Sa\a+o6^c8TIlCH$[=p%D8'II&0%>=,I^-XO_q@hEK(HW[meC[>Q[eZRKuP<&R[lZ?S/QYtNCWGM`SVCeHN*ToVo?1bP1(RD`d%mtYg?DWuE`7p'L)F-O[o6PCP%GOFgm8+3m)]\7WrBM-4!mX=B?k(>6tBafnMgOHk^Za2XclJ9Y(D\lJ6TBmgC\aFfpk?dQB]\6+W%&A\$+Isgq0Li_t\E&X@QIC>>NM[]E>s#E`*47j)N(G.roB2k7IUsE90o99cKIi<fdZJijk*oeNJ?$JSNSK5<3O0/$Z\mPA&>dF'Y%l14eMK'_luDQ\>LmIGO@DM5/q'p1[1Gn$J9Mb1eN!qEsEE?BBMAL$Sa[ISrjq7qu]o,p/$/AB[f*F)0M<Yrq$ZttcBgO/)-9J(_?%N!=&m7SfYA]S>-lWscl?b/M5Je()SOb2nlpVi/OGg821X<u9%%Pfna]BBKsnHu(Qoq6\n&c%dVPm,JidTBT_n5$c&Gr:Vl:#ngl7%FF3Sn.I+)WE,Oe?Jr'9/]_IYlf\>lT8kTrL"@asLiF^cgiBo&l6Kk7b_dX\'ZuTo??4nH<_.9e9ind2=U`-"oe=4DS`T?=hr>NDW%c.>UqbA3&#IQ)Ef\dl,*IC#f)"@b$NZhT!@Chi'r#ecJL08Fp,5V&bPb^M#>X_morVf_/%(9\K;-E^?r/6s_'8m\Ro<OuB1P.Xui%V0M[o5N7jZIhGNQN4_RMRFK?TT89OJ5=nr.^*0\F^6,R_rZJDpr*b)Mq5;L)ljc47VE=Q@TPbhckX09.n?f)TGhUUe4RMACT([72%Q-\OG50n^DUhX2+c_P$-I&;_@1--$lhiLDtSeiR_O5bSnlk6q-PUo156tH*e7-&VG#uTh@7Eh8R1R=3e1I]6PEAQ/n:L&b_-bi19%>T:sdI277_eHnsgA/S*i_W2"t6tAkZ>soA59a\ar\$*QL':MloOjK=60Q4,$KlKk$;Q=I%KVi051lTA>:h<+[1iSG:N>)t-7[%ZR%LaY$IUr*b-B/E2XMhio#8\/f!8G=PpJ6#:qM+h,c1oZ9^UWH:*H#Io_g(PfE1jQfc0R4VG^<UDTR'*VKRUGJEV("E?Q-lu9^%R2;%),5B/&FNa_ZO':9kfVkn22kn:[1P,kY/c,"dO#KbaIQcPdB^AAkgnPCQ(0iWMP.O=3i(fuYIP=Ejsda.&]8`$n,#B!/6G?TFgpC[%5ThU[?^M8U7RZeA6nhUc-$-GmA,.DQ:2>TkVi2H\@Un5%j,PZ7\dgt!0#f4\bVH?$_&46erM*F2PPr9pmF$-UCh$c+"#sXtb$@oX%*Jc$d<p*U%+M&j4N<8J0a^'`OFtBnC9ROC)4p2#T=EVZ#$1:@UBm.i]kcO'=D3nLcNIZ?$2CG4f.*q>AQe[H$&1ScsHS[3M@n^-R%)tQ5V&&$/p\J)e]':bI%0a8&+HPc.O+9oc7ZE4;MK(:_nA(h\eKUj:t#7!@&?hjGYZ<6pLNsSN7I1#iKSXjN'<KK[cQCSCoggfh^%Y%aKVjl:f`][^iR:mUu`>BuGj(r%TI`Pfu5-6U=d2QM7V6j.ao94$O$_NglP(FI)Pag$SJpN+:6_rb"<jEXb(rj&f5'tRm6R*c/d%CV#1UJ7;//+0a(8d1V#8AWB)e24=*bp2SP00Sk_6@m%P$#/39/_Bti]@kG/L%M<.&B\j\]pF[As*;M-AQE*!i(O8r/M)BHrr%p%g%.eU%\K*Ei!JRa&@`I\,5"R9!K%>jUtk)bI70jNJYFYOU`5&EfN@IK7OMs0-ZpLRT*hl$?4"Id`Iqr.s#aG'"k*/`Vu%&%9#b[`!9%,8SV!QjDhR$mrFE(b%.R_K'gUF37T8(Z/HV5Jb??i\j5%%3)VqBcEZ;iq[o,Mljo,,DA')iL3no2S&b<8>oD:K)n6p.\!\PUp`1a%/N:2"mZ/".K.$9EP5[0a_jBn+B4B^>3s[%@%fu>W9a]XZCYfb*(O?dN:\7IWbYt-q(lhC>\=#)Q_>T_:VIU;KJP]_*8&8:e&.B11%Lr<3,gJ$).<G/1Uc(2Bd-eVM%R6,K$99Dj`D%C66p-@;Z/-LH6b`.#gc&)-^PVPTG8k\<d#0oS(17A<=7%[,);!dZH%bN``QdO"H%/Mu/^%dD"18;+/jO+Jg8PV!n3P_R0+Jkrm2W@IQLDS<uPO?Z-$eMn9fRC:eFP^YV>]VMKi%8)`gR4A2e$T-Y(&Tq;!7D`&`0Pk.p%30P1Nad<lO3idit(Fj2E0I@!s?p^:aUaIU=^sq..e;"-_b;mOT%d2Wg%]SXLguNn*8^L@fO+iUJF;SSp#72q+,@3XNYKO_:;W,Ac%b.J]<,Ch:h#2t['JET"LVq_D5O7n1'1>a:FIu_d+moJe6R)Yg+r><iq`f0=f7Z-#H\(3Z!AtFn00ni/j%1Co/AuIZjds)6Me1ddL%+1lsWeh-]BBcP8,_<A$@Gq(OWQ/(6:;HW:#[N6%)3&4oO&O+c%l\-pW8^VGF,!4Tbro17,#me7b8M-p23.0L#ekNnl[YqnqLLmVo%+jpp'Ktn&%'o1O%e.5d=M+j2<E"1G+di0Kp"d?3'S6e_hg862I&qcTel]$In`k;R%]A2a2:VurSI`I(pe6GDgN#DXc5cg;rg*J3A%b)Vu:J/74PLm\*O<XKg7Qn`r1jH<4'.H^PaOJ/+r=f18Q"k1nFSBh=M1e_mCcF$>#NMnfBS'ZhY%;D$KYiIW_*nEhTgOkjIO=$6K%9ET*AU7d21,e[Lf6k^N-R>k,X`=Sciq(c/hpR\E?L)RC:WKQ\ehpNR-IRot%MCG_Zd1qP?@D5dK`EnYQ;3/OgnMp57k.'PXoYUZY%j$7E$GJJ>5e*$Th!Z1*IYZ'j^T@2=Gs"ChE#I9@68'DKL\H+ZLmOQ=(VShIPVK(Q)jT]*$T$-quR%b<DS<Tk$?nTLLmQ?t"ODj;$%o\oM"X?IH.j0fji,UNu2+p95+V84-`q-[5dg*&pj5`DZN(7:>O%;N\sd5!KpH.o@#6pN0fjhWB/C=U:+!0';A<!MC,XYbcNCP0$b%M]r?Ch^2nF`3=:ZDmY6<m?^^>1&34L7MF'X/Cg_t+YfhRibT\SBtUh,DM2=LSoSe8`Am+[9$3Z-Nd5SPZ,j2><@20C%&M&_Osu)=%@(OPO'+bY/[E81X=]-NsO%YZsOgE9@WeJRA2%f&@4?&=pV)4TsRGbU_%ds\4X1K?h<c0[jJ'=?90k!uH_h.';qo+-V[bR?J0638T%96.B\h7L1U[NA2jH,3(pD<?3LNol)h?$m/J$p&WI2RjL"*A&YcC$i<`PtJA[`2<,Tq`8<aTg?jQOMI\cgj4+jecq,S7k!uf#Hk]"%8Kb9>Q*hY-i.]]@].;E2W_I4FHJu%M&-M&u8LXYP\[!(hNERf-F<nc2#7,H`Zd-O1`^`dkODiC!jd'cZJn@7i0.geq4?q/Q7e;pM%o,4<"R/sXKVGE55l9trW'$1aR.Rt_\0,E(meZV]udb!Y`n&4j`UOb*Z<&HD^A<;-7*Zb@,@ra.Aas?$g1klm+3<K[39q*iU+Foi3%K)9B9!#K*bX"?Z&LaglH&2\F.7H7H:!.$`H!%qmU<(Mn*g8+1cAi:_c6^cbiFuGcAfH"?WC4>+?5c'pZ@MJ#F/r,$Me'1AL.SPRP%=6!e2_9:rF=_qom9gSWdL5Hl-W0>bb[W"+,e#u^UP-dXkqU0+Pq;B]elp`S.=B`t%#:#]1Nl64]E&S0D8%ND!qBo#a:j/LW\PoLR%53+)m7&FE=L_%#pP$@i?3`$D1n5W.-MCqpC+'qgDV?l=:aXtI>cjSmWjAobSQs%o@@*O')1"@*mQqm]"mgE^(\5f""1Smi;c$VW2%#H09+d">e&ZsZ)&(uR,/jq,m3k/1h":WhRre^T?i9>*VF*qVY1A'+>J"lga1:BO[R(T*!;)%WRYRZM`6_0C@WiFqi\prI]+$kJa#%oe)PJ'un-P\l*f>0HODtUZ@W6Jk+UT>VR:gTkt29YaY*d8`8NP<<_EV3JqAcL%2CIPrOe34OL68*h%6O"QT#GQ>9(s`e?Kt)U*:Y%NBY1'=T%(a;%:(6T/m%%add+c_ra8OKB[5_PMDa;4OFC>Tlqe#%o(eXA?of0#kL\^/Vk,f&VPoo"]5QSIBG[Xldpe;[UNtLpjS3`%4d`lT$HD*T^k9FbWCmQ;"2c6N\Oj"l@6D2dB?ieQ0lk:2'o[ol)Z9IM&+:3I<`Cao:C9q,NaOtCJ7uH^+tKL%4M6lOUrC]W-2>E'%plK>>AYh+&``h-MS6?<?6\F$S&du^s<i\W&e5R"!KPZ_^N/./e%TeUR9jFF>(f-flH(b`t3"Ja<PX6sRo?]\^,e<%a3KNo.Q7o$7%"m:_[`)deDNb-I\U,s-JBf5#B;.;':%4<P790qZ4Xs1/^J3h_k(9/eoK+Y.EYr%I2cl"/?=YUrre:8WQ!BTU+7U)N[js@21()e<Y%!nC1/$3cT-3g'PYR$%M"#XO"e6rG-2,:JYh8.$UcOoe3KUd3)S2$K-S8V&.aVEbK_VEbb<\<):S>Y)c^>Y)\%/gN1MR]gKZ,U&<Y%$&me/$DQZL&gFiIJrs;/@K[Lq0FAVr0p)jcY6>`j0JsYE0S0Z](s.IGN8R$M&(Tem1("h\(mPN[(dWlZAg0V8f7FEFR$nF4(eKHs%KHNVh7Z\c&;j&:-+ioas&S+GMo]k%k$qZCIL'0u-+c-eA87GOR,V_.o;D9sGdP*NrdP)q6lLu#2dP*NrdP*NtdNB8DdP*NtdP*Nt%dNCCd;D<\<.2]`uKFS8<f.@1_jlc2q+f-[uI&C-IA\sfL^Ue00&g6"c*[u0'YNZ8*qolN@%t2U^_Va&Xq\6m!8!]:+d.F5lJZQ>?%\#O$;^;WD3OW*m6]DTc-J%_Ch=Q;bl:GO(^QeS[SA'n55hH4sNrtPis+sGc7,:&HQR<:g,m))F;A-eHTj-4?h?X"t!nFMlg/M:0&%_hY7Em-0XMY'Z8tib<=K[!pR18Y=Oc@WcN!q7V)Nll'^PjTkIO=B-;.I'"G(]1*`-q*@.lf%0/#dm:7u#>JC?ce9N+Z[,HLXplSi%<tC0oUCEsqTH4fJC4h>GeUq>_BS.]tW!C:B#$gu$r8FEY62!%Kr&_8O%R-B7*rLkBp>Aa-ZNi/=@6_Sj[i^*GeORUV[DU86CcJA'%^+;uWC=nG"LaYhlD:i,37$aPr3:''O7$aXJ3UB0P7$KMY402EdOk47r%sq.XOj0mT53t]U7$]+K+*L]iOel_`&:77YM-_XeNN.9C%;6R"3nRCHci_mb5ie>g[jJA;D`J^Q7abr#@il.,ILb!)hM(n0Gnd<WG@dfTm+tcn:,[OaQKY1:\7(c@-J\:WM"[VK=<$D5M6b#:(%SI9f6C*!$+2+R#LEufJo>fRjIf5V&AFkhamSQuac0#RkG5naAu1$&GVI<EE-ORd@=F\]"^#ib^GZrsf$il#"D#ib^Ggfm2Y`:_[F%\O$kG'lk%[,5gENl%)r8Sc#PPJQPhkE%LWHCn]KIPLk+'$GrUnMm()#`u:g;i7M!6*"+n@V4'^]`3#4*Olic#ZAE<V&D>E.%Rdm$%/I*J*XqpSiN[s3VV#)[=<*cGg"&TYq*6@Q=F_ad?nUTXr*@S#1JOk`a"0o!ii)l*Dg&56(_[&762q5PmjZjMR,mWF%23:k]J[coI%ZL>3F/Q_(L)CYpN8i;]2b(7(^l!r<VEZhM]",TcWaaps"%:kduE2=Joqu]PCeNgEU8i7/)jZm(E#1@`j%`FWI+K^k1EJ5<%kG0)R%/(?iDI;1bR>H!,J6-=c26H:;p.QJ%D+lkm6VNq=hmoKUrV&2b(WI_QW%)baq&6Fa?-u'm-XW:$6J[e#TAAf0s+Kc7XEJbZj>9a@3%G1Qe8n!=)qV%STL;BW,A!\p,XLb"`U'IaSp.Y1\N"lbtsd$%?MDDrjQ=3>S48g#UX9!2/J64$'!'M9LN&-?i%,nS\X+am5iEJ4rp%Cou5&ZOhpkPX&Is">Z6F.Y5)r#c-ug$,dQF+APc8EMX5&d?HoO/j^[u2]WHBKkZ5NLb!"$S>$,F8f<^kl@?B2#,E7r*=u;pJ/F,_%ANHug"/6ok%Z#ukF?nXYAO,>O-tPYKT`PjlAkEpP=/^Y.J3jIYKpo8<)%]lLJ@&2Y`9jE'U&mq!&.MNOJ7t$2!lU?2+KZ@HE'^jh%O8s9s!f0n"H3Fj]$>-4D+Kc7U)&p=e!0Jh6<WGu/PlcbnW>%U&.0*hR!f0aH=olR,![+UE!-+h8LnXn/8c]L(.=eop!$hoL<!ja?%Vl:@q'P]*35[5`<@\a']6BWi&OPQnEei`745\)^6$6T\Q;ugp7!/R?Lik/r?T`F(E!K^>3J@JJWUm290XqUl`'L:Gk![-q0qB)l)%s%mf!ikSU85,&#89)/u$@gh6*5=k_`M3.QU$Du>QE2EJ&/+l,3+o`,\^X3""L&AtN].<M<>Ts-ppJU_%Q1?"t'@1Wor'r8;2d@O+%Th._b6N3`[73u4gs'_`&LF_FM`qturU<7tqh:+ZRr`6"Jm+uM8T((.m+7A1H_]FmHLcdCa^4,10>]bP*+`D%AI$n$uKJ4,lAAT$t%>K_T)4Cbik3c*PK%]&XV9:WGk`'D[L$kq[a6^0k@.]%l[65s4%g=D]r%AY-n)iC.2>:"sl1i8o_V!8P1jm%L1k-eEbB;KSm9k\gR%-euDC0h"3R?)`CnFS-hnYmn)Z8BgXCF3T?G0=LrmiZ)i`?Wi?RZ:,gC44J9n(ih=:b9$rNPM$D13"!N:,rn5)_(q"[C[6Y854/\^%Bnd04eOFqg<Zq*R_(D'OQ(Je0C,li;oot=9#T\&.XQS!-ZcP74aarqLpi7G03KXliFL36[$WB[:a`qX7)<cqIJO;!oigB)YBipGK%BG*ds"7b/CMi$)Jnh<.-..FKYT;P@mMHQo80EEIIB3WNU[N9Rdr!$mpUf;G@:aa;0k)c>f2Q#@De(/O^0sAUX)?-M8'122=[`iGE%?(DPDA#\96mRN58'1+hD(uU0omWRsWTL`'LaA<<f4;?AE,k8<&l.\1[*?1<t+l9IRY"f8]`\32Zc'fgKQG8fijHE`e;M(&CJd\$t%/<0tLed3K%f3jN<E#p?uM_m7QRG?mQrc$%aWsA#\jdA,/PD@$KS2%GX7FVG"DO`_`-^s]T:s:^)F8EU9D$,EKLQ6+F`Gt=J8/oAb%[4cWbCfDn.iiN+j4?C!qOt*kpkj%5lhJbZB-UNaYIg?a"m<Ekl4ebaWXtQ4^Tq[R.#[i':^OY<J"^cCqVMt=;(;bAr-Re_ca`rtb%'4V#D%p)KEYC2rJO60]H&&id'HR$#.%ePrFQ@KL1H:d>,S4&$M/WU08eu@-,MXb0i&X=l#-qttq:K#fBl&%Y+;I&:T:b\lu4)h;=%GgQ0s$<R.Y-W7P0YeF?RhAWm"E6Znq@LY9f2`.&gIIaHD\P'$e=r,)e^mTVSn1X'!EL&@p',[!b;-oujR<gu=;O49f(h8U[[:a4]%7`bmF$_\S,_8qO,Yq/J_89_Z9[/,Z30dY=Jo##XB0h\9L+Y'-qe#AI]0jP@n+1b*(9#:lA`gh*,_`4Fa.Kt`cGSbsJ'a:AO)E)9K%YA+D6eHcKa%4$dG-l>De97<kZp:Nl2!]k(0MLeW$YTB=PpXpa`6G[?)SrZRsjX]DSK#-a]M#oZpOM%?c@"AWU6_?H.UgTE,i-Qb,%b4t8/U0uB$\:2j$5)MQS'F\hg0gS3ML8ODr#"GShNXh\'O9Uu$Z#RqM+rM52!nB=cTaalZ;e'2DUO=iu7g;GWfYN&mf#=J6NI_Ok%@&,X^$QRF%i/_gh>VqjV?u2BgA0OTVW<A.dR*@_pCBTT!4UoNi[#1jpY^o/<R4KHdfYGI<^($P,\fbD9OuJbiQ7V$/8,gJt+(&oQ%(]93E\")>%`L''^CAp)4Qk")T&9RW"\o:XqQeE)=CZ&4n?g,31p'$@n(7*-l<U=L76S5MffGDP35##p=nu?/P)WETTcn?QG@[#KJ%-slDCJ]#&J]"RL2FPMGaOJ.b<,%G*]R@dgM`\#j7oXZ!P(RJd^3R`FK,>hWJKe_[^It^t?`(Rfia_#XH=#$tj;I'mIMXJo9-&8OH%'tgiDcBD>7FdlVK:9^b7\QU^WYc<8tebRr&_5a7"bNX*/98,=1)b`nPl*[h<2?@@D@C1@R>gfI"nke3)F)XF3#/8&,41LqVn;68>%IN2BkA5n;+"WJEFdY0nMa\ea+#a$Cf@/oacK>O*mLrPo@9Z<JHU?5/W7.;N4;tD=>,C#E*#i;@baIBQ?rN6nL]Lfrh]LbDB>qICJ%PJg#KUg`O+KRsfK8\qJW^?/,s7.;N,;t21D;(l3HLa5_.,DhW&#i_Xg"EBTl8=\bmJiIH]6(A'I&gmjX0dhOOR8\KQ2o!C4R?N47%bXo_%bXoW=l6O+[e4IR-e4IJUj@MWCnt]XrH."AmGu>3*4@tJW:E$*3^D>m%_$KV-@B/E9%3oSL`!BPB@;8uA?j&&Z0S1&h(t'Vq%l^AY>(l]B_R#2_pLmf/PN+>BbVIE"5U1Qk%7PH%jA(28+3[TcsnbnpB."9O<$H<"0mHFil;D6*Ue_mQPV<h"B`-pip[\)b`U`$\9%,c&uHph>6C*Gusu;L&rSGL/6N@uW3E0A=>1?g#Dq,I;/eMu:\MIuT0AcC8L>2Q=C&=2AFKTA%JsZYl.ScF&(=9jdj+JWhL$P-dnF%f@&Y_%"s.uR+kg+qlTL=gDAa#Os5e_X]!.PWGpO1.o:EVFqUOL^E3'I*-L\l1.@%H_8tX1X/kgM'tLl18)@QVh4%:';VisQl^#7(%S.0>(`^G%tjeuE6&5"ZD\kn]f5a6jMTfuV<!,.)9Z?/\n&u$'c7+ekY'G/O5YeSVFl"b/u_q-#s`d"mkZqCQj(*cMUPbVVs6']i_%@K]"HUc,baN5WehKZVaS+u$<qII.@LT/L[OI-;oaIGEi?,u)7m-S't):Upr?T/c7'2#[C14tc56`4W(1?LJi"p2XeQM14f*FMthG%B,3J]N#P$IJcnOr#pFrC<RsU-*7U-dN*;C@VDKDJAsTf-5rD%`-b`UT/tPhbG$Zc!`onCo.9![q;ff_Mctap6b^1;?0;LVX[YiZd%m3=5agF$8YgI,AM[7S#7[Y)(lCPR#6[(X+SZ[M*@db`tue_^0APPh?/,P)/D1u]$P0?&G)3m'X(EU\Ui5:DL$*iGFfoV2eGP78[c%3MgQVnZZ8Ll$_0Y-["HPWhi<R68[n=TlYVI&.un?Yl^&Jp<43am$^g-eV+SIqVYZJLNYdW3n%t;#d.jOOH,u-pW4*l`_ouZCqi#b%]24V,ldOfiI!1l+3262>8(3dp'ardc0UQSGD)s#Q0kId?1"O5t?-DS_e>"IG1qJK^Bfc]0qg'8[bd#X'<#E5`HLKjm0]V,b)Q"Gj%,^mg<:J[If*>+TX*)&i.@A-ZRnjEq"P(u`o__O*_mC;oBg"(+HFZ^8C2R^DW#"o4]8m:14ZIoncG>)rbVX]jsjj"Mo^$3RZgiNsP%iID6NAaG^E2iVohJOoMa3eLU.d@h`cF.a]DM,P#RP%V.AorWAmF;"$=]C+7A0[m#SV*kNL@;-0T@GIQj/MX[OptV]](Qof\/MTq[%G>&OTgTC1(fk7%?5PWogs6u5*$XWji:(t(kEPGBuC4^K#N2<$NSCT"FJokBA&!,ecX*2^>`!jG'4R1+/)mW&*P^=9hjU6XnY0WZD%>gC9i>W4?!`Rn"X46(S^"%\Yh[VVSKWBPM1ght4K?5F%E%7Y99c^h<]X9XPSrY/.dX3R7:6,h_-UcruL^3U5kpeU(u=QTeZR9epb%1QDeg%>Udi.N]i,\MK6bjg`Ko3uRQj$ZYTnV%i^shN*;@4Ei,)Lptl$N$gl2H^-R7`pqt\<&NdV#PHjib?*s0Fc*f\e0F_sRhO+`%;fktL*TjueVO<A]T;H7#lDV<c.?9W'/5MhQ9pd82fX*hb`l>*`I+>,UFN.J=#9aW_j5H$P!IQGN0/l`SmZ1;-*/6VC!CO,G+*&?+%.#6)-Nn<nFN3*MN$g#_Q>eY$sjqENq=<7OpU</#M7el3J50P:^L!ulWK)"Uu*'.S\iBHS?[e9J=?'V=@NPe%E._%Za#&Uba3G,)b%P]WF7[8A/+:P7hMdog8Acl%d,gsPT17+#,mqTp,#,[B-DV@;3]:4;>bjhVXKe`kRNB.R!Uqj,LErKG^(1DiEFYE.\t!A5!\X/cc%%iRRu>Z]0V`*Yh`u3^YhI^rG_ULO-?RaoI&JM]*FE<(7c"qTP@pjjVYS"8?rYF6i*IB=Qim0dnCrTgu^qB?jU<e,uI*EsBq%*+5d$%eM^I-5')JC5*W0gl$UG6bSfgg5hV?;9!h]Kk);[koXr[Ap8K+KB01EGaJ6%#F2l3FUh5ScdAb(tYslM#Xnm-5>]o1fD7O)(aGhju%SDcYsNbN6oOrl.9[6AZO0l8\I(AH:kW\\;7=?J5PSKm:LXpuIa_gte(ipe/EFB2[ijp["^Z;5GG,lF=*3TCtH>G$1EIH6?^Qi\Ij%9k#g@(r,@W)-S,()VmODqG,'3enaF3k4A-+9e*&'Ee\D'V;#M<+567di9JB$bAFd:jLut$S?X%mI;ksO8N4?2ZW+lDQ=j6F=T@_4%L^aE>Z-=!U27A0ULr[HTO=#.g690OVX'`PC7AbbuIZKuV4Q_lJ&5-6ICDp_CB['8J*l!KoKe^!uP1,ZF/SG]f(K2D7AL]2e#]1)I%BdUirSj7,=s4XPQN\lQg(C$'[W+-*PKu!m$lCp6n+qSs]O2[>?LsLm6k!Z(')UtJG%0ia.&Si;<Bd2\u/g%t6%:W<nm1uJfTQn&Z%F]kH1i'FH/:DsV_#pKh1COlAnPsCJ-6*VKK.^Z/[&_!\OhTepGA\j"$$CKCD<NGU3e<`%:PB*S@K@mu!l)1K.Bfr?Skj;83_ROkt%n/rCTP0^g,n=Ye0V/0XB+.S&<mh<sO)@nScd\c@_Jd30bruQc]ci'tKOQ"LGGlUd(+f6JbhB?!_@D_4Bq3&ms?pTOXYMEps`+ppF%:]M+e:9n<mR(o'nRAeaSVSUB5/BDeK.*7oc6"p]Y@]:;8;&'k"8*6hp8;)t56%$[;VDcAGTO)+o\B0nt52ValZs:G!GU"7B%4=$n%r1ILb-7ZJ8o:hMeK%S'aS1J@l79:0S#fSIA:qW8?$Y&Y>T138f(h0.H%7HJ+IVl-kTNF<ji@)^@YopqXY^,s+2&9^N?Wop1_1H@-%VBmQ]"pU%j&OUD2N1a+XQs`5H5/%nA\"k8j_1E*j"f\TjCd04MOp)^3'jrlo+=(&#VHHRSX\8hg`e%lR3&R-W9LkB"1rt3]34)DO%2-SHORQhpT(=fO#&GdF=7WU5^Bon0\NP1f.eJ\lPR!`>bk(:P`fW-RE`,)'gpp!\`Fi_M(N_4sRfBZ5idO/Dd_C:DJ>Oip<;>?61%l-%IH+t>pT5pRUO0LJ!,#u"'L1e:>s1^s+hBj^bn/>`t&M(&anMPpiDK[bZG_pj?1`DhL]_am*>1&[QECJ#iqJeCY6TL9-]VF2%p%;^)Yq.?VQuPXrbAPc2T`&h.2>PXrdC48'@^9o:c$9o;o/+@Xeg!+d4g0W)</Ue"r?.8hiW.?^'T'\-Ou;P[`9;P[]8<[89?'hO?l%72i%671)Ac+pB2nObW,NY6?FS0S1$RR$na=(r;(T7^=3Q;m@MU;mRYW;mRYW6WU"3?a1da;mRYW;m@M];R%DT;mRYW;m@M]ddM(]%RMKTS]iEXR7gp"[2DE*]ML*`L3p^tEpN82pHKk=Mlgb!nS7(+]@LmU0%W)[.B=?"`XAb*ek9B:ZZW@=`VnN(BT6B##]$!_C\[p\c%m0$r;%G#\!2,RgWY?r(krdRTjg;iXHH<27!Kr]*@"6VZ@8'FFh8+ALW\NnhqZbQhU3mdKC'PuUFK5(kgIeuC2#M1ql\Z0'd)rH:+%_C<;mJPkjC(Q>lUbDk8s2niUg3reL,PNOUH[auVf4?Jr/l1Lpqfn,fVc9[]\Z.90)E"5VFD@N$u35_*.8nA]q0T'nS]jUh5_poq&%4be%5]o0>-(f3LN43_^GUDV;JE%A.7"PobgiV\R1p4?00oa)(/O4CSq7+Y6D=*DL4C6]AJ`@0_PHbg\PiGPd7hUQZdLX0:HpFj7.%I.b=j2W(#e\T.E6o`n8OIsgkGq:=\tNMg\:r1D6QK9n5/h`(SN08l`H2W)B;Ru=c%?N$)Fi0"Cqq!c7<QT"gr4HSK-~>%AI9_PrivateDataEnd